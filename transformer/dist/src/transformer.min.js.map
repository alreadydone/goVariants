{"version":3,"sources":["src/node_modules/browser-pack/_prelude.js","src/node_modules/go-variants-engine/node_modules/lodash/_DataView.js","src/node_modules/go-variants-engine/node_modules/lodash/_Hash.js","src/node_modules/go-variants-engine/node_modules/lodash/_ListCache.js","src/node_modules/go-variants-engine/node_modules/lodash/_Map.js","src/transformer.min.js","src/node_modules/go-variants-engine/node_modules/lodash/_MapCache.js","src/node_modules/go-variants-engine/node_modules/lodash/_Promise.js","src/node_modules/go-variants-engine/node_modules/lodash/_Set.js","src/node_modules/go-variants-engine/node_modules/lodash/_SetCache.js","src/node_modules/go-variants-engine/node_modules/lodash/_Stack.js","src/node_modules/go-variants-engine/node_modules/lodash/_Symbol.js","src/node_modules/go-variants-engine/node_modules/lodash/_Uint8Array.js","src/node_modules/go-variants-engine/node_modules/lodash/_WeakMap.js","src/node_modules/go-variants-engine/node_modules/lodash/_addMapEntry.js","src/node_modules/go-variants-engine/node_modules/lodash/_addSetEntry.js","src/node_modules/go-variants-engine/node_modules/lodash/_arrayEach.js","src/node_modules/go-variants-engine/node_modules/lodash/_arrayFilter.js","src/node_modules/go-variants-engine/node_modules/lodash/_arrayLikeKeys.js","src/node_modules/go-variants-engine/node_modules/lodash/_arrayMap.js","src/node_modules/go-variants-engine/node_modules/lodash/_arrayPush.js","src/node_modules/go-variants-engine/node_modules/lodash/_arrayReduce.js","src/node_modules/go-variants-engine/node_modules/lodash/_arraySome.js","src/node_modules/go-variants-engine/node_modules/lodash/_assignValue.js","src/node_modules/go-variants-engine/node_modules/lodash/_assocIndexOf.js","src/node_modules/go-variants-engine/node_modules/lodash/_baseAssign.js","src/node_modules/go-variants-engine/node_modules/lodash/_baseAssignIn.js","src/node_modules/go-variants-engine/node_modules/lodash/_baseAssignValue.js","src/node_modules/go-variants-engine/node_modules/lodash/_baseClone.js","src/node_modules/go-variants-engine/node_modules/lodash/_baseCreate.js","src/node_modules/go-variants-engine/node_modules/lodash/_baseFindIndex.js","src/node_modules/go-variants-engine/node_modules/lodash/_baseGet.js","src/node_modules/go-variants-engine/node_modules/lodash/_baseGetAllKeys.js","src/node_modules/go-variants-engine/node_modules/lodash/_baseGetTag.js","src/node_modules/go-variants-engine/node_modules/lodash/_baseIsArguments.js","src/node_modules/go-variants-engine/node_modules/lodash/_baseHasIn.js","src/node_modules/go-variants-engine/node_modules/lodash/_baseIsEqual.js","src/node_modules/go-variants-engine/node_modules/lodash/_baseIsEqualDeep.js","src/node_modules/go-variants-engine/node_modules/lodash/_baseIsMatch.js","src/node_modules/go-variants-engine/node_modules/lodash/_baseIsNative.js","src/node_modules/go-variants-engine/node_modules/lodash/_baseIsTypedArray.js","src/node_modules/go-variants-engine/node_modules/lodash/_baseKeys.js","src/node_modules/go-variants-engine/node_modules/lodash/_baseIteratee.js","src/node_modules/go-variants-engine/node_modules/lodash/_baseKeysIn.js","src/node_modules/go-variants-engine/node_modules/lodash/_baseMatches.js","src/node_modules/go-variants-engine/node_modules/lodash/_baseMatchesProperty.js","src/node_modules/go-variants-engine/node_modules/lodash/_baseProperty.js","src/node_modules/go-variants-engine/node_modules/lodash/_baseToString.js","src/node_modules/go-variants-engine/node_modules/lodash/_basePropertyDeep.js","src/node_modules/go-variants-engine/node_modules/lodash/_baseUnary.js","src/node_modules/go-variants-engine/node_modules/lodash/_baseTimes.js","src/node_modules/go-variants-engine/node_modules/lodash/_cloneArrayBuffer.js","src/node_modules/go-variants-engine/node_modules/lodash/_cloneBuffer.js","src/node_modules/go-variants-engine/node_modules/lodash/_cacheHas.js","src/node_modules/go-variants-engine/node_modules/lodash/_castPath.js","src/node_modules/go-variants-engine/node_modules/lodash/_cloneDataView.js","src/node_modules/go-variants-engine/node_modules/lodash/_cloneSymbol.js","src/node_modules/go-variants-engine/node_modules/lodash/_cloneMap.js","src/node_modules/go-variants-engine/node_modules/lodash/_cloneRegExp.js","src/node_modules/go-variants-engine/node_modules/lodash/_copyArray.js","src/node_modules/go-variants-engine/node_modules/lodash/_cloneSet.js","src/node_modules/go-variants-engine/node_modules/lodash/_copyObject.js","src/node_modules/go-variants-engine/node_modules/lodash/_cloneTypedArray.js","src/node_modules/go-variants-engine/node_modules/lodash/_copySymbols.js","src/node_modules/go-variants-engine/node_modules/lodash/_coreJsData.js","src/node_modules/go-variants-engine/node_modules/lodash/_equalArrays.js","src/node_modules/go-variants-engine/node_modules/lodash/_copySymbolsIn.js","src/node_modules/go-variants-engine/node_modules/lodash/_defineProperty.js","src/node_modules/go-variants-engine/node_modules/lodash/_equalByTag.js","src/node_modules/go-variants-engine/node_modules/lodash/_getAllKeys.js","src/node_modules/go-variants-engine/node_modules/lodash/_equalObjects.js","src/node_modules/go-variants-engine/node_modules/lodash/_getNative.js","src/node_modules/go-variants-engine/node_modules/lodash/_freeGlobal.js","src/node_modules/go-variants-engine/node_modules/lodash/_getAllKeysIn.js","src/node_modules/go-variants-engine/node_modules/lodash/_getRawTag.js","src/node_modules/go-variants-engine/node_modules/lodash/_getMapData.js","src/node_modules/go-variants-engine/node_modules/lodash/_getSymbols.js","src/node_modules/go-variants-engine/node_modules/lodash/_getMatchData.js","src/node_modules/go-variants-engine/node_modules/lodash/_getPrototype.js","src/node_modules/go-variants-engine/node_modules/lodash/_getTag.js","src/node_modules/go-variants-engine/node_modules/lodash/_getSymbolsIn.js","src/node_modules/go-variants-engine/node_modules/lodash/_hashGet.js","src/node_modules/go-variants-engine/node_modules/lodash/_getValue.js","src/node_modules/go-variants-engine/node_modules/lodash/_hasPath.js","src/node_modules/go-variants-engine/node_modules/lodash/_hashClear.js","src/node_modules/go-variants-engine/node_modules/lodash/_initCloneArray.js","src/node_modules/go-variants-engine/node_modules/lodash/_hashDelete.js","src/node_modules/go-variants-engine/node_modules/lodash/_initCloneByTag.js","src/node_modules/go-variants-engine/node_modules/lodash/_hashHas.js","src/node_modules/go-variants-engine/node_modules/lodash/_hashSet.js","src/node_modules/go-variants-engine/node_modules/lodash/_initCloneObject.js","src/node_modules/go-variants-engine/node_modules/lodash/_isStrictComparable.js","src/node_modules/go-variants-engine/node_modules/lodash/_isIndex.js","src/node_modules/go-variants-engine/node_modules/lodash/_isKey.js","src/node_modules/go-variants-engine/node_modules/lodash/_listCacheGet.js","src/node_modules/go-variants-engine/node_modules/lodash/_isKeyable.js","src/node_modules/go-variants-engine/node_modules/lodash/_isMasked.js","src/node_modules/go-variants-engine/node_modules/lodash/_listCacheSet.js","src/node_modules/go-variants-engine/node_modules/lodash/_isPrototype.js","src/node_modules/go-variants-engine/node_modules/lodash/_listCacheClear.js","src/node_modules/go-variants-engine/node_modules/lodash/_listCacheDelete.js","src/node_modules/go-variants-engine/node_modules/lodash/_mapCacheSet.js","src/node_modules/go-variants-engine/node_modules/lodash/_listCacheHas.js","src/node_modules/go-variants-engine/node_modules/lodash/_memoizeCapped.js","src/node_modules/go-variants-engine/node_modules/lodash/_mapCacheClear.js","src/node_modules/go-variants-engine/node_modules/lodash/_mapCacheDelete.js","src/node_modules/go-variants-engine/node_modules/lodash/_mapCacheGet.js","src/node_modules/go-variants-engine/node_modules/lodash/_mapCacheHas.js","src/node_modules/go-variants-engine/node_modules/lodash/_overArg.js","src/node_modules/go-variants-engine/node_modules/lodash/_mapToArray.js","src/node_modules/go-variants-engine/node_modules/lodash/_matchesStrictComparable.js","src/node_modules/go-variants-engine/node_modules/lodash/_setCacheAdd.js","src/node_modules/go-variants-engine/node_modules/lodash/_setToArray.js","src/node_modules/go-variants-engine/node_modules/lodash/_nativeCreate.js","src/node_modules/go-variants-engine/node_modules/lodash/_nativeKeys.js","src/node_modules/go-variants-engine/node_modules/lodash/_nativeKeysIn.js","src/node_modules/go-variants-engine/node_modules/lodash/_nodeUtil.js","src/node_modules/go-variants-engine/node_modules/lodash/_objectToString.js","src/node_modules/go-variants-engine/node_modules/lodash/_stackSet.js","src/node_modules/go-variants-engine/node_modules/lodash/_root.js","src/node_modules/go-variants-engine/node_modules/lodash/_stringToPath.js","src/node_modules/go-variants-engine/node_modules/lodash/_setCacheHas.js","src/node_modules/go-variants-engine/node_modules/lodash/_toKey.js","src/node_modules/go-variants-engine/node_modules/lodash/_stackClear.js","src/node_modules/go-variants-engine/node_modules/lodash/clone.js","src/node_modules/go-variants-engine/node_modules/lodash/_stackDelete.js","src/node_modules/go-variants-engine/node_modules/lodash/_stackGet.js","src/node_modules/go-variants-engine/node_modules/lodash/_stackHas.js","src/node_modules/go-variants-engine/node_modules/lodash/findIndex.js","src/node_modules/go-variants-engine/node_modules/lodash/_toSource.js","src/node_modules/go-variants-engine/node_modules/lodash/eq.js","src/node_modules/go-variants-engine/node_modules/lodash/get.js","src/node_modules/go-variants-engine/node_modules/lodash/hasIn.js","src/node_modules/go-variants-engine/node_modules/lodash/identity.js","src/node_modules/go-variants-engine/node_modules/lodash/isFunction.js","src/node_modules/go-variants-engine/node_modules/lodash/isArguments.js","src/node_modules/go-variants-engine/node_modules/lodash/isLength.js","src/node_modules/go-variants-engine/node_modules/lodash/isArray.js","src/node_modules/go-variants-engine/node_modules/lodash/isArrayLike.js","src/node_modules/go-variants-engine/node_modules/lodash/isBuffer.js","src/node_modules/go-variants-engine/node_modules/lodash/isEqual.js","src/node_modules/go-variants-engine/node_modules/lodash/isObject.js","src/node_modules/go-variants-engine/node_modules/lodash/isObjectLike.js","src/node_modules/go-variants-engine/node_modules/lodash/memoize.js","src/node_modules/go-variants-engine/node_modules/lodash/isSymbol.js","src/node_modules/go-variants-engine/node_modules/lodash/isTypedArray.js","src/node_modules/go-variants-engine/node_modules/lodash/keys.js","src/node_modules/go-variants-engine/node_modules/lodash/keysIn.js","src/node_modules/go-variants-engine/node_modules/lodash/toFinite.js","src/node_modules/go-variants-engine/node_modules/lodash/property.js","src/node_modules/go-variants-engine/node_modules/lodash/stubArray.js","src/node_modules/go-variants-engine/node_modules/lodash/stubFalse.js","src/node_modules/go-variants-engine/src/engine.js","src/node_modules/go-variants-engine/node_modules/lodash/toInteger.js","src/node_modules/go-variants-engine/node_modules/lodash/toNumber.js","src/node_modules/go-variants-engine/node_modules/lodash/toString.js","src/node_modules/lodash/_baseUniq.js","src/node_modules/lodash/_arrayIncludes.js","src/node_modules/lodash/_arrayIncludesWith.js","src/node_modules/lodash/_freeGlobal.js","src/node_modules/lodash/_baseFlatten.js","src/node_modules/lodash/_baseIndexOf.js","src/node_modules/lodash/_baseIsNaN.js","src/node_modules/lodash/_strictIndexOf.js","src/node_modules/lodash/noop.js","src/node_modules/lodash/_createSet.js","src/node_modules/lodash/uniqBy.js","src/node_modules/smartgame/index.js","src/node_modules/lodash/_isFlattenable.js","src/node_modules/lodash/flatten.js","src/node_modules/smartgamer/index.js","src/src/transformer.js"],"names":["f","exports","_typeof","module","define","amd","window","global","self","this","go_variants_transformer","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","DataView","getNative","./_getNative","./_root","2","Hash","entries","index","clear","entry","set","hashClear","hashDelete","hashGet","hashHas","hashSet","prototype","get","has","./_hashClear","./_hashGet","./_hashHas","./_hashSet","3","ListCache","listCacheClear","listCacheDelete","listCacheGet","listCacheHas","listCacheSet","./_listCacheClear","./_listCacheGet","./_listCacheHas","./_listCacheSet","4","Map","5","MapCache","mapCacheClear","mapCacheDelete","mapCacheGet","mapCacheHas","mapCacheSet","./_mapCacheClear","./_mapCacheGet","./_mapCacheHas","./_mapCacheSet","6","Promise","7","Set","8","SetCache","values","__data__","add","setCacheAdd","setCacheHas","push","./_MapCache","./_setCacheHas","9","Stack","data","size","stackClear","stackDelete","stackGet","stackHas","stackSet","./_ListCache","./_stackDelete","./_stackGet","./_stackHas","./_stackSet","10","Symbol","11","Uint8Array","12","WeakMap","13","map","pair","14","value","15","array","iteratee","16","predicate","resIndex","result","17","baseTimes","isArguments","isArray","isBuffer","isIndex","isTypedArray","hasOwnProperty","Object","inherited","isArr","isArg","isBuff","isType","skipIndexes","String","key","./_isIndex","./isArguments","./isArray","./isBuffer","./isTypedArray","18","Array","19","offset","20","arrayPush","accumulator","initAccum","21","22","baseAssignValue","eq","object","objValue","undefined","./_baseAssignValue","assignValue","./eq","24","copyObject","keys","source","./_copyObject","./keys","25","keysIn","baseAssignIn","defineProperty","configurable","enumerable","writable","./_defineProperty","27","baseClone","bitmask","customizer","stack","isDeep","CLONE_DEEP_FLAG","isFlat","CLONE_FLAT_FLAG","isFull","CLONE_SYMBOLS_FLAG","isObject","initCloneArray","copyArray","tag","getTag","isFunc","funcTag","genTag","cloneBuffer","objectTag","argsTag","initCloneObject","copySymbolsIn","copySymbols","baseAssign","cloneableTags","initCloneByTag","stacked","keysFunc","getAllKeysIn","getAllKeys","props","arrayEach","subValue","./_Stack","./_arrayEach","./_assignValue","./_baseAssign","./_baseAssignIn","./_cloneBuffer","./_copyArray","./_copySymbols","./_copySymbolsIn","./_getAllKeys","./_getAllKeysIn","./_getTag","./_initCloneArray","./_initCloneByTag","./_initCloneObject","./isObject","28","objectCreate","create","baseCreate","proto","fromIndex","fromRight","30","castPath","toKey","path","./_castPath","baseGetAllKeys","31","symbolsFunc","./_arrayPush","32","getRawTag","objectToString","nullTag","undefinedTag","symToStringTag","toStringTag","./_Symbol","./_objectToString","33","34","baseIsEqualDeep","baseGetTag","isObjectLike","./_baseGetTag","./isObjectLike","35","baseIsEqual","other","./_baseIsEqualDeep","objectProto","equalArrays","equalByTag","equalObjects","COMPARE_PARTIAL_FLAG","arrayTag","equalFunc","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","./_equalArrays","./_equalByTag","./_equalObjects","37","COMPARE_UNORDERED_FLAG","matchData","noCustomizer","srcValue","./_baseIsEqual","38","isFunction","isMasked","toSource","reIsHostCtor","funcProto","Function","funcToString","toString","reIsNative","RegExp","replace","test","./_isMasked","./_toSource","./isFunction","39","isLength","typedArrayTags","nativeKeys","40","baseMatches","baseMatchesProperty","identity","property","./_baseMatches","./_baseMatchesProperty","./identity","./property","41","isPrototype","./_isPrototype","./_nativeKeys","42","nativeKeysIn","isProto","43","baseIsMatch","getMatchData","matchesStrictComparable","./_baseIsMatch","./_getMatchData","./_matchesStrictComparable","44","hasIn","isKey","isStrictComparable","./_isKey","./_isStrictComparable","./_toKey","./get","./hasIn","45","46","baseToString","baseGet","./_baseGet","47","48","arrayMap","isSymbol","symbolToString","INFINITY","symbolProto","arrayBuffer","constructor","byteLength","func","50","moduleExports","freeModule","cache","51","stringToPath","buffer","cloneArrayBuffer","dataView","./_Uint8Array","53","root","freeExports","nodeType","Buffer","allocUnsafe","slice","copy","54","byteOffset","./_cloneArrayBuffer","addMapEntry","arrayReduce","mapToArray","cloneFunc","./_addMapEntry","./_arrayReduce","./_mapToArray","56","reFlags","regexp","exec","lastIndex","57","addSetEntry","setToArray","./_addSetEntry","58","symbolValueOf","valueOf","symbol","59","typedArray","getSymbols","61","isNew","newValue","arrLength","62","./_getSymbols","63","getSymbolsIn","cacheHas","othIndex","64","arrValue","othValue","coreJsData","66","arraySome","isPartial","othLength","seen","compared","./_SetCache","./_arraySome","./_cacheHas","67","boolTag","dateTag","errorTag","mapTag","numberTag","regexpTag","setTag","stringTag","symbolTag","arrayBufferTag","dataViewTag","name","message","convert","./_setToArray","68","objProps","objLength","skipCtor","objCtor","othCtor","69","freeGlobal","70","./_baseGetAllKeys","71","./_getSymbolsIn","./keysIn","72","isKeyable","./_isKeyable","73","74","baseIsNative","getValue","./_baseIsNative","./_getValue","75","getPrototype","overArg","getPrototypeOf","./_overArg","nativeObjectToString","isOwn","unmasked","77","arrayFilter","stubArray","propertyIsEnumerable","nativeGetSymbols","getOwnPropertySymbols","./_arrayFilter","./stubArray","78","./_getPrototype","79","promiseTag","weakMapTag","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","ArrayBuffer","resolve","Ctor","ctorString","./_DataView","./_Map","./_Promise","./_Set","./_WeakMap","80","81","hasFunc","./isLength","82","nativeCreate","84","HASH_UNDEFINED","./_nativeCreate","86","input","88","cloneDataView","cloneMap","cloneRegExp","cloneSet","cloneSymbol","cloneTypedArray","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","./_cloneDataView","./_cloneMap","./_cloneRegExp","./_cloneSet","./_cloneSymbol","./_cloneTypedArray","89","./_baseCreate","90","MAX_SAFE_INTEGER","reIsUint","91","reIsDeepProp","reIsPlainProp","type","92","93","maskSrcKey","uid","IE_PROTO","./_coreJsData","95","96","97","assocIndexOf","splice","pop","./_assocIndexOf","getMapData","100","101","hash","string","./_Hash","102","./_getMapData","103","104","105","106","forEach","107","108","memoize","MAX_MEMOIZE_SIZE","./memoize","111","112","freeProcess","process","nodeUtil","binding","./_freeGlobal","113","114","transform","arg","freeSelf","rePropName","116","117","118","119","121","122","123","LARGE_ARRAY_SIZE","pairs","124","reLeadingDot","reEscapeChar","memoizeCapped","match","number","quote","./_memoizeCapped","./isSymbol","126","127","./_baseClone","128","129","baseFindIndex","baseIteratee","toInteger","nativeMax","Math","max","./_baseFindIndex","./_baseIteratee","./toInteger","130","defaultValue","131","baseHasIn","hasPath","./_baseHasIn","./_hasPath","132","133","baseIsArguments","arguments","./_baseIsArguments","134","135","136","stubFalse","./stubFalse","137","138","asyncTag","proxyTag","139","140","141","142","memoized","143","baseIsTypedArray","baseUnary","nodeIsTypedArray","./_baseIsTypedArray","./_baseUnary","./_nodeUtil","144","arrayLikeKeys","baseKeys","isArrayLike","./_arrayLikeKeys","./_baseKeys","./isArrayLike","145","baseKeysIn","./_baseKeysIn","146","resolver","TypeError","FUNC_ERROR_TEXT","args","apply","Cache","147","baseProperty","basePropertyDeep","./_baseProperty","./_basePropertyDeep","148","149","150","toNumber","MAX_INTEGER","newPoint","point","toFinite","remainder","./toFinite","152","NAN","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","isBinary","blackScore","totalWhiteDead","totalBlackPrisoners","./_baseToString","removed","154","options","myIndexOf","b","_fi","x","_iseq","_clone","$","rules","suicide","superko","komi","boardDimensions","boardMode","board","blackStones","whiteStones","nextPlayer","captured","exportData","loadData","getNeighbours","isEmpty","getColour","chainHasLiberty","startPoint","chainColour","stopColour","chain","toExplore","neighbours","newColour","getComponent","deadStones","points","colour","isDead","isBlackTerritory","score","whiteComponents","blackComponents","emptyComponents","totalBlackDead","totalWhitePrisoners","totalBlackTerritory","totalWhiteTerritory","whiteScore","RE","empty","removeChain","toRemoveFrom","j","play","playerColour","neighbour","oppColour","getOppositeColour","includes","lodash/isEqual","155","dup","156","./_hashDelete","157","outer","158","computed","159","comparator","isCommon","160","seenIndex","161","162","./_setCacheAdd","163","164","167","168","baseIndexOf","./_baseIndexOf","169","./_baseTimes","171","172","173","174","175","176","baseFlatten","depth","isStrict","isFlattenable","./_isFlattenable","177","178","./_getRawTag","181","baseIsNaN","strictIndexOf","./_baseIsNaN","./_strictIndexOf","182","183","185","186","187","188","190","191","192","193","194","195","196","./_arrayMap","197","198","arrayIncludes","arrayIncludesWith","createSet","./_arrayIncludes","./_createSet","199","./_stringToPath","./toString","201","202","noop","./noop","205","206","207","208","209","210","211","212","213","214","215","216","218","uniqBy","219","220","221","spreadableSymbol","isConcatSpreadable","222","beginSequence","223","224","sequence","collection","226","227","gameTrees","228","229","newSequence","parent","230","232","sgf","substring","233","234","endSequence","235","236","237","238","node","nodes","242","propValue","243","244","firstPropEnd","245","246","247","248","249","propValueBegin","indexOf","propIdent","250","251","252","lastPropIdent","253","254","255","256","unrecognized","257","258","259","260","parse","261","./_baseFlatten","262","263","264","265","266","generate","record","268","stringifySequences","contents","269","sequences","270","271","272","273","nodeString","274","prop","275","join","276","277","278","279","280","281","282","smartgame","283","284","Smartgamer","baseUniq","./_baseUniq","286","parser","console","warn","initial","search","287","init","game","reset","load","newSmartgame","games","selectGame","m","getSmartgame","variations","localNodes","localIndex","next","variation","previous","last","totalMoves","first","goTo","pathTransform","getGameInfo","localSequence","moves","comment","text","C","translateCoordinates","alphaCoordinates","coordinateLabels","intersection","outputType","verbose","stringify","output","split","Number","shift","288","_extends","coords2String","coords","target","inverseProjectOnFlat","multiple","_uniqBy","modulo","projectionSettings","wraparound","goThroughTree","state","wrappedGame","pending","currentPath","tGo","nbVariations","hasSiblings","pathForLater","tGoData","nextNode","fromStack","_flatten","y","sourceSgfMessage","addPasses","transformToString","addComments","coordinatesType","wraparoundMarkersType","fromCharCode","translateCoordinate","c","charCodeAt","projectOnLine","isVertical","ceil","projectOnFlat","p","modX","modY","setUpMarkers","wraparoundAndCoords","middles","floor","_i","_i2","coordIndex","_label2","toUpperCase","_i3","_label3","inverseTransform","smartgamer","cleanerRegEx","cleanComments","cleanLabels","labels","LB","filter","CM","CT","SZ","AP","SO","cleanSourceRegex","siblingMoves","isBlack","AB","B","addedStones","AW","playedStone","W","move","moveAsArray","isAPass","moveHasCoords","pathForParent","XX","CR","AE","sgfProperty","deleteNodes","seq","tmpI","index2","tSgf","isPass","passes","sz","setLabels","labels2","_loop","concat","playResult","error","projectedCoords","toAdd","toRemove","MN","go-variants-engine","lodash/findIndex","lodash/flatten","lodash/uniqBy"],"mappings":"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","file":"transformer.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView');\n\nmodule.exports = DataView;\n","var hashClear = require('./_hashClear'),\n    hashDelete = require('./_hashDelete'),\n    hashGet = require('./_hashGet'),\n    hashHas = require('./_hashHas'),\n    hashSet = require('./_hashSet');\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\nmodule.exports = Hash;\n","var listCacheClear = require('./_listCacheClear'),\n    listCacheDelete = require('./_listCacheDelete'),\n    listCacheGet = require('./_listCacheGet'),\n    listCacheHas = require('./_listCacheHas'),\n    listCacheSet = require('./_listCacheSet');\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\nmodule.exports = ListCache;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map');\n\nmodule.exports = Map;\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.go_variants_transformer = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\nvar getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView');\n\nmodule.exports = DataView;\n\n},{\"./_getNative\":74,\"./_root\":115}],2:[function(require,module,exports){\nvar hashClear = require('./_hashClear'),\n    hashDelete = require('./_hashDelete'),\n    hashGet = require('./_hashGet'),\n    hashHas = require('./_hashHas'),\n    hashSet = require('./_hashSet');\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\nmodule.exports = Hash;\n\n},{\"./_hashClear\":82,\"./_hashDelete\":83,\"./_hashGet\":84,\"./_hashHas\":85,\"./_hashSet\":86}],3:[function(require,module,exports){\nvar listCacheClear = require('./_listCacheClear'),\n    listCacheDelete = require('./_listCacheDelete'),\n    listCacheGet = require('./_listCacheGet'),\n    listCacheHas = require('./_listCacheHas'),\n    listCacheSet = require('./_listCacheSet');\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\nmodule.exports = ListCache;\n\n},{\"./_listCacheClear\":96,\"./_listCacheDelete\":97,\"./_listCacheGet\":98,\"./_listCacheHas\":99,\"./_listCacheSet\":100}],4:[function(require,module,exports){\nvar getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map');\n\nmodule.exports = Map;\n\n},{\"./_getNative\":74,\"./_root\":115}],5:[function(require,module,exports){\nvar mapCacheClear = require('./_mapCacheClear'),\n    mapCacheDelete = require('./_mapCacheDelete'),\n    mapCacheGet = require('./_mapCacheGet'),\n    mapCacheHas = require('./_mapCacheHas'),\n    mapCacheSet = require('./_mapCacheSet');\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\nmodule.exports = MapCache;\n\n},{\"./_mapCacheClear\":101,\"./_mapCacheDelete\":102,\"./_mapCacheGet\":103,\"./_mapCacheHas\":104,\"./_mapCacheSet\":105}],6:[function(require,module,exports){\nvar getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Promise = getNative(root, 'Promise');\n\nmodule.exports = Promise;\n\n},{\"./_getNative\":74,\"./_root\":115}],7:[function(require,module,exports){\nvar getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Set = getNative(root, 'Set');\n\nmodule.exports = Set;\n\n},{\"./_getNative\":74,\"./_root\":115}],8:[function(require,module,exports){\nvar MapCache = require('./_MapCache'),\n    setCacheAdd = require('./_setCacheAdd'),\n    setCacheHas = require('./_setCacheHas');\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\nmodule.exports = SetCache;\n\n},{\"./_MapCache\":5,\"./_setCacheAdd\":116,\"./_setCacheHas\":117}],9:[function(require,module,exports){\nvar ListCache = require('./_ListCache'),\n    stackClear = require('./_stackClear'),\n    stackDelete = require('./_stackDelete'),\n    stackGet = require('./_stackGet'),\n    stackHas = require('./_stackHas'),\n    stackSet = require('./_stackSet');\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\nmodule.exports = Stack;\n\n},{\"./_ListCache\":3,\"./_stackClear\":119,\"./_stackDelete\":120,\"./_stackGet\":121,\"./_stackHas\":122,\"./_stackSet\":123}],10:[function(require,module,exports){\nvar root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n\n},{\"./_root\":115}],11:[function(require,module,exports){\nvar root = require('./_root');\n\n/** Built-in value references. */\nvar Uint8Array = root.Uint8Array;\n\nmodule.exports = Uint8Array;\n\n},{\"./_root\":115}],12:[function(require,module,exports){\nvar getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar WeakMap = getNative(root, 'WeakMap');\n\nmodule.exports = WeakMap;\n\n},{\"./_getNative\":74,\"./_root\":115}],13:[function(require,module,exports){\n/**\n * Adds the key-value `pair` to `map`.\n *\n * @private\n * @param {Object} map The map to modify.\n * @param {Array} pair The key-value pair to add.\n * @returns {Object} Returns `map`.\n */\nfunction addMapEntry(map, pair) {\n  // Don't return `map.set` because it's not chainable in IE 11.\n  map.set(pair[0], pair[1]);\n  return map;\n}\n\nmodule.exports = addMapEntry;\n\n},{}],14:[function(require,module,exports){\n/**\n * Adds `value` to `set`.\n *\n * @private\n * @param {Object} set The set to modify.\n * @param {*} value The value to add.\n * @returns {Object} Returns `set`.\n */\nfunction addSetEntry(set, value) {\n  // Don't return `set.add` because it's not chainable in IE 11.\n  set.add(value);\n  return set;\n}\n\nmodule.exports = addSetEntry;\n\n},{}],15:[function(require,module,exports){\n/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nmodule.exports = arrayEach;\n\n},{}],16:[function(require,module,exports){\n/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayFilter;\n\n},{}],17:[function(require,module,exports){\nvar baseTimes = require('./_baseTimes'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isIndex = require('./_isIndex'),\n    isTypedArray = require('./isTypedArray');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayLikeKeys;\n\n},{\"./_baseTimes\":47,\"./_isIndex\":90,\"./isArguments\":133,\"./isArray\":134,\"./isBuffer\":136,\"./isTypedArray\":143}],18:[function(require,module,exports){\n/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n\n},{}],19:[function(require,module,exports){\n/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\nmodule.exports = arrayPush;\n\n},{}],20:[function(require,module,exports){\n/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\nmodule.exports = arrayReduce;\n\n},{}],21:[function(require,module,exports){\n/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arraySome;\n\n},{}],22:[function(require,module,exports){\nvar baseAssignValue = require('./_baseAssignValue'),\n    eq = require('./eq');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nmodule.exports = assignValue;\n\n},{\"./_baseAssignValue\":26,\"./eq\":128}],23:[function(require,module,exports){\nvar eq = require('./eq');\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = assocIndexOf;\n\n},{\"./eq\":128}],24:[function(require,module,exports){\nvar copyObject = require('./_copyObject'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\nmodule.exports = baseAssign;\n\n},{\"./_copyObject\":61,\"./keys\":144}],25:[function(require,module,exports){\nvar copyObject = require('./_copyObject'),\n    keysIn = require('./keysIn');\n\n/**\n * The base implementation of `_.assignIn` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssignIn(object, source) {\n  return object && copyObject(source, keysIn(source), object);\n}\n\nmodule.exports = baseAssignIn;\n\n},{\"./_copyObject\":61,\"./keysIn\":145}],26:[function(require,module,exports){\nvar defineProperty = require('./_defineProperty');\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nmodule.exports = baseAssignValue;\n\n},{\"./_defineProperty\":65}],27:[function(require,module,exports){\nvar Stack = require('./_Stack'),\n    arrayEach = require('./_arrayEach'),\n    assignValue = require('./_assignValue'),\n    baseAssign = require('./_baseAssign'),\n    baseAssignIn = require('./_baseAssignIn'),\n    cloneBuffer = require('./_cloneBuffer'),\n    copyArray = require('./_copyArray'),\n    copySymbols = require('./_copySymbols'),\n    copySymbolsIn = require('./_copySymbolsIn'),\n    getAllKeys = require('./_getAllKeys'),\n    getAllKeysIn = require('./_getAllKeysIn'),\n    getTag = require('./_getTag'),\n    initCloneArray = require('./_initCloneArray'),\n    initCloneByTag = require('./_initCloneByTag'),\n    initCloneObject = require('./_initCloneObject'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isObject = require('./isObject'),\n    keys = require('./keys');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Deep clone\n *  2 - Flatten inherited properties\n *  4 - Clone symbols\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\n  var result,\n      isDeep = bitmask & CLONE_DEEP_FLAG,\n      isFlat = bitmask & CLONE_FLAT_FLAG,\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = (isFlat || isFunc) ? {} : initCloneObject(value);\n      if (!isDeep) {\n        return isFlat\n          ? copySymbolsIn(value, baseAssignIn(result, value))\n          : copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, baseClone, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  var keysFunc = isFull\n    ? (isFlat ? getAllKeysIn : getAllKeys)\n    : (isFlat ? keysIn : keys);\n\n  var props = isArr ? undefined : keysFunc(value);\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n  });\n  return result;\n}\n\nmodule.exports = baseClone;\n\n},{\"./_Stack\":9,\"./_arrayEach\":15,\"./_assignValue\":22,\"./_baseAssign\":24,\"./_baseAssignIn\":25,\"./_cloneBuffer\":53,\"./_copyArray\":60,\"./_copySymbols\":62,\"./_copySymbolsIn\":63,\"./_getAllKeys\":70,\"./_getAllKeysIn\":71,\"./_getTag\":79,\"./_initCloneArray\":87,\"./_initCloneByTag\":88,\"./_initCloneObject\":89,\"./isArray\":134,\"./isBuffer\":136,\"./isObject\":140,\"./keys\":144}],28:[function(require,module,exports){\nvar isObject = require('./isObject');\n\n/** Built-in value references. */\nvar objectCreate = Object.create;\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(proto) {\n    if (!isObject(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\nmodule.exports = baseCreate;\n\n},{\"./isObject\":140}],29:[function(require,module,exports){\n/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = baseFindIndex;\n\n},{}],30:[function(require,module,exports){\nvar castPath = require('./_castPath'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\nmodule.exports = baseGet;\n\n},{\"./_castPath\":51,\"./_toKey\":125}],31:[function(require,module,exports){\nvar arrayPush = require('./_arrayPush'),\n    isArray = require('./isArray');\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nmodule.exports = baseGetAllKeys;\n\n},{\"./_arrayPush\":19,\"./isArray\":134}],32:[function(require,module,exports){\nvar Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n\n},{\"./_Symbol\":10,\"./_getRawTag\":76,\"./_objectToString\":113}],33:[function(require,module,exports){\n/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nmodule.exports = baseHasIn;\n\n},{}],34:[function(require,module,exports){\nvar baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;\n\n},{\"./_baseGetTag\":32,\"./isObjectLike\":141}],35:[function(require,module,exports){\nvar baseIsEqualDeep = require('./_baseIsEqualDeep'),\n    isObjectLike = require('./isObjectLike');\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nmodule.exports = baseIsEqual;\n\n},{\"./_baseIsEqualDeep\":36,\"./isObjectLike\":141}],36:[function(require,module,exports){\nvar Stack = require('./_Stack'),\n    equalArrays = require('./_equalArrays'),\n    equalByTag = require('./_equalByTag'),\n    equalObjects = require('./_equalObjects'),\n    getTag = require('./_getTag'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isTypedArray = require('./isTypedArray');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nmodule.exports = baseIsEqualDeep;\n\n},{\"./_Stack\":9,\"./_equalArrays\":66,\"./_equalByTag\":67,\"./_equalObjects\":68,\"./_getTag\":79,\"./isArray\":134,\"./isBuffer\":136,\"./isTypedArray\":143}],37:[function(require,module,exports){\nvar Stack = require('./_Stack'),\n    baseIsEqual = require('./_baseIsEqual');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n  object = Object(object);\n  while (index--) {\n    var data = matchData[index];\n    if ((noCustomizer && data[2])\n          ? data[1] !== object[data[0]]\n          : !(data[0] in object)\n        ) {\n      return false;\n    }\n  }\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack;\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n      if (!(result === undefined\n            ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n            : result\n          )) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nmodule.exports = baseIsMatch;\n\n},{\"./_Stack\":9,\"./_baseIsEqual\":35}],38:[function(require,module,exports){\nvar isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;\n\n},{\"./_isMasked\":93,\"./_toSource\":126,\"./isFunction\":138,\"./isObject\":140}],39:[function(require,module,exports){\nvar baseGetTag = require('./_baseGetTag'),\n    isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;\n\n},{\"./_baseGetTag\":32,\"./isLength\":139,\"./isObjectLike\":141}],40:[function(require,module,exports){\nvar baseMatches = require('./_baseMatches'),\n    baseMatchesProperty = require('./_baseMatchesProperty'),\n    identity = require('./identity'),\n    isArray = require('./isArray'),\n    property = require('./property');\n\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n  if (value == null) {\n    return identity;\n  }\n  if (typeof value == 'object') {\n    return isArray(value)\n      ? baseMatchesProperty(value[0], value[1])\n      : baseMatches(value);\n  }\n  return property(value);\n}\n\nmodule.exports = baseIteratee;\n\n},{\"./_baseMatches\":43,\"./_baseMatchesProperty\":44,\"./identity\":132,\"./isArray\":134,\"./property\":147}],41:[function(require,module,exports){\nvar isPrototype = require('./_isPrototype'),\n    nativeKeys = require('./_nativeKeys');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeys;\n\n},{\"./_isPrototype\":94,\"./_nativeKeys\":110}],42:[function(require,module,exports){\nvar isObject = require('./isObject'),\n    isPrototype = require('./_isPrototype'),\n    nativeKeysIn = require('./_nativeKeysIn');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeysIn;\n\n},{\"./_isPrototype\":94,\"./_nativeKeysIn\":111,\"./isObject\":140}],43:[function(require,module,exports){\nvar baseIsMatch = require('./_baseIsMatch'),\n    getMatchData = require('./_getMatchData'),\n    matchesStrictComparable = require('./_matchesStrictComparable');\n\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n  return function(object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nmodule.exports = baseMatches;\n\n},{\"./_baseIsMatch\":37,\"./_getMatchData\":73,\"./_matchesStrictComparable\":107}],44:[function(require,module,exports){\nvar baseIsEqual = require('./_baseIsEqual'),\n    get = require('./get'),\n    hasIn = require('./hasIn'),\n    isKey = require('./_isKey'),\n    isStrictComparable = require('./_isStrictComparable'),\n    matchesStrictComparable = require('./_matchesStrictComparable'),\n    toKey = require('./_toKey');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n  return function(object) {\n    var objValue = get(object, path);\n    return (objValue === undefined && objValue === srcValue)\n      ? hasIn(object, path)\n      : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nmodule.exports = baseMatchesProperty;\n\n},{\"./_baseIsEqual\":35,\"./_isKey\":91,\"./_isStrictComparable\":95,\"./_matchesStrictComparable\":107,\"./_toKey\":125,\"./get\":130,\"./hasIn\":131}],45:[function(require,module,exports){\n/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = baseProperty;\n\n},{}],46:[function(require,module,exports){\nvar baseGet = require('./_baseGet');\n\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyDeep(path) {\n  return function(object) {\n    return baseGet(object, path);\n  };\n}\n\nmodule.exports = basePropertyDeep;\n\n},{\"./_baseGet\":30}],47:[function(require,module,exports){\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nmodule.exports = baseTimes;\n\n},{}],48:[function(require,module,exports){\nvar Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = baseToString;\n\n},{\"./_Symbol\":10,\"./_arrayMap\":18,\"./isArray\":134,\"./isSymbol\":142}],49:[function(require,module,exports){\n/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;\n\n},{}],50:[function(require,module,exports){\n/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nmodule.exports = cacheHas;\n\n},{}],51:[function(require,module,exports){\nvar isArray = require('./isArray'),\n    isKey = require('./_isKey'),\n    stringToPath = require('./_stringToPath'),\n    toString = require('./toString');\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;\n\n},{\"./_isKey\":91,\"./_stringToPath\":124,\"./isArray\":134,\"./toString\":153}],52:[function(require,module,exports){\nvar Uint8Array = require('./_Uint8Array');\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\nmodule.exports = cloneArrayBuffer;\n\n},{\"./_Uint8Array\":11}],53:[function(require,module,exports){\nvar root = require('./_root');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var length = buffer.length,\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n  buffer.copy(result);\n  return result;\n}\n\nmodule.exports = cloneBuffer;\n\n},{\"./_root\":115}],54:[function(require,module,exports){\nvar cloneArrayBuffer = require('./_cloneArrayBuffer');\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\nmodule.exports = cloneDataView;\n\n},{\"./_cloneArrayBuffer\":52}],55:[function(require,module,exports){\nvar addMapEntry = require('./_addMapEntry'),\n    arrayReduce = require('./_arrayReduce'),\n    mapToArray = require('./_mapToArray');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1;\n\n/**\n * Creates a clone of `map`.\n *\n * @private\n * @param {Object} map The map to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned map.\n */\nfunction cloneMap(map, isDeep, cloneFunc) {\n  var array = isDeep ? cloneFunc(mapToArray(map), CLONE_DEEP_FLAG) : mapToArray(map);\n  return arrayReduce(array, addMapEntry, new map.constructor);\n}\n\nmodule.exports = cloneMap;\n\n},{\"./_addMapEntry\":13,\"./_arrayReduce\":20,\"./_mapToArray\":106}],56:[function(require,module,exports){\n/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\nmodule.exports = cloneRegExp;\n\n},{}],57:[function(require,module,exports){\nvar addSetEntry = require('./_addSetEntry'),\n    arrayReduce = require('./_arrayReduce'),\n    setToArray = require('./_setToArray');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1;\n\n/**\n * Creates a clone of `set`.\n *\n * @private\n * @param {Object} set The set to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned set.\n */\nfunction cloneSet(set, isDeep, cloneFunc) {\n  var array = isDeep ? cloneFunc(setToArray(set), CLONE_DEEP_FLAG) : setToArray(set);\n  return arrayReduce(array, addSetEntry, new set.constructor);\n}\n\nmodule.exports = cloneSet;\n\n},{\"./_addSetEntry\":14,\"./_arrayReduce\":20,\"./_setToArray\":118}],58:[function(require,module,exports){\nvar Symbol = require('./_Symbol');\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\nmodule.exports = cloneSymbol;\n\n},{\"./_Symbol\":10}],59:[function(require,module,exports){\nvar cloneArrayBuffer = require('./_cloneArrayBuffer');\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\nmodule.exports = cloneTypedArray;\n\n},{\"./_cloneArrayBuffer\":52}],60:[function(require,module,exports){\n/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\nmodule.exports = copyArray;\n\n},{}],61:[function(require,module,exports){\nvar assignValue = require('./_assignValue'),\n    baseAssignValue = require('./_baseAssignValue');\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n    if (isNew) {\n      baseAssignValue(object, key, newValue);\n    } else {\n      assignValue(object, key, newValue);\n    }\n  }\n  return object;\n}\n\nmodule.exports = copyObject;\n\n},{\"./_assignValue\":22,\"./_baseAssignValue\":26}],62:[function(require,module,exports){\nvar copyObject = require('./_copyObject'),\n    getSymbols = require('./_getSymbols');\n\n/**\n * Copies own symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\nmodule.exports = copySymbols;\n\n},{\"./_copyObject\":61,\"./_getSymbols\":77}],63:[function(require,module,exports){\nvar copyObject = require('./_copyObject'),\n    getSymbolsIn = require('./_getSymbolsIn');\n\n/**\n * Copies own and inherited symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbolsIn(source, object) {\n  return copyObject(source, getSymbolsIn(source), object);\n}\n\nmodule.exports = copySymbolsIn;\n\n},{\"./_copyObject\":61,\"./_getSymbolsIn\":78}],64:[function(require,module,exports){\nvar root = require('./_root');\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nmodule.exports = coreJsData;\n\n},{\"./_root\":115}],65:[function(require,module,exports){\nvar getNative = require('./_getNative');\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nmodule.exports = defineProperty;\n\n},{\"./_getNative\":74}],66:[function(require,module,exports){\nvar SetCache = require('./_SetCache'),\n    arraySome = require('./_arraySome'),\n    cacheHas = require('./_cacheHas');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(array);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!cacheHas(seen, othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalArrays;\n\n},{\"./_SetCache\":8,\"./_arraySome\":21,\"./_cacheHas\":50}],67:[function(require,module,exports){\nvar Symbol = require('./_Symbol'),\n    Uint8Array = require('./_Uint8Array'),\n    eq = require('./eq'),\n    equalArrays = require('./_equalArrays'),\n    mapToArray = require('./_mapToArray'),\n    setToArray = require('./_setToArray');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= COMPARE_UNORDERED_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\nmodule.exports = equalByTag;\n\n},{\"./_Symbol\":10,\"./_Uint8Array\":11,\"./_equalArrays\":66,\"./_mapToArray\":106,\"./_setToArray\":118,\"./eq\":128}],68:[function(require,module,exports){\nvar getAllKeys = require('./_getAllKeys');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(object);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalObjects;\n\n},{\"./_getAllKeys\":70}],69:[function(require,module,exports){\n(function (global){\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],70:[function(require,module,exports){\nvar baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbols = require('./_getSymbols'),\n    keys = require('./keys');\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nmodule.exports = getAllKeys;\n\n},{\"./_baseGetAllKeys\":31,\"./_getSymbols\":77,\"./keys\":144}],71:[function(require,module,exports){\nvar baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbolsIn = require('./_getSymbolsIn'),\n    keysIn = require('./keysIn');\n\n/**\n * Creates an array of own and inherited enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeysIn(object) {\n  return baseGetAllKeys(object, keysIn, getSymbolsIn);\n}\n\nmodule.exports = getAllKeysIn;\n\n},{\"./_baseGetAllKeys\":31,\"./_getSymbolsIn\":78,\"./keysIn\":145}],72:[function(require,module,exports){\nvar isKeyable = require('./_isKeyable');\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\nmodule.exports = getMapData;\n\n},{\"./_isKeyable\":92}],73:[function(require,module,exports){\nvar isStrictComparable = require('./_isStrictComparable'),\n    keys = require('./keys');\n\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n  return result;\n}\n\nmodule.exports = getMatchData;\n\n},{\"./_isStrictComparable\":95,\"./keys\":144}],74:[function(require,module,exports){\nvar baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;\n\n},{\"./_baseIsNative\":38,\"./_getValue\":80}],75:[function(require,module,exports){\nvar overArg = require('./_overArg');\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\nmodule.exports = getPrototype;\n\n},{\"./_overArg\":114}],76:[function(require,module,exports){\nvar Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n\n},{\"./_Symbol\":10}],77:[function(require,module,exports){\nvar arrayFilter = require('./_arrayFilter'),\n    stubArray = require('./stubArray');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\nmodule.exports = getSymbols;\n\n},{\"./_arrayFilter\":16,\"./stubArray\":148}],78:[function(require,module,exports){\nvar arrayPush = require('./_arrayPush'),\n    getPrototype = require('./_getPrototype'),\n    getSymbols = require('./_getSymbols'),\n    stubArray = require('./stubArray');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own and inherited enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n  var result = [];\n  while (object) {\n    arrayPush(result, getSymbols(object));\n    object = getPrototype(object);\n  }\n  return result;\n};\n\nmodule.exports = getSymbolsIn;\n\n},{\"./_arrayPush\":19,\"./_getPrototype\":75,\"./_getSymbols\":77,\"./stubArray\":148}],79:[function(require,module,exports){\nvar DataView = require('./_DataView'),\n    Map = require('./_Map'),\n    Promise = require('./_Promise'),\n    Set = require('./_Set'),\n    WeakMap = require('./_WeakMap'),\n    baseGetTag = require('./_baseGetTag'),\n    toSource = require('./_toSource');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\n\nvar dataViewTag = '[object DataView]';\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\nmodule.exports = getTag;\n\n},{\"./_DataView\":1,\"./_Map\":4,\"./_Promise\":6,\"./_Set\":7,\"./_WeakMap\":12,\"./_baseGetTag\":32,\"./_toSource\":126}],80:[function(require,module,exports){\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;\n\n},{}],81:[function(require,module,exports){\nvar castPath = require('./_castPath'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isIndex = require('./_isIndex'),\n    isLength = require('./isLength'),\n    toKey = require('./_toKey');\n\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n    object = object[key];\n  }\n  if (result || ++index != length) {\n    return result;\n  }\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) &&\n    (isArray(object) || isArguments(object));\n}\n\nmodule.exports = hasPath;\n\n},{\"./_castPath\":51,\"./_isIndex\":90,\"./_toKey\":125,\"./isArguments\":133,\"./isArray\":134,\"./isLength\":139}],82:[function(require,module,exports){\nvar nativeCreate = require('./_nativeCreate');\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nmodule.exports = hashClear;\n\n},{\"./_nativeCreate\":109}],83:[function(require,module,exports){\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = hashDelete;\n\n},{}],84:[function(require,module,exports){\nvar nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nmodule.exports = hashGet;\n\n},{\"./_nativeCreate\":109}],85:[function(require,module,exports){\nvar nativeCreate = require('./_nativeCreate');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\nmodule.exports = hashHas;\n\n},{\"./_nativeCreate\":109}],86:[function(require,module,exports){\nvar nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\nmodule.exports = hashSet;\n\n},{\"./_nativeCreate\":109}],87:[function(require,module,exports){\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\nmodule.exports = initCloneArray;\n\n},{}],88:[function(require,module,exports){\nvar cloneArrayBuffer = require('./_cloneArrayBuffer'),\n    cloneDataView = require('./_cloneDataView'),\n    cloneMap = require('./_cloneMap'),\n    cloneRegExp = require('./_cloneRegExp'),\n    cloneSet = require('./_cloneSet'),\n    cloneSymbol = require('./_cloneSymbol'),\n    cloneTypedArray = require('./_cloneTypedArray');\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, cloneFunc, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return cloneMap(object, isDeep, cloneFunc);\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return cloneSet(object, isDeep, cloneFunc);\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\nmodule.exports = initCloneByTag;\n\n},{\"./_cloneArrayBuffer\":52,\"./_cloneDataView\":54,\"./_cloneMap\":55,\"./_cloneRegExp\":56,\"./_cloneSet\":57,\"./_cloneSymbol\":58,\"./_cloneTypedArray\":59}],89:[function(require,module,exports){\nvar baseCreate = require('./_baseCreate'),\n    getPrototype = require('./_getPrototype'),\n    isPrototype = require('./_isPrototype');\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\nmodule.exports = initCloneObject;\n\n},{\"./_baseCreate\":28,\"./_getPrototype\":75,\"./_isPrototype\":94}],90:[function(require,module,exports){\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\nmodule.exports = isIndex;\n\n},{}],91:[function(require,module,exports){\nvar isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\nmodule.exports = isKey;\n\n},{\"./isArray\":134,\"./isSymbol\":142}],92:[function(require,module,exports){\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\nmodule.exports = isKeyable;\n\n},{}],93:[function(require,module,exports){\nvar coreJsData = require('./_coreJsData');\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nmodule.exports = isMasked;\n\n},{\"./_coreJsData\":64}],94:[function(require,module,exports){\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\nmodule.exports = isPrototype;\n\n},{}],95:[function(require,module,exports){\nvar isObject = require('./isObject');\n\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nmodule.exports = isStrictComparable;\n\n},{\"./isObject\":140}],96:[function(require,module,exports){\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nmodule.exports = listCacheClear;\n\n},{}],97:[function(require,module,exports){\nvar assocIndexOf = require('./_assocIndexOf');\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\nmodule.exports = listCacheDelete;\n\n},{\"./_assocIndexOf\":23}],98:[function(require,module,exports){\nvar assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\nmodule.exports = listCacheGet;\n\n},{\"./_assocIndexOf\":23}],99:[function(require,module,exports){\nvar assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nmodule.exports = listCacheHas;\n\n},{\"./_assocIndexOf\":23}],100:[function(require,module,exports){\nvar assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\nmodule.exports = listCacheSet;\n\n},{\"./_assocIndexOf\":23}],101:[function(require,module,exports){\nvar Hash = require('./_Hash'),\n    ListCache = require('./_ListCache'),\n    Map = require('./_Map');\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\nmodule.exports = mapCacheClear;\n\n},{\"./_Hash\":2,\"./_ListCache\":3,\"./_Map\":4}],102:[function(require,module,exports){\nvar getMapData = require('./_getMapData');\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = mapCacheDelete;\n\n},{\"./_getMapData\":72}],103:[function(require,module,exports){\nvar getMapData = require('./_getMapData');\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nmodule.exports = mapCacheGet;\n\n},{\"./_getMapData\":72}],104:[function(require,module,exports){\nvar getMapData = require('./_getMapData');\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nmodule.exports = mapCacheHas;\n\n},{\"./_getMapData\":72}],105:[function(require,module,exports){\nvar getMapData = require('./_getMapData');\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nmodule.exports = mapCacheSet;\n\n},{\"./_getMapData\":72}],106:[function(require,module,exports){\n/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nmodule.exports = mapToArray;\n\n},{}],107:[function(require,module,exports){\n/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function(object) {\n    if (object == null) {\n      return false;\n    }\n    return object[key] === srcValue &&\n      (srcValue !== undefined || (key in Object(object)));\n  };\n}\n\nmodule.exports = matchesStrictComparable;\n\n},{}],108:[function(require,module,exports){\nvar memoize = require('./memoize');\n\n/** Used as the maximum memoize cache size. */\nvar MAX_MEMOIZE_SIZE = 500;\n\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\nfunction memoizeCapped(func) {\n  var result = memoize(func, function(key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n    return key;\n  });\n\n  var cache = result.cache;\n  return result;\n}\n\nmodule.exports = memoizeCapped;\n\n},{\"./memoize\":146}],109:[function(require,module,exports){\nvar getNative = require('./_getNative');\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = getNative(Object, 'create');\n\nmodule.exports = nativeCreate;\n\n},{\"./_getNative\":74}],110:[function(require,module,exports){\nvar overArg = require('./_overArg');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\nmodule.exports = nativeKeys;\n\n},{\"./_overArg\":114}],111:[function(require,module,exports){\n/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = nativeKeysIn;\n\n},{}],112:[function(require,module,exports){\nvar freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nmodule.exports = nodeUtil;\n\n},{\"./_freeGlobal\":69}],113:[function(require,module,exports){\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n\n},{}],114:[function(require,module,exports){\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;\n\n},{}],115:[function(require,module,exports){\nvar freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n\n},{\"./_freeGlobal\":69}],116:[function(require,module,exports){\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\nmodule.exports = setCacheAdd;\n\n},{}],117:[function(require,module,exports){\n/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nmodule.exports = setCacheHas;\n\n},{}],118:[function(require,module,exports){\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nmodule.exports = setToArray;\n\n},{}],119:[function(require,module,exports){\nvar ListCache = require('./_ListCache');\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\nmodule.exports = stackClear;\n\n},{\"./_ListCache\":3}],120:[function(require,module,exports){\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\nmodule.exports = stackDelete;\n\n},{}],121:[function(require,module,exports){\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nmodule.exports = stackGet;\n\n},{}],122:[function(require,module,exports){\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nmodule.exports = stackHas;\n\n},{}],123:[function(require,module,exports){\nvar ListCache = require('./_ListCache'),\n    Map = require('./_Map'),\n    MapCache = require('./_MapCache');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nmodule.exports = stackSet;\n\n},{\"./_ListCache\":3,\"./_Map\":4,\"./_MapCache\":5}],124:[function(require,module,exports){\nvar memoizeCapped = require('./_memoizeCapped');\n\n/** Used to match property names within property paths. */\nvar reLeadingDot = /^\\./,\n    rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoizeCapped(function(string) {\n  var result = [];\n  if (reLeadingDot.test(string)) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, string) {\n    result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\nmodule.exports = stringToPath;\n\n},{\"./_memoizeCapped\":108}],125:[function(require,module,exports){\nvar isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = toKey;\n\n},{\"./isSymbol\":142}],126:[function(require,module,exports){\n/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nmodule.exports = toSource;\n\n},{}],127:[function(require,module,exports){\nvar baseClone = require('./_baseClone');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * Creates a shallow clone of `value`.\n *\n * **Note:** This method is loosely based on the\n * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n * and supports cloning arrays, array buffers, booleans, date objects, maps,\n * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n * arrays. The own enumerable properties of `arguments` objects are cloned\n * as plain objects. An empty object is returned for uncloneable values such\n * as error objects, functions, DOM nodes, and WeakMaps.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to clone.\n * @returns {*} Returns the cloned value.\n * @see _.cloneDeep\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var shallow = _.clone(objects);\n * console.log(shallow[0] === objects[0]);\n * // => true\n */\nfunction clone(value) {\n  return baseClone(value, CLONE_SYMBOLS_FLAG);\n}\n\nmodule.exports = clone;\n\n},{\"./_baseClone\":27}],128:[function(require,module,exports){\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nmodule.exports = eq;\n\n},{}],129:[function(require,module,exports){\nvar baseFindIndex = require('./_baseFindIndex'),\n    baseIteratee = require('./_baseIteratee'),\n    toInteger = require('./toInteger');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * This method is like `_.find` except that it returns the index of the first\n * element `predicate` returns truthy for instead of the element itself.\n *\n * @static\n * @memberOf _\n * @since 1.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': false },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': true }\n * ];\n *\n * _.findIndex(users, function(o) { return o.user == 'barney'; });\n * // => 0\n *\n * // The `_.matches` iteratee shorthand.\n * _.findIndex(users, { 'user': 'fred', 'active': false });\n * // => 1\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findIndex(users, ['active', false]);\n * // => 0\n *\n * // The `_.property` iteratee shorthand.\n * _.findIndex(users, 'active');\n * // => 2\n */\nfunction findIndex(array, predicate, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n  return baseFindIndex(array, baseIteratee(predicate, 3), index);\n}\n\nmodule.exports = findIndex;\n\n},{\"./_baseFindIndex\":29,\"./_baseIteratee\":40,\"./toInteger\":151}],130:[function(require,module,exports){\nvar baseGet = require('./_baseGet');\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;\n\n},{\"./_baseGet\":30}],131:[function(require,module,exports){\nvar baseHasIn = require('./_baseHasIn'),\n    hasPath = require('./_hasPath');\n\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nmodule.exports = hasIn;\n\n},{\"./_baseHasIn\":33,\"./_hasPath\":81}],132:[function(require,module,exports){\n/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n\n},{}],133:[function(require,module,exports){\nvar baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nmodule.exports = isArguments;\n\n},{\"./_baseIsArguments\":34,\"./isObjectLike\":141}],134:[function(require,module,exports){\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n\n},{}],135:[function(require,module,exports){\nvar isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;\n\n},{\"./isFunction\":138,\"./isLength\":139}],136:[function(require,module,exports){\nvar root = require('./_root'),\n    stubFalse = require('./stubFalse');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\nmodule.exports = isBuffer;\n\n},{\"./_root\":115,\"./stubFalse\":149}],137:[function(require,module,exports){\nvar baseIsEqual = require('./_baseIsEqual');\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;\n\n},{\"./_baseIsEqual\":35}],138:[function(require,module,exports){\nvar baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;\n\n},{\"./_baseGetTag\":32,\"./isObject\":140}],139:[function(require,module,exports){\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n\n},{}],140:[function(require,module,exports){\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n\n},{}],141:[function(require,module,exports){\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n\n},{}],142:[function(require,module,exports){\nvar baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n\n},{\"./_baseGetTag\":32,\"./isObjectLike\":141}],143:[function(require,module,exports){\nvar baseIsTypedArray = require('./_baseIsTypedArray'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\nmodule.exports = isTypedArray;\n\n},{\"./_baseIsTypedArray\":39,\"./_baseUnary\":49,\"./_nodeUtil\":112}],144:[function(require,module,exports){\nvar arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeys = require('./_baseKeys'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = keys;\n\n},{\"./_arrayLikeKeys\":17,\"./_baseKeys\":41,\"./isArrayLike\":135}],145:[function(require,module,exports){\nvar arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeysIn = require('./_baseKeysIn'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\nmodule.exports = keysIn;\n\n},{\"./_arrayLikeKeys\":17,\"./_baseKeysIn\":42,\"./isArrayLike\":135}],146:[function(require,module,exports){\nvar MapCache = require('./_MapCache');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Expose `MapCache`.\nmemoize.Cache = MapCache;\n\nmodule.exports = memoize;\n\n},{\"./_MapCache\":5}],147:[function(require,module,exports){\nvar baseProperty = require('./_baseProperty'),\n    basePropertyDeep = require('./_basePropertyDeep'),\n    isKey = require('./_isKey'),\n    toKey = require('./_toKey');\n\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nmodule.exports = property;\n\n},{\"./_baseProperty\":45,\"./_basePropertyDeep\":46,\"./_isKey\":91,\"./_toKey\":125}],148:[function(require,module,exports){\n/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nmodule.exports = stubArray;\n\n},{}],149:[function(require,module,exports){\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;\n\n},{}],150:[function(require,module,exports){\nvar toNumber = require('./toNumber');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nmodule.exports = toFinite;\n\n},{\"./toNumber\":152}],151:[function(require,module,exports){\nvar toFinite = require('./toFinite');\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\nmodule.exports = toInteger;\n\n},{\"./toFinite\":150}],152:[function(require,module,exports){\nvar isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n\n},{\"./isObject\":140,\"./isSymbol\":142}],153:[function(require,module,exports){\nvar baseToString = require('./_baseToString');\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;\n\n},{\"./_baseToString\":48}],154:[function(require,module,exports){\n/* globals module: false, require: false */\r\nmodule.exports = function (options) {\r\n\t'use strict';\r\n\t// let _ = require('lodash/core')\r\n\tlet _fi = require('lodash/findIndex')\r\n\t\t, _iseq = require('lodash/isEqual')\r\n\t\t, _clone = require('lodash/clone')\r\n\t//utilities\r\n\tfunction myIndexOf(a, b) {\r\n\t\treturn _fi(a, function (x) { return _iseq(x, b) });\r\n\t}\r\n\r\n\toptions = options || {}\r\n\t// boardMode = options.boardMode || 't'/*t:toroid; c:classic ...*/\r\n\t// , boardDimensions = options.boardDimensions || [11, 11]/*move later*/\r\n\t// , rules = options.rules || {\r\n\t// suicide: true,\r\n\t// superko: false\r\n\t// }\r\n\tlet $ = {}\r\n\t\t, rules = options.rules || {\r\n\t\t\tsuicide: true,\r\n\t\t\tsuperko: false /*⇒todo: enforce when true?*/,\r\n\t\t\tkomi: 7.5\r\n\t\t}\r\n\r\n\t// $.moves = options.moves || []\r\n\t$.options = options\r\n\toptions.boardDimensions = options.boardDimensions || [11, 11]\r\n\toptions.boardMode = options.boardMode || 't'/*t:toroid; c:classic ...*/\r\n\t$.board = {}\r\n\t$.board.blackStones = options.blackStones || []\r\n\t$.board.whiteStones = options.whiteStones || []\r\n\r\n\t$.board.nextPlayer = options.nextPlayer || \"b\"\r\n\t$.board.captured = options.captured || [0, 0]\r\n\r\n\t$.exportData = function () {\r\n\t\treturn {\r\n\t\t\tblackStones: $.board.blackStones.map(_clone),\r\n\r\n\t\t\twhiteStones: $.board.whiteStones.map(_clone),\r\n\t\t\tcaptured: _clone($.board.captured),\r\n\t\t\tnextPlayer: $.board.nextPlayer\r\n\t\t}\r\n\t}\r\n\r\n\t$.loadData = function (data) {\r\n\t\t$.board.blackStones = data.blackStones\r\n\t\t$.board.whiteStones = data.whiteStones\r\n\t\t$.board.captured = data.captured\r\n\t\t$.board.nextPlayer = data.nextPlayer\r\n\t}\r\n\r\n\t//toroid\r\n\tif (options.boardMode === 't') $.board.getNeighbours =\r\n\t\tfunction (point) {\r\n\t\t\tlet result = []\r\n\t\t\tfor (let i = 0; i < 4; i++) {\r\n\t\t\t\tlet newPoint\r\n\t\t\t\tswitch (i) {\r\n\t\t\t\t\tcase 0:\r\n\t\t\t\t\t\tnewPoint = [point[0] + 1, point[1]]\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 1:\r\n\t\t\t\t\t\tnewPoint = [point[0] - 1, point[1]]\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\tnewPoint = [point[0], point[1] + 1]\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 3:\r\n\t\t\t\t\t\tnewPoint = [point[0], point[1] - 1]\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tresult.push([(newPoint[0] + options.boardDimensions[0]) % options.boardDimensions[0], (newPoint[1] + options.boardDimensions[1]) % options.boardDimensions[1]])\r\n\t\t\t}\r\n\t\t\treturn result\r\n\t\t}\r\n\tif (options.boardMode === 'c') $.board.getNeighbours =\r\n\t\tfunction (point) {\r\n\t\t\tlet result = []\r\n\t\t\tfor (let i = 0; i < 4; i++) {\r\n\t\t\t\tlet newPoint\r\n\t\t\t\tswitch (i) {\r\n\t\t\t\t\tcase 0:\r\n\t\t\t\t\t\tnewPoint = [point[0] + 1, point[1]]\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 1:\r\n\t\t\t\t\t\tnewPoint = [point[0] - 1, point[1]]\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\tnewPoint = [point[0], point[1] + 1]\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 3:\r\n\t\t\t\t\t\tnewPoint = [point[0], point[1] - 1]\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tif (newPoint[0] >= 0 && newPoint[0] < options.boardDimensions[0]\r\n\t\t\t\t\t&& newPoint[1] >= 0 && newPoint[1] < options.boardDimensions[1]\r\n\t\t\t\t)\r\n\t\t\t\t\tresult.push(newPoint)\r\n\t\t\t}\r\n\t\t\treturn result\r\n\t\t}\r\n\t//todo: klein, projective plane, ...\r\n\r\n\t$.board.isEmpty = function (point) {\r\n\t\treturn myIndexOf($.board.blackStones, point) < 0\r\n\t\t\t&& myIndexOf($.board.whiteStones, point) < 0;\r\n\t}\r\n\t$.board.getColour = function (point) {\r\n\t\tif (myIndexOf($.board.blackStones, point) >= 0) return 'b'\r\n\t\tif (myIndexOf($.board.whiteStones, point) >= 0) return 'w'\r\n\t\treturn 'e'\r\n\t}\r\n\t$.board.chainHasLiberty = function (startPoint, chainColour, stopColour) {\r\n\t\tif (stopColour === undefined)\r\n\t\t\tstopColour = 'e'//by default, stop getting the chain when there is a liberty.\r\n\t\tif (chainColour === null)\r\n\t\t\tchainColour = $.board.getColour(startPoint)\r\n\t\tlet\r\n\t\t\tchain = [startPoint]\r\n\t\t\t, toExplore = []\r\n\t\t\t, point = startPoint //assumed to be of colour chainColour\r\n\r\n\t\twhile (point !== undefined) {\r\n\r\n\t\t\tlet neighbours = $.board.getNeighbours(point)\r\n\t\t\tfor (let i = 0; i < neighbours.length; i++) {\r\n\t\t\t\tlet newPoint = neighbours[i],\r\n\t\t\t\t\tnewColour = $.board.getColour(newPoint)\r\n\t\t\t\tif (newColour === stopColour) return true;\r\n\t\t\t\tif (newColour === chainColour) {\r\n\t\t\t\t\tif (myIndexOf(chain, newPoint) < 0) {\r\n\t\t\t\t\t\tchain.push(newPoint)\r\n\t\t\t\t\t\t// if (myIndexOf(toExplore, newPoint) < 0)\r\n\t\t\t\t\t\ttoExplore.push(newPoint)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tpoint = toExplore.pop()\r\n\t\t}\r\n\r\n\t\treturn chain;\r\n\t}\r\n\r\n\t$.board.getComponent = function (startPoint, deadStones) {\r\n\t\t//Use for scoring.\r\n\t\t//It returns all points of the same colour (B, W or E) that are linked to the startPoint.\r\n\t\t//deadStones: array of B or W points that defines (via this function) B or W components that are treated as E when getting an E component.\r\n\t\t//todo\r\n\t\treturn {\r\n\t\t\tpoints: []\r\n\t\t\t, colour: []\r\n\t\t\t, isDead: false//for B or W chains\r\n\t\t\t, isBlackTerritory: false//for empty components\r\n\t\t}\r\n\t}\r\n\r\n\t$.board.score = function (deadStones) {\r\n\t\t/*\r\n\t\tgo through the whole board \r\n\t\tuse getComponent to split up into B, W and E\r\n\t\t*/\r\n\r\n\t\tlet result = {\r\n\t\t\twhiteComponents: {}\r\n\t\t\t, blackComponents: {}\r\n\t\t\t, emptyComponents: {}\r\n\t\t\t, totalBlackDead: 0\r\n\t\t\t, totalWhiteDead: 0\r\n\t\t\t, totalBlackPrisoners: 0\r\n\t\t\t, totalWhitePrisoners: 0\r\n\t\t\t, totalBlackTerritory: 0\r\n\t\t\t, totalWhiteTerritory: 0\r\n\r\n\t\t}\r\n\t\t//todo: implement other rulesets. For now, just do territory + prisoners (Japanese style counting)\r\n\t\tresult.blackScore =\r\n\t\t\tresult.totalWhiteDead\r\n\t\t\t+ result.totalBlackPrisoners\r\n\t\t\t+ result.totalBlackTerritory\r\n\t\tresult.whiteScore =\r\n\t\t\tresult.totalBlackDead\r\n\t\t\t+ result.totalWhitePrisoners\r\n\t\t\t+ result.totalWhiteTerritory\r\n\t\t\t+ komi //todo\r\n\t\tlet r = result.blackScore - result.whiteScore\r\n\t\tif (r === 0) result.RE = '0'\r\n\t\telse if (r > 0) result.RE = 'B+' + r\r\n\t\telse result.RE = 'W+' + (-r)\r\n\t\treturn result\r\n\t}\r\n\r\n\t$.board.empty = function () {\r\n\t\t$.board.whiteStones = []\r\n\t\t$.board.blackStones = []\r\n\t\t$.board.captured = [0, 0]\r\n\r\n\t}\r\n\r\n\t$.removeChain = function (chain, colour) {\r\n\t\tlet toRemoveFrom = colour === 'w' ? $.board.whiteStones : $.board.blackStones\r\n\t\tfor (let j = 0; j < chain.length; j++) {\r\n\t\t\tlet index = myIndexOf(toRemoveFrom, chain[j])\r\n\t\t\ttoRemoveFrom.splice(index, 1)\r\n\t\t\tif (colour === 'w') $.board.captured[1] = $.board.captured[1] + 1\r\n\t\t\telse $.board.captured[0] = $.board.captured[0] + 1\r\n\t\t}\r\n\t}\r\n\t$.play = function (playerColour, point) {\r\n\r\n\r\n\r\n\t\t// let result = \"ok\"\r\n\t\tif (!$.board.isEmpty(point))\r\n\t\t\tthrow new Error('point is not empty');\r\n\t\t// console.log('point is not empty' + point)\r\n\r\n\t\tif (playerColour === 'b') $.board.blackStones.push(point)\r\n\t\telse $.board.whiteStones.push(point)\r\n\r\n\t\tlet neighbours = $.board.getNeighbours(point)\r\n\t\t\t, removed = []//chains removed\r\n\r\n\t\tfor (let i = 0; i < neighbours.length; i++) {\r\n\t\t\tlet neighbour = neighbours[i], colour = $.board.getColour(neighbour)\r\n\t\t\tif (colour === playerColour || colour === 'e') continue\r\n\t\t\tlet oppColour = $.getOppositeColour(playerColour),\r\n\t\t\t\tr = $.board.chainHasLiberty(neighbour, oppColour)\r\n\t\t\tif (r === true) continue\r\n\t\t\t////remove - no liberties\r\n\t\t\tremoved[removed.length] = r\r\n\r\n\t\t\t$.removeChain(r, oppColour)\r\n\r\n\t\t\t// let chainToRemove = r[1],\r\n\t\t\t// toRemoveFrom = playerColour === 'b' ? $.board.whiteStones : $.board.blackStones\r\n\t\t\t// for (let j = 0; j<chainToRemove.length; j++)\r\n\t\t\t// {\r\n\t\t\t// let index = myIndexOf(toRemoveFrom,chainToRemove[j])\r\n\t\t\t// toRemoveFrom.splice(index, 1)\r\n\t\t\t// if (playerColour === 'b') $.board.captured[1] = $.board.captured[1] + 1\r\n\t\t\t// else $.board.captured[0] = $.board.captured[0] + 1\r\n\t\t\t// }\r\n\t\t\t// removed = true\r\n\t\t}\r\n\t\tlet suicide = false\r\n\t\tif (removed.length === 0) {\r\n\t\t\tlet s = $.board.chainHasLiberty(point, playerColour)\r\n\t\t\tif (s !== true) {\r\n\t\t\t\tif (rules.suicide) {\r\n\t\t\t\t\t$.removeChain(s, playerColour)\r\n\t\t\t\t\tsuicide = s\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthrow new Error('suicide');//isn’t allowed\r\n\t\t\t\t\t//todo: remove point from whiteStones or blackStones\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/*\r\n\t\t\tstoring the situation in memory - would be useful when implementing going back a move, superko, ...\r\n\t\t\tnot needed for now\r\n\t\t*/\r\n\t\t//$.moves.push([playerColour,point,_.clone($.board.whiteStones),_.clone($.board.blackStones)])\r\n\t\t// $.moves.push([playerColour,point])\r\n\r\n\t\t// getNeighbours[i] = [getNeighbours[i], $.board.getColour[getNeighbours[i]]\r\n\t\t// //...\r\n\r\n\r\n\t\treturn { removed, suicide }\r\n\t}\r\n\t$.getOppositeColour = function (colour) {\r\n\t\tswitch (colour) {\r\n\t\t\tcase 'b':\r\n\t\t\t\treturn 'w'\r\n\t\t\tcase 'w':\r\n\t\t\t\treturn 'b'\r\n\t\t}\r\n\t\treturn null\r\n\t}\r\n\treturn $\r\n\r\n}\n},{\"lodash/clone\":127,\"lodash/findIndex\":129,\"lodash/isEqual\":137}],155:[function(require,module,exports){\narguments[4][1][0].apply(exports,arguments)\n},{\"./_getNative\":210,\"./_root\":246,\"dup\":1}],156:[function(require,module,exports){\narguments[4][2][0].apply(exports,arguments)\n},{\"./_hashClear\":216,\"./_hashDelete\":217,\"./_hashGet\":218,\"./_hashHas\":219,\"./_hashSet\":220,\"dup\":2}],157:[function(require,module,exports){\narguments[4][3][0].apply(exports,arguments)\n},{\"./_listCacheClear\":228,\"./_listCacheDelete\":229,\"./_listCacheGet\":230,\"./_listCacheHas\":231,\"./_listCacheSet\":232,\"dup\":3}],158:[function(require,module,exports){\narguments[4][4][0].apply(exports,arguments)\n},{\"./_getNative\":210,\"./_root\":246,\"dup\":4}],159:[function(require,module,exports){\narguments[4][5][0].apply(exports,arguments)\n},{\"./_mapCacheClear\":233,\"./_mapCacheDelete\":234,\"./_mapCacheGet\":235,\"./_mapCacheHas\":236,\"./_mapCacheSet\":237,\"dup\":5}],160:[function(require,module,exports){\narguments[4][6][0].apply(exports,arguments)\n},{\"./_getNative\":210,\"./_root\":246,\"dup\":6}],161:[function(require,module,exports){\narguments[4][7][0].apply(exports,arguments)\n},{\"./_getNative\":210,\"./_root\":246,\"dup\":7}],162:[function(require,module,exports){\narguments[4][8][0].apply(exports,arguments)\n},{\"./_MapCache\":159,\"./_setCacheAdd\":247,\"./_setCacheHas\":248,\"dup\":8}],163:[function(require,module,exports){\narguments[4][9][0].apply(exports,arguments)\n},{\"./_ListCache\":157,\"./_stackClear\":250,\"./_stackDelete\":251,\"./_stackGet\":252,\"./_stackHas\":253,\"./_stackSet\":254,\"dup\":9}],164:[function(require,module,exports){\narguments[4][10][0].apply(exports,arguments)\n},{\"./_root\":246,\"dup\":10}],165:[function(require,module,exports){\narguments[4][11][0].apply(exports,arguments)\n},{\"./_root\":246,\"dup\":11}],166:[function(require,module,exports){\narguments[4][12][0].apply(exports,arguments)\n},{\"./_getNative\":210,\"./_root\":246,\"dup\":12}],167:[function(require,module,exports){\narguments[4][16][0].apply(exports,arguments)\n},{\"dup\":16}],168:[function(require,module,exports){\nvar baseIndexOf = require('./_baseIndexOf');\n\n/**\n * A specialized version of `_.includes` for arrays without support for\n * specifying an index to search from.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludes(array, value) {\n  var length = array == null ? 0 : array.length;\n  return !!length && baseIndexOf(array, value, 0) > -1;\n}\n\nmodule.exports = arrayIncludes;\n\n},{\"./_baseIndexOf\":181}],169:[function(require,module,exports){\n/**\n * This function is like `arrayIncludes` except that it accepts a comparator.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @param {Function} comparator The comparator invoked per element.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludesWith(array, value, comparator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (comparator(value, array[index])) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arrayIncludesWith;\n\n},{}],170:[function(require,module,exports){\narguments[4][17][0].apply(exports,arguments)\n},{\"./_baseTimes\":195,\"./_isIndex\":222,\"./isArguments\":265,\"./isArray\":266,\"./isBuffer\":268,\"./isTypedArray\":274,\"dup\":17}],171:[function(require,module,exports){\narguments[4][18][0].apply(exports,arguments)\n},{\"dup\":18}],172:[function(require,module,exports){\narguments[4][19][0].apply(exports,arguments)\n},{\"dup\":19}],173:[function(require,module,exports){\narguments[4][21][0].apply(exports,arguments)\n},{\"dup\":21}],174:[function(require,module,exports){\narguments[4][23][0].apply(exports,arguments)\n},{\"./eq\":259,\"dup\":23}],175:[function(require,module,exports){\narguments[4][29][0].apply(exports,arguments)\n},{\"dup\":29}],176:[function(require,module,exports){\nvar arrayPush = require('./_arrayPush'),\n    isFlattenable = require('./_isFlattenable');\n\n/**\n * The base implementation of `_.flatten` with support for restricting flattening.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {number} depth The maximum recursion depth.\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\nfunction baseFlatten(array, depth, predicate, isStrict, result) {\n  var index = -1,\n      length = array.length;\n\n  predicate || (predicate = isFlattenable);\n  result || (result = []);\n\n  while (++index < length) {\n    var value = array[index];\n    if (depth > 0 && predicate(value)) {\n      if (depth > 1) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten(value, depth - 1, predicate, isStrict, result);\n      } else {\n        arrayPush(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseFlatten;\n\n},{\"./_arrayPush\":172,\"./_isFlattenable\":221}],177:[function(require,module,exports){\narguments[4][30][0].apply(exports,arguments)\n},{\"./_castPath\":200,\"./_toKey\":257,\"dup\":30}],178:[function(require,module,exports){\narguments[4][31][0].apply(exports,arguments)\n},{\"./_arrayPush\":172,\"./isArray\":266,\"dup\":31}],179:[function(require,module,exports){\narguments[4][32][0].apply(exports,arguments)\n},{\"./_Symbol\":164,\"./_getRawTag\":211,\"./_objectToString\":244,\"dup\":32}],180:[function(require,module,exports){\narguments[4][33][0].apply(exports,arguments)\n},{\"dup\":33}],181:[function(require,module,exports){\nvar baseFindIndex = require('./_baseFindIndex'),\n    baseIsNaN = require('./_baseIsNaN'),\n    strictIndexOf = require('./_strictIndexOf');\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  return value === value\n    ? strictIndexOf(array, value, fromIndex)\n    : baseFindIndex(array, baseIsNaN, fromIndex);\n}\n\nmodule.exports = baseIndexOf;\n\n},{\"./_baseFindIndex\":175,\"./_baseIsNaN\":186,\"./_strictIndexOf\":255}],182:[function(require,module,exports){\narguments[4][34][0].apply(exports,arguments)\n},{\"./_baseGetTag\":179,\"./isObjectLike\":272,\"dup\":34}],183:[function(require,module,exports){\narguments[4][35][0].apply(exports,arguments)\n},{\"./_baseIsEqualDeep\":184,\"./isObjectLike\":272,\"dup\":35}],184:[function(require,module,exports){\narguments[4][36][0].apply(exports,arguments)\n},{\"./_Stack\":163,\"./_equalArrays\":203,\"./_equalByTag\":204,\"./_equalObjects\":205,\"./_getTag\":213,\"./isArray\":266,\"./isBuffer\":268,\"./isTypedArray\":274,\"dup\":36}],185:[function(require,module,exports){\narguments[4][37][0].apply(exports,arguments)\n},{\"./_Stack\":163,\"./_baseIsEqual\":183,\"dup\":37}],186:[function(require,module,exports){\n/**\n * The base implementation of `_.isNaN` without support for number objects.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */\nfunction baseIsNaN(value) {\n  return value !== value;\n}\n\nmodule.exports = baseIsNaN;\n\n},{}],187:[function(require,module,exports){\narguments[4][38][0].apply(exports,arguments)\n},{\"./_isMasked\":225,\"./_toSource\":258,\"./isFunction\":269,\"./isObject\":271,\"dup\":38}],188:[function(require,module,exports){\narguments[4][39][0].apply(exports,arguments)\n},{\"./_baseGetTag\":179,\"./isLength\":270,\"./isObjectLike\":272,\"dup\":39}],189:[function(require,module,exports){\narguments[4][40][0].apply(exports,arguments)\n},{\"./_baseMatches\":191,\"./_baseMatchesProperty\":192,\"./identity\":264,\"./isArray\":266,\"./property\":278,\"dup\":40}],190:[function(require,module,exports){\narguments[4][41][0].apply(exports,arguments)\n},{\"./_isPrototype\":226,\"./_nativeKeys\":242,\"dup\":41}],191:[function(require,module,exports){\narguments[4][43][0].apply(exports,arguments)\n},{\"./_baseIsMatch\":185,\"./_getMatchData\":209,\"./_matchesStrictComparable\":239,\"dup\":43}],192:[function(require,module,exports){\narguments[4][44][0].apply(exports,arguments)\n},{\"./_baseIsEqual\":183,\"./_isKey\":223,\"./_isStrictComparable\":227,\"./_matchesStrictComparable\":239,\"./_toKey\":257,\"./get\":262,\"./hasIn\":263,\"dup\":44}],193:[function(require,module,exports){\narguments[4][45][0].apply(exports,arguments)\n},{\"dup\":45}],194:[function(require,module,exports){\narguments[4][46][0].apply(exports,arguments)\n},{\"./_baseGet\":177,\"dup\":46}],195:[function(require,module,exports){\narguments[4][47][0].apply(exports,arguments)\n},{\"dup\":47}],196:[function(require,module,exports){\narguments[4][48][0].apply(exports,arguments)\n},{\"./_Symbol\":164,\"./_arrayMap\":171,\"./isArray\":266,\"./isSymbol\":273,\"dup\":48}],197:[function(require,module,exports){\narguments[4][49][0].apply(exports,arguments)\n},{\"dup\":49}],198:[function(require,module,exports){\nvar SetCache = require('./_SetCache'),\n    arrayIncludes = require('./_arrayIncludes'),\n    arrayIncludesWith = require('./_arrayIncludesWith'),\n    cacheHas = require('./_cacheHas'),\n    createSet = require('./_createSet'),\n    setToArray = require('./_setToArray');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n */\nfunction baseUniq(array, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      length = array.length,\n      isCommon = true,\n      result = [],\n      seen = result;\n\n  if (comparator) {\n    isCommon = false;\n    includes = arrayIncludesWith;\n  }\n  else if (length >= LARGE_ARRAY_SIZE) {\n    var set = iteratee ? null : createSet(array);\n    if (set) {\n      return setToArray(set);\n    }\n    isCommon = false;\n    includes = cacheHas;\n    seen = new SetCache;\n  }\n  else {\n    seen = iteratee ? [] : result;\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var seenIndex = seen.length;\n      while (seenIndex--) {\n        if (seen[seenIndex] === computed) {\n          continue outer;\n        }\n      }\n      if (iteratee) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n    else if (!includes(seen, computed, comparator)) {\n      if (seen !== result) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseUniq;\n\n},{\"./_SetCache\":162,\"./_arrayIncludes\":168,\"./_arrayIncludesWith\":169,\"./_cacheHas\":199,\"./_createSet\":202,\"./_setToArray\":249}],199:[function(require,module,exports){\narguments[4][50][0].apply(exports,arguments)\n},{\"dup\":50}],200:[function(require,module,exports){\narguments[4][51][0].apply(exports,arguments)\n},{\"./_isKey\":223,\"./_stringToPath\":256,\"./isArray\":266,\"./toString\":284,\"dup\":51}],201:[function(require,module,exports){\narguments[4][64][0].apply(exports,arguments)\n},{\"./_root\":246,\"dup\":64}],202:[function(require,module,exports){\nvar Set = require('./_Set'),\n    noop = require('./noop'),\n    setToArray = require('./_setToArray');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Creates a set object of `values`.\n *\n * @private\n * @param {Array} values The values to add to the set.\n * @returns {Object} Returns the new set.\n */\nvar createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n  return new Set(values);\n};\n\nmodule.exports = createSet;\n\n},{\"./_Set\":161,\"./_setToArray\":249,\"./noop\":277}],203:[function(require,module,exports){\narguments[4][66][0].apply(exports,arguments)\n},{\"./_SetCache\":162,\"./_arraySome\":173,\"./_cacheHas\":199,\"dup\":66}],204:[function(require,module,exports){\narguments[4][67][0].apply(exports,arguments)\n},{\"./_Symbol\":164,\"./_Uint8Array\":165,\"./_equalArrays\":203,\"./_mapToArray\":238,\"./_setToArray\":249,\"./eq\":259,\"dup\":67}],205:[function(require,module,exports){\narguments[4][68][0].apply(exports,arguments)\n},{\"./_getAllKeys\":207,\"dup\":68}],206:[function(require,module,exports){\n(function (global){\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],207:[function(require,module,exports){\narguments[4][70][0].apply(exports,arguments)\n},{\"./_baseGetAllKeys\":178,\"./_getSymbols\":212,\"./keys\":275,\"dup\":70}],208:[function(require,module,exports){\narguments[4][72][0].apply(exports,arguments)\n},{\"./_isKeyable\":224,\"dup\":72}],209:[function(require,module,exports){\narguments[4][73][0].apply(exports,arguments)\n},{\"./_isStrictComparable\":227,\"./keys\":275,\"dup\":73}],210:[function(require,module,exports){\narguments[4][74][0].apply(exports,arguments)\n},{\"./_baseIsNative\":187,\"./_getValue\":214,\"dup\":74}],211:[function(require,module,exports){\narguments[4][76][0].apply(exports,arguments)\n},{\"./_Symbol\":164,\"dup\":76}],212:[function(require,module,exports){\narguments[4][77][0].apply(exports,arguments)\n},{\"./_arrayFilter\":167,\"./stubArray\":279,\"dup\":77}],213:[function(require,module,exports){\narguments[4][79][0].apply(exports,arguments)\n},{\"./_DataView\":155,\"./_Map\":158,\"./_Promise\":160,\"./_Set\":161,\"./_WeakMap\":166,\"./_baseGetTag\":179,\"./_toSource\":258,\"dup\":79}],214:[function(require,module,exports){\narguments[4][80][0].apply(exports,arguments)\n},{\"dup\":80}],215:[function(require,module,exports){\narguments[4][81][0].apply(exports,arguments)\n},{\"./_castPath\":200,\"./_isIndex\":222,\"./_toKey\":257,\"./isArguments\":265,\"./isArray\":266,\"./isLength\":270,\"dup\":81}],216:[function(require,module,exports){\narguments[4][82][0].apply(exports,arguments)\n},{\"./_nativeCreate\":241,\"dup\":82}],217:[function(require,module,exports){\narguments[4][83][0].apply(exports,arguments)\n},{\"dup\":83}],218:[function(require,module,exports){\narguments[4][84][0].apply(exports,arguments)\n},{\"./_nativeCreate\":241,\"dup\":84}],219:[function(require,module,exports){\narguments[4][85][0].apply(exports,arguments)\n},{\"./_nativeCreate\":241,\"dup\":85}],220:[function(require,module,exports){\narguments[4][86][0].apply(exports,arguments)\n},{\"./_nativeCreate\":241,\"dup\":86}],221:[function(require,module,exports){\nvar Symbol = require('./_Symbol'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray');\n\n/** Built-in value references. */\nvar spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\n/**\n * Checks if `value` is a flattenable `arguments` object or array.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n */\nfunction isFlattenable(value) {\n  return isArray(value) || isArguments(value) ||\n    !!(spreadableSymbol && value && value[spreadableSymbol]);\n}\n\nmodule.exports = isFlattenable;\n\n},{\"./_Symbol\":164,\"./isArguments\":265,\"./isArray\":266}],222:[function(require,module,exports){\narguments[4][90][0].apply(exports,arguments)\n},{\"dup\":90}],223:[function(require,module,exports){\narguments[4][91][0].apply(exports,arguments)\n},{\"./isArray\":266,\"./isSymbol\":273,\"dup\":91}],224:[function(require,module,exports){\narguments[4][92][0].apply(exports,arguments)\n},{\"dup\":92}],225:[function(require,module,exports){\narguments[4][93][0].apply(exports,arguments)\n},{\"./_coreJsData\":201,\"dup\":93}],226:[function(require,module,exports){\narguments[4][94][0].apply(exports,arguments)\n},{\"dup\":94}],227:[function(require,module,exports){\narguments[4][95][0].apply(exports,arguments)\n},{\"./isObject\":271,\"dup\":95}],228:[function(require,module,exports){\narguments[4][96][0].apply(exports,arguments)\n},{\"dup\":96}],229:[function(require,module,exports){\narguments[4][97][0].apply(exports,arguments)\n},{\"./_assocIndexOf\":174,\"dup\":97}],230:[function(require,module,exports){\narguments[4][98][0].apply(exports,arguments)\n},{\"./_assocIndexOf\":174,\"dup\":98}],231:[function(require,module,exports){\narguments[4][99][0].apply(exports,arguments)\n},{\"./_assocIndexOf\":174,\"dup\":99}],232:[function(require,module,exports){\narguments[4][100][0].apply(exports,arguments)\n},{\"./_assocIndexOf\":174,\"dup\":100}],233:[function(require,module,exports){\narguments[4][101][0].apply(exports,arguments)\n},{\"./_Hash\":156,\"./_ListCache\":157,\"./_Map\":158,\"dup\":101}],234:[function(require,module,exports){\narguments[4][102][0].apply(exports,arguments)\n},{\"./_getMapData\":208,\"dup\":102}],235:[function(require,module,exports){\narguments[4][103][0].apply(exports,arguments)\n},{\"./_getMapData\":208,\"dup\":103}],236:[function(require,module,exports){\narguments[4][104][0].apply(exports,arguments)\n},{\"./_getMapData\":208,\"dup\":104}],237:[function(require,module,exports){\narguments[4][105][0].apply(exports,arguments)\n},{\"./_getMapData\":208,\"dup\":105}],238:[function(require,module,exports){\narguments[4][106][0].apply(exports,arguments)\n},{\"dup\":106}],239:[function(require,module,exports){\narguments[4][107][0].apply(exports,arguments)\n},{\"dup\":107}],240:[function(require,module,exports){\narguments[4][108][0].apply(exports,arguments)\n},{\"./memoize\":276,\"dup\":108}],241:[function(require,module,exports){\narguments[4][109][0].apply(exports,arguments)\n},{\"./_getNative\":210,\"dup\":109}],242:[function(require,module,exports){\narguments[4][110][0].apply(exports,arguments)\n},{\"./_overArg\":245,\"dup\":110}],243:[function(require,module,exports){\narguments[4][112][0].apply(exports,arguments)\n},{\"./_freeGlobal\":206,\"dup\":112}],244:[function(require,module,exports){\narguments[4][113][0].apply(exports,arguments)\n},{\"dup\":113}],245:[function(require,module,exports){\narguments[4][114][0].apply(exports,arguments)\n},{\"dup\":114}],246:[function(require,module,exports){\narguments[4][115][0].apply(exports,arguments)\n},{\"./_freeGlobal\":206,\"dup\":115}],247:[function(require,module,exports){\narguments[4][116][0].apply(exports,arguments)\n},{\"dup\":116}],248:[function(require,module,exports){\narguments[4][117][0].apply(exports,arguments)\n},{\"dup\":117}],249:[function(require,module,exports){\narguments[4][118][0].apply(exports,arguments)\n},{\"dup\":118}],250:[function(require,module,exports){\narguments[4][119][0].apply(exports,arguments)\n},{\"./_ListCache\":157,\"dup\":119}],251:[function(require,module,exports){\narguments[4][120][0].apply(exports,arguments)\n},{\"dup\":120}],252:[function(require,module,exports){\narguments[4][121][0].apply(exports,arguments)\n},{\"dup\":121}],253:[function(require,module,exports){\narguments[4][122][0].apply(exports,arguments)\n},{\"dup\":122}],254:[function(require,module,exports){\narguments[4][123][0].apply(exports,arguments)\n},{\"./_ListCache\":157,\"./_Map\":158,\"./_MapCache\":159,\"dup\":123}],255:[function(require,module,exports){\n/**\n * A specialized version of `_.indexOf` which performs strict equality\n * comparisons of values, i.e. `===`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction strictIndexOf(array, value, fromIndex) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = strictIndexOf;\n\n},{}],256:[function(require,module,exports){\narguments[4][124][0].apply(exports,arguments)\n},{\"./_memoizeCapped\":240,\"dup\":124}],257:[function(require,module,exports){\narguments[4][125][0].apply(exports,arguments)\n},{\"./isSymbol\":273,\"dup\":125}],258:[function(require,module,exports){\narguments[4][126][0].apply(exports,arguments)\n},{\"dup\":126}],259:[function(require,module,exports){\narguments[4][128][0].apply(exports,arguments)\n},{\"dup\":128}],260:[function(require,module,exports){\narguments[4][129][0].apply(exports,arguments)\n},{\"./_baseFindIndex\":175,\"./_baseIteratee\":189,\"./toInteger\":282,\"dup\":129}],261:[function(require,module,exports){\nvar baseFlatten = require('./_baseFlatten');\n\n/**\n * Flattens `array` a single level deep.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * _.flatten([1, [2, [3, [4]], 5]]);\n * // => [1, 2, [3, [4]], 5]\n */\nfunction flatten(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? baseFlatten(array, 1) : [];\n}\n\nmodule.exports = flatten;\n\n},{\"./_baseFlatten\":176}],262:[function(require,module,exports){\narguments[4][130][0].apply(exports,arguments)\n},{\"./_baseGet\":177,\"dup\":130}],263:[function(require,module,exports){\narguments[4][131][0].apply(exports,arguments)\n},{\"./_baseHasIn\":180,\"./_hasPath\":215,\"dup\":131}],264:[function(require,module,exports){\narguments[4][132][0].apply(exports,arguments)\n},{\"dup\":132}],265:[function(require,module,exports){\narguments[4][133][0].apply(exports,arguments)\n},{\"./_baseIsArguments\":182,\"./isObjectLike\":272,\"dup\":133}],266:[function(require,module,exports){\narguments[4][134][0].apply(exports,arguments)\n},{\"dup\":134}],267:[function(require,module,exports){\narguments[4][135][0].apply(exports,arguments)\n},{\"./isFunction\":269,\"./isLength\":270,\"dup\":135}],268:[function(require,module,exports){\narguments[4][136][0].apply(exports,arguments)\n},{\"./_root\":246,\"./stubFalse\":280,\"dup\":136}],269:[function(require,module,exports){\narguments[4][138][0].apply(exports,arguments)\n},{\"./_baseGetTag\":179,\"./isObject\":271,\"dup\":138}],270:[function(require,module,exports){\narguments[4][139][0].apply(exports,arguments)\n},{\"dup\":139}],271:[function(require,module,exports){\narguments[4][140][0].apply(exports,arguments)\n},{\"dup\":140}],272:[function(require,module,exports){\narguments[4][141][0].apply(exports,arguments)\n},{\"dup\":141}],273:[function(require,module,exports){\narguments[4][142][0].apply(exports,arguments)\n},{\"./_baseGetTag\":179,\"./isObjectLike\":272,\"dup\":142}],274:[function(require,module,exports){\narguments[4][143][0].apply(exports,arguments)\n},{\"./_baseIsTypedArray\":188,\"./_baseUnary\":197,\"./_nodeUtil\":243,\"dup\":143}],275:[function(require,module,exports){\narguments[4][144][0].apply(exports,arguments)\n},{\"./_arrayLikeKeys\":170,\"./_baseKeys\":190,\"./isArrayLike\":267,\"dup\":144}],276:[function(require,module,exports){\narguments[4][146][0].apply(exports,arguments)\n},{\"./_MapCache\":159,\"dup\":146}],277:[function(require,module,exports){\n/**\n * This method returns `undefined`.\n *\n * @static\n * @memberOf _\n * @since 2.3.0\n * @category Util\n * @example\n *\n * _.times(2, _.noop);\n * // => [undefined, undefined]\n */\nfunction noop() {\n  // No operation performed.\n}\n\nmodule.exports = noop;\n\n},{}],278:[function(require,module,exports){\narguments[4][147][0].apply(exports,arguments)\n},{\"./_baseProperty\":193,\"./_basePropertyDeep\":194,\"./_isKey\":223,\"./_toKey\":257,\"dup\":147}],279:[function(require,module,exports){\narguments[4][148][0].apply(exports,arguments)\n},{\"dup\":148}],280:[function(require,module,exports){\narguments[4][149][0].apply(exports,arguments)\n},{\"dup\":149}],281:[function(require,module,exports){\narguments[4][150][0].apply(exports,arguments)\n},{\"./toNumber\":283,\"dup\":150}],282:[function(require,module,exports){\narguments[4][151][0].apply(exports,arguments)\n},{\"./toFinite\":281,\"dup\":151}],283:[function(require,module,exports){\narguments[4][152][0].apply(exports,arguments)\n},{\"./isObject\":271,\"./isSymbol\":273,\"dup\":152}],284:[function(require,module,exports){\narguments[4][153][0].apply(exports,arguments)\n},{\"./_baseToString\":196,\"dup\":153}],285:[function(require,module,exports){\nvar baseIteratee = require('./_baseIteratee'),\n    baseUniq = require('./_baseUniq');\n\n/**\n * This method is like `_.uniq` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * uniqueness is computed. The order of result values is determined by the\n * order they occur in the array. The iteratee is invoked with one argument:\n * (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n * // => [2.1, 1.2]\n *\n * // The `_.property` iteratee shorthand.\n * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n * // => [{ 'x': 1 }, { 'x': 2 }]\n */\nfunction uniqBy(array, iteratee) {\n  return (array && array.length) ? baseUniq(array, baseIteratee(iteratee, 2)) : [];\n}\n\nmodule.exports = uniqBy;\n\n},{\"./_baseIteratee\":189,\"./_baseUniq\":198}],286:[function(require,module,exports){\n/**\n * Convert SGF files to a JS object\n * @param {string} sgf A valid SGF file.\n * @see http://www.red-bean.com/sgf/sgf4.html\n * @return {object} The SGF file represented as a JS object\n */\nexports.parse = function (sgf) {\n\t'use strict';\n\n\tvar parse;\n\tvar parser;\n\tvar collection = {};\n\n\t// tracks the current sequence\n\tvar sequence;\n\n\t// tracks the current node\n\tvar node;\n\n\t// tracks the last PropIdent\n\tvar lastPropIdent;\n\n\t// A map of functions to parse the different components of an SGF file\n\tparser = {\n\n\t\tbeginSequence: function (sgf) {\n\t\t\tvar key = 'sequences';\n\n\t\t\t// Top-level sequences are gameTrees\n\t\t\tif (!sequence) {\n\t\t\t\tsequence = collection;\n\t\t\t\tkey = 'gameTrees';\n\t\t\t}\n\n\t\t\tif (sequence.gameTrees) {\n\t\t\t\tkey = 'gameTrees';\n\t\t\t}\n\n\t\t\tvar newSequence = {\n\t\t\t\tparent: sequence\n\t\t\t};\n\n\t\t\tsequence[key] = sequence[key] || [];\n\t\t\tsequence[key].push(newSequence);\n\t\t\tsequence = newSequence;\n\n\t\t\treturn sgf.substring(1);\n\t\t},\n\n\t\tendSequence: function (sgf) {\n\t\t\tif (sequence.parent) {\n\t\t\t\tsequence = sequence.parent;\n\t\t\t} else {\n\t\t\t\tsequence = null;\n\t\t\t}\n\t\t\treturn sgf.substring(1);\n\t\t},\n\n\t\tnode: function (sgf) {\n\t\t\tnode = {};\n\t\t\tsequence.nodes = sequence.nodes || [];\n\t\t\tsequence.nodes.push(node);\n\t\t\treturn sgf.substring(1);\n\t\t},\n\n\t\tproperty: function (sgf) {\n\t\t\tvar propValue;\n\n\t\t\t// Search for the first unescaped ]\n\t\t\tvar firstPropEnd = sgf.match(/([^\\\\\\]]|\\\\(.|\\n|\\r))*\\]/);\n\n\t\t\tif (!firstPropEnd.length) {\n\t\t\t\tthrow new Error('malformed sgf');\n\t\t\t}\n\n\t\t\tfirstPropEnd = firstPropEnd[0].length;\n\n\t\t\tvar property = sgf.substring(0, firstPropEnd);\n\t\t\tvar propValueBegin = property.indexOf('[');\n\t\t\tvar propIdent = property.substring(0, propValueBegin);\n\n\t\t\t// Point lists don't declare a PropIdent for each PropValue\n\t\t\t// Instead, they should use the last declared property\n\t\t\t// See: http://www.red-bean.com/sgf/sgf4.html#move/pos\n\t\t\tif (!propIdent) {\n\t\t\t\tpropIdent = lastPropIdent;\n\n\t\t\t\t// If this is the first property in a list of multiple\n\t\t\t\t// properties, we need to wrap the PropValue in an array\n\t\t\t\tif (!Array.isArray(node[propIdent])) {\n\t\t\t\t\tnode[propIdent] = [node[propIdent]];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlastPropIdent = propIdent;\n\n\t\t\tpropValue = property.substring(propValueBegin + 1, property.length - 1);\n\n\t\t\t// We have no problem parsing PropIdents of any length, but the spec\n\t\t\t// says they should be no longer than two characters.\n\t\t\t//\n\t\t\t// http://www.red-bean.com/sgf/sgf4.html#2.2\n\t\t\tif (propIdent.length > 2) {\n\t\t\t\t// TODO: What's the best way to issue a warning?\n\t\t\t\tconsole.warn(\n\t\t\t\t\t'SGF PropIdents should be no longer than two characters:', propIdent\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (Array.isArray(node[propIdent])) {\n\t\t\t\tnode[propIdent].push(propValue);\n\t\t\t} else {\n\t\t\t\tnode[propIdent] = propValue;\n\t\t\t}\n\n\t\t\treturn sgf.substring(firstPropEnd);\n\t\t},\n\n\t\t// Whitespace, tabs, or anything else we don't recognize\n\t\tunrecognized: function (sgf) {\n\n\t\t\t// March ahead to the next character\n\t\t\treturn sgf.substring(1);\n\t\t}\n\t};\n\n\t// Processes an SGF file character by character\n\tparse = function (sgf) {\n\t\twhile (sgf) {\n\t\t\tvar initial = sgf.substring(0, 1);\n\t\t\tvar type;\n\n\t\t\t// Use the initial (the first character in the remaining sgf file) to\n\t\t\t// decide which parser function to use\n\t\t\tif (initial === '(') {\n\t\t\t\ttype = 'beginSequence';\n\t\t\t} else if (initial === ')') {\n\t\t\t\ttype = 'endSequence';\n\t\t\t} else if (initial === ';') {\n\t\t\t\ttype = 'node';\n\t\t\t} else if (initial.search(/[A-Z\\[]/) !== -1) {\n\t\t\t\ttype = 'property';\n\t\t\t} else {\n\t\t\t\ttype = 'unrecognized';\n\t\t\t}\n\n\t\t\tsgf = parser[type](sgf);\n\t\t}\n\n\t\treturn collection;\n\t};\n\n\t// Begin parsing the SGF file\n\treturn parse(sgf);\n};\n\n/**\n * Generate an SGF file from a SmartGame Record JavaScript Object\n * @param {object} record A record object.\n * @return {string} The record as a string suitable for saving as an SGF file\n */\nexports.generate = function (record) {\n\t'use strict';\n\n\tfunction stringifySequences(sequences) {\n\t\tvar contents = '';\n\n\t\tsequences.forEach(function (sequence) {\n\t\t\tcontents += '(';\n\n\t\t\t// Parse all nodes in this sequence\n\t\t\tif (sequence.nodes) {\n\t\t\t\tsequence.nodes.forEach(function (node) {\n\t\t\t\t\tvar nodeString = ';';\n\t\t\t\t\tfor (var property in node) {\n\t\t\t\t\t\tif (node.hasOwnProperty(property)) {\n\t\t\t\t\t\t\tvar prop = node[property];\n\t\t\t\t\t\t\tif (Array.isArray(prop)) {\n\t\t\t\t\t\t\t\tprop = prop.join('][');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tnodeString += property + '[' + prop + ']';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcontents += nodeString;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Call the function we're in recursively for any child sequences\n\t\t\tif (sequence.sequences) {\n\t\t\t\tcontents += stringifySequences(sequence.sequences);\n\t\t\t}\n\n\t\t\tcontents += ')';\n\t\t});\n\n\t\treturn contents;\n\t}\n\n\treturn stringifySequences(record.gameTrees);\n};\n\n\n},{}],287:[function(require,module,exports){\n/**\n * Interact with smartgame objects.\n * @param {object} smartgame A JS Object representing a smartgame\n * @see http://www.red-bean.com/sgf/sgf4.html\n * @return {object} An object with methods for navigating and manipulating a\n * smartgame\n */\nmodule.exports = function (smartgame) {\n\t'use strict';\n\n\tvar sequence;\n\tvar node;\n\n\tvar Smartgamer = function () {\n\t\tthis.init();\n\t};\n\n\tSmartgamer.prototype = {\n\t\tinit: function () {\n\t\t\tif (smartgame) {\n\t\t\t\tthis.game = smartgame.gameTrees[0];\n\t\t\t\tthis.reset();\n\t\t\t}\n\t\t},\n\n\t\t// Load a smartgame to make it possible to load new games or add one after\n\t\t// initialization, if desired\n\t\tload: function (newSmartgame) {\n\t\t\tsmartgame = newSmartgame;\n\t\t\tthis.init();\n\t\t},\n\n\t\t// Having multiple games in a collection is not common, but it's part of\n\t\t// the spec\n\t\tgames: function () {\n\t\t\treturn smartgame.gameTrees;\n\t\t},\n\n\t\tselectGame: function (i) {\n\t\t\tif (i < smartgame.gameTrees.length) {\n\t\t\t\tthis.game = smartgame.gameTrees[i];\n\t\t\t\tthis.reset();\n\t\t\t} else {\n\t\t\t\tthrow new Error('the collection doesn\\'t contain that many games');\n\t\t\t}\n\n\t\t\treturn this;\n\t\t},\n\n\t\treset: function () {\n\t\t\tsequence = this.game;\n\t\t\tnode = sequence.nodes[0];\n\t\t\tthis.path = { m: 0 };\n\n\t\t\treturn this;\n\t\t},\n\n\t\tgetSmartgame: function () {\n\t\t\treturn smartgame;\n\t\t},\n\n\t\t/**\n\t\t * Return any variations available at the current move\n\t\t **/\n\t\tvariations: function () {\n\t\t\tif (sequence) {\n\t\t\t\tvar localNodes = sequence.nodes;\n\t\t\t\tvar localIndex = (localNodes) ? localNodes.indexOf(node) : null;\n\n\t\t\t\tif (localNodes) {\n\t\t\t\t\tif (localIndex === (localNodes.length - 1)) {\n\t\t\t\t\t\treturn sequence.sequences || [];\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn [];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Go to the next move\n\t\t **/\n\t\tnext: function (variation) {\n\t\t\tvariation = variation || 0;\n\n\t\t\tvar localNodes = sequence.nodes;\n\t\t\tvar localIndex = (localNodes) ? localNodes.indexOf(node) : null;\n\n\t\t\t// If there are no additional nodes in this sequence,\n\t\t\t// advance to the next one\n\t\t\tif (localIndex === null || localIndex >= (localNodes.length - 1)) {\n\t\t\t\tif (sequence.sequences) {\n\t\t\t\t\tif (sequence.sequences[variation]) {\n\t\t\t\t\t\tsequence = sequence.sequences[variation];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsequence = sequence.sequences[0];\n\t\t\t\t\t}\n\n\t\t\t\t\tnode = sequence.nodes[0];\n\n\t\t\t\t\t// Note the fork chosen for this variation in the path\n\t\t\t\t\tthis.path[this.path.m] = variation;\n\t\t\t\t\tthis.path.m += 1;\n\t\t\t\t} else {\n\t\t\t\t\t// End of sequence / game\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnode = localNodes[localIndex + 1];\n\t\t\t\tthis.path.m += 1;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t},\n\n\t\t/**\n\t\t * Go to the previous move\n\t\t **/\n\t\tprevious: function () {\n\t\t\tvar localNodes = sequence.nodes;\n\t\t\tvar localIndex = (localNodes) ? localNodes.indexOf(node) : null;\n\n\t\t\t// Delete any variation forks at this point\n\t\t\t// TODO: Make this configurable... we should keep this if we're\n\t\t\t// remembering chosen paths\n\t\t\tdelete this.path[this.path.m];\n\n\t\t\tif (!localIndex || localIndex === 0) {\n\t\t\t\tif (sequence.parent && !sequence.parent.gameTrees) {\n\t\t\t\t\tsequence = sequence.parent;\n\t\t\t\t\tif (sequence.nodes) {\n\t\t\t\t\t\tnode = sequence.nodes[sequence.nodes.length - 1];\n\t\t\t\t\t\tthis.path.m -= 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnode = null;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// Already at the beginning\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnode = localNodes[localIndex - 1];\n\t\t\t\tthis.path.m -= 1;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t},\n\n\t\t// Go to the last move of the game\n\t\tlast: function () {\n\t\t\tvar totalMoves = this.totalMoves();\n\n\t\t\twhile(this.path.m < totalMoves) {\n\t\t\t\tthis.next();\n\t\t\t}\n\n\t\t\treturn this;\n\t\t},\n\n\t\t// Go to the first move of the game\n\t\tfirst: function () {\n\t\t\tthis.reset();\n\t\t\treturn this;\n\t\t},\n\n\t\t/**\n\t\t * Go to a particular move, specified as a\n\t\t * a) number\n\t\t * b) path string\n\t\t * c) path object\n\t\t **/\n\t\tgoTo: function (path) {\n\t\t\tif (typeof path === 'string') {\n\t\t\t\tpath = this.pathTransform(path, 'object');\n\t\t\t} else if (typeof path === 'number') {\n\t\t\t\tpath = { m: path };\n\t\t\t}\n\n\t\t\tthis.reset();\n\n\t\t\tvar n = node;\n\n\t\t\tfor (var i = 0; i < path.m && n; i += 1) {\n\t\t\t\t// Check for a variation in the path for the upcoming move\n\t\t\t\tvar variation = path[i + 1] || 0;\n\t\t\t\tn = this.next(variation);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t},\n\n\t\tgetGameInfo: function () {\n\t\t\treturn this.game.nodes[0];\n\t\t},\n\n\t\t// Provide the current node\n\t\tnode: function () {\n\t\t\treturn node;\n\t\t},\n\n\t\t// Get the total number of moves in a game\n\t\ttotalMoves: function () {\n\t\t\tvar localSequence = this.game;\n\t\t\tvar moves = 0;\n\t\t\twhile(localSequence) {\n\t\t\t\tmoves += localSequence.nodes.length;\n\n\t\t\t\tif (localSequence.sequences) {\n\t\t\t\t\tlocalSequence = localSequence.sequences[0];\n\t\t\t\t} else {\n\t\t\t\t\tlocalSequence = null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// TODO: Right now we're *assuming* that the root node doesn't have a\n\t\t\t// move in it, which is *recommended* but not required practice.\n\t\t\t// @see http://www.red-bean.com/sgf/sgf4.html\n\t\t\t// \"Note: it's bad style to have move properties in root nodes.\n\t\t\t// (it isn't forbidden though)\"\n\t\t\treturn moves - 1;\n\t\t},\n\n\t\t// Get or set a comment on the current node\n\t\t// @see http://www.red-bean.com/sgf/sgf4.html#text\n\t\tcomment: function (text) {\n\t\t\tif (typeof text === 'undefined') {\n\t\t\t\t// Unescape characters\n\t\t\t\tif (node.C) {\n\t\t\t\t\treturn node.C.replace(/\\\\([\\\\:\\]])/g, '$1');\n\t\t\t\t} else {\n\t\t\t\t\treturn '';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Escape characters\n\t\t\t\tnode.C = text.replace(/[\\\\:\\]]/g, '\\\\$&');\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Translate alpha coordinates into an array\n\t\t * @param string alphaCoordinates\n\t\t * @return array [x, y]\n\t\t **/\n\t\ttranslateCoordinates: function (alphaCoordinates) {\n\t\t\tvar coordinateLabels = 'abcdefghijklmnopqrst';\n\t\t\tvar intersection = [];\n\n\t\t\tintersection[0] = coordinateLabels.indexOf(alphaCoordinates.substring(0, 1));\n\t\t\tintersection[1] = coordinateLabels.indexOf(alphaCoordinates.substring(1, 2));\n\n\t\t\treturn intersection;\n\t\t},\n\n\t\t/**\n\t\t * Convert path objects to strings and path strings to objects\n\t\t **/\n\t\tpathTransform: function (input, outputType, verbose) {\n\t\t\tvar output;\n\n\t\t\t// If no output type has been specified, try to set it to the\n\t\t\t// opposite of the input\n\t\t\tif (typeof outputType === 'undefined') {\n\t\t\t\toutputType = (typeof input === 'string') ? 'object' : 'string';\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Turn a path object into a string.\n\t\t\t */\n\t\t\tfunction stringify(input) {\n\t\t\t\tif (typeof input === 'string') {\n\t\t\t\t\treturn input;\n\t\t\t\t}\n\n\t\t\t\tif (!input) {\n\t\t\t\t\treturn '';\n\t\t\t\t}\n\n\t\t\t\toutput = input.m;\n\n\t\t\t\tvar variations = [];\n\t\t\t\tfor (var key in input) {\n\t\t\t\t\tif (input.hasOwnProperty(key) && key !== 'm') {\n\t\t\t\t\t\t// Only show variations that are not the primary one, since\n\t\t\t\t\t\t// primary variations are chosen by default\n\t\t\t\t\t\tif (input[key] > 0) {\n\t\t\t\t\t\t\tif (verbose) {\n\t\t\t\t\t\t\t\tvariations.push(', variation ' + input[key] + ' at move ' + key);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tvariations.push('-' + key + ':' + input[key]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\toutput += variations.join('');\n\t\t\t\treturn output;\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Turn a path string into an object.\n\t\t\t */\n\t\t\tfunction parse(input) {\n\t\t\t\tif (typeof input === 'object') {\n\t\t\t\t\tinput = stringify(input);\n\t\t\t\t}\n\n\t\t\t\tif (!input) {\n\t\t\t\t\treturn { m: 0 };\n\t\t\t\t}\n\n\t\t\t\tvar path = input.split('-');\n\t\t\t\toutput = {\n\t\t\t\t\tm: Number(path.shift())\n\t\t\t\t};\n\n\t\t\t\tif (path.length) {\n\t\t\t\t\tpath.forEach(function (variation, i) {\n\t\t\t\t\t\tvariation = variation.split(':');\n\t\t\t\t\t\toutput[Number(variation[0])] = parseInt(variation[1], 10);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn output;\n\t\t\t}\n\n\t\t\tif (outputType === 'string') {\n\t\t\t\toutput = stringify(input);\n\t\t\t} else if (outputType === 'object') {\n\t\t\t\toutput = parse(input);\n\t\t\t} else {\n\t\t\t\toutput = undefined;\n\t\t\t}\n\n\t\t\treturn output;\n\t\t}\n\t};\n\n\treturn new Smartgamer();\n};\n\n},{}],288:[function(require,module,exports){\n'use strict';\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n/* globals module: false, require: false\r\n\n*/\n\n/**\r\n * \r\n * @param {object} [options=] Defines various options for the output SGF. May be omitted, in which case the default options (see below) are used.\r\n * @param {boolean} [options.addComments = true] When flagged, comments are added to each node giving the move number and the number of stones captured by Black and White.\r\n * @param {boolean} [options.addPasses = true] When flagged, a pass is added to each node corresponding to a move by a player. This can make the output more easy to navigate in some viewers.\r\n * @param {array} [options.boardDimensions = [11, 11]] May be used for rectangular t-Go. Should be ommitted for [n, n] t-Go, where n is specified in the input SGF (@param variantSgf).\r\n * @param {number} [options.coordinatesType = 1] 0: none;\r\n * 1: Bottom to top & left to right; western numbers;\r\n * 2: Top to  & left to right; western numbers (not yet implemented);\r\n * 3: Top to bottom & left to right; first coordinate is in Japanese characters (not yet implemented);\r\n * 4: Top to bottom & left to right; first coordinate is in Chinese characters (not yet implemented);\r\n * @param {number} [options.wraparoundMarkersType = 1] 0: none;\r\n * 1: Full outline, using unicode Box Drawing symbols;\r\n * 2: corners and middles, using unicode Box Drawing symbols;\r\n * 3: just corners, using unicode Box Drawing symbols;\r\n * 4: just middles, using unicode Box Drawing symbols;\r\n * @param {object} [options.projectionSettings=] Further optional settings for how the (toroidal, or other sort of) board is projected to a flat grid.\r\n * @param {number} [options.projectionSettings.wraparound = 4]  Number of lines to add for the “wraparound”.\r\n * @param {array} [options.projectionSettings.offset = [0,0]]  Translation to apply to all moves.\r\n * @param {boolean} [options.transformToString=true] When set to false, the output is an object (an instance of a Smartgame).\r\n * @public\r\n * @return {object} An object exposing functions for going back and forth between SGF for a standard viewer, and SGF for a game of toroidal Go\r\n */ /*todos:\r\n    options.markLastMove Default value: 'CR'\r\n    opions.placesToCount Default: undefined. May be: 'last'|[countInfo1, .. countInfo1]. countInfo is a path plus an array with a point for each chain to be considered as dead. {path, deadChains: [...]}\r\n    options.projectionSettings.rotation {integer} Default value: 0. Allowed values: 0 .. 3\r\n    options.projectionSettings.normalize1stMove array, or one of: C, TL TR BL BR \r\n    options.projectionSettings.normalize2ndMove \r\n    */\nfunction transformer(options) {\n\t'use strict';\n\n\tvar _flatten = require('lodash/flatten'),\n\t    _uniqBy = require('lodash/uniqBy'),\n\t    _fi = require('lodash/findIndex'),\n\t    modulo = function modulo(x, y) {\n\t\treturn (x % y + y) % y;\n\t},\n\t    sourceSgfMessage = 'source sgf for toroidal Go has been adapted by go-variants-transformer so as to be rendered by any standard Go application';\n\toptions = _extends({\n\t\taddPasses: true,\n\t\tboardDimensions: [11, 11],\n\t\ttransformToString: true,\n\t\taddComments: true,\n\t\tcoordinatesType: 1,\n\t\twraparoundMarkersType: 1\n\t\t//above are the defaults\n\t}, options);\n\toptions.projectionSettings = _extends({\n\t\twraparound: 4,\n\t\toffset: [0, 0]\n\t}, options.projectionSettings);\n\n\tif (options.addPasses === undefined) options.addPasses = true;\n\n\toptions.boardDimensions = options.boardDimensions || [11, 11];\n\n\tif (options.transformToString === undefined) options.transformToString = true;\n\n\tif (options.addComments === undefined) options.addComments = true;\n\t// options.projectionSettings = \n\n\tvar wraparound = options.projectionSettings.wraparound;\n\n\tvar $ = {}\n\t// , _markersForWraparound = null\n\t,\n\t    coordinateLabels = function coordinateLabels(i) {\n\t\t// 97..122 and 65..90\n\t\treturn String.fromCharCode(i < 26 ? i + 97 : i + 39);\n\t\t//65 - 26 =\n\t},\n\t    translateCoordinate = function translateCoordinate(c) {\n\t\tvar r = c.charCodeAt(0);\n\t\treturn r >= 97 ? r - 97 : r - 26;\n\t},\n\n\t/**\r\n  * Translate alpha coordinates into an array\r\n  * @param string alphaCoordinates\r\n  * @return array [x, y]\r\n  **/\n\ttranslateCoordinates = function translateCoordinates(alphaCoordinates) {\n\t\treturn [translateCoordinate(alphaCoordinates.substring(0, 1)), translateCoordinate(alphaCoordinates.substring(1, 2))];\n\t};\n\n\t$.coordinateLabels = coordinateLabels;\n\t$.translateCoordinates = translateCoordinates;\n\t/**\r\n  * @public\r\n  */\n\t$.options = options;\n\n\t$.projectOnLine = function (a, isVertical) {\n\t\t/*\r\n  m: boardDimensions[0] : 11\r\n  n: wraparound : 4\r\n  line: 0,...,(m-1)\r\n  =>\r\n  0,...,(n-1), (start line) n, ... , (n + m - 1) end line,  (n+m), ... , (2n + m - 1)\r\n  \t\tcoordinate a ∈ {0 .. m-1} projects to n + a in main area\r\n  all projections are of the form n + a + xm, x ∈ ℤ s.t. 0 ≤ n + a + xm ≤ 2n + m -1\r\n  -xm ≤ n + a\r\n  \tsmallest such x < 0 is ceil(-(n+a)/m)\r\n   xm ≤ n + m - 1 -a\r\n  \tlargest such x is floor((n + m - 1 -a) / m)\r\n  \r\n  */\n\n\t\tvar m //= options.boardDimensions[0]\n\t\t= options.boardDimensions[isVertical ? 1 : 0],\n\t\t    r = [];\n\n\t\tfor (var i = Math.ceil(-(wraparound + a) / m); i <= (wraparound + m - 1 - a) / m; i++) {\n\t\t\tr.push(wraparound + a + i * m);\n\t\t}return r;\n\t};\n\n\t/**\r\n  * This is the inverse function to the function “projectOnFlat” – at least it is when “multiple” is false.\r\n  * @param {Array} points The point or array of points projected onto the grid.\r\n  * @param {Boolean=false} multiple Whether the argument “points” is the image of a single point (“multiple=false”) or of multiple points.\r\n  * @returns {Array} When the flag “multiple” is flagged, returns an array of points; otherwise returns a single point (i.e. an array of two integers).\r\n  */\n\tfunction inverseProjectOnFlat(points, multiple) {\n\t\tif (!Array.isArray(points[0])) points = [points];\n\t\tif (!multiple) return [modulo(points[0][0] - options.projectionSettings.offset[0] - wraparound, options.boardDimensions[0]), modulo(points[0][1] - options.projectionSettings.offset[1] - wraparound, options.boardDimensions[1])];\n\t\treturn _uniqBy(points.map(function (x) {\n\t\t\treturn inverseProjectOnFlat([x]);\n\t\t}), function (x) {\n\t\t\treturn x[0] + '_' + x[1];\n\t\t});\n\t}\n\t$.inverseProjectOnFlat = inverseProjectOnFlat;\n\n\t/**\r\n  * Projects a point on the t-Go board to the array of points on the standard grid/board.\r\n  * @param {Array} p The point in the t-Go board to be projected on to the grid.\r\n  * @returns {Array}\r\n  */\n\tfunction projectOnFlat(p) {\n\t\tvar a = $.projectOnLine(p[0] + options.projectionSettings.offset[0]),\n\t\t    b = $.projectOnLine(p[1] + options.projectionSettings.offset[1]),\n\t\t    r = [];\n\t\tfor (var i = 0; i < a.length; i++) {\n\t\t\tfor (var j = 0; j < b.length; j++) {\n\t\t\t\tr.push([a[i], b[j]]);\n\t\t\t}\n\t\t}return r;\n\t}\n\t$.projectOnFlat = projectOnFlat;\n\n\t$.modX = function (x) {\n\t\treturn modulo(x, options.boardDimensions[0]);\n\t};\n\t$.modY = function (y) {\n\t\treturn modulo(y, options.boardDimensions[1]);\n\t};\n\n\tvar setUpMarkers = function setUpMarkers() {\n\t\t$.wraparoundAndCoords = [];\n\n\t\t// $.getMarkersForWraparound = function (){\n\t\tif (options.projectionSettings.wraparound > 0) {\n\t\t\tvar m = options.boardDimensions[0],\n\t\t\t    n = options.boardDimensions[1];\n\n\t\t\t/*\r\n   m: boardDimensions[0] : 11\r\n   w: wraparound : 4\r\n   line: 0,...,(m-1)\r\n   =>\r\n   0,...,(w-1), (start line) w, ... , (w + m - 1) end line, (w+m), ... , (2w + m - 1)\r\n   */\n\n\t\t\tvar board = [];\n\t\t\tif ([1, 2, 4].indexOf(options.wraparoundMarkersType) > -1) {\n\t\t\t\tvar middles = options.wraparoundMarkersType > 1 ? [Math.floor((m - 1) / 2) + 1, Math.ceil((m - 1) / 2) + 1, Math.floor((n - 1) / 2) + 1, Math.ceil((n - 1) / 2) + 1] : [-1, 99, -1, 99];\n\t\t\t\tfor (var i = 1; i <= m; i++) {\n\t\t\t\t\tif (i < middles[0] || i > middles[1]) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tvar label = '─'; //U+2500 Box Drawings Light Horizontal\n\n\t\t\t\t\tboard.push(coordinateLabels(wraparound - 1 + i) + coordinateLabels(wraparound - 1) + \":\" + label);\n\t\t\t\t\tboard.push(coordinateLabels(wraparound - 1 + i) + coordinateLabels(wraparound + m) + \":\" + label);\n\t\t\t\t}\n\t\t\t\tfor (var _i = 1; _i <= n; _i++) {\n\t\t\t\t\tif (_i < middles[2] || _i > middles[3]) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tvar _label = '│'; //unicode too\n\t\t\t\t\tboard.push(coordinateLabels(wraparound - 1) + coordinateLabels(wraparound - 1 + _i) + \":\" + _label);\n\t\t\t\t\tboard.push(coordinateLabels(wraparound + n) + coordinateLabels(wraparound - 1 + _i) + \":\" + _label);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ([1, 2, 3].indexOf(options.wraparoundMarkersType) > -1) {\n\t\t\t\t//┘  ┌  └ ┐\n\t\t\t\tboard.push(coordinateLabels(wraparound - 1) + coordinateLabels(wraparound + n) + \":└\");\n\t\t\t\tboard.push(coordinateLabels(wraparound + m) + coordinateLabels(wraparound + n) + \":┘\");\n\t\t\t\tboard.push(coordinateLabels(wraparound - 1) + coordinateLabels(wraparound - 1) + \":┌\");\n\t\t\t\tboard.push(coordinateLabels(wraparound + m) + coordinateLabels(wraparound - 1) + \":┐\");\n\t\t\t}\n\n\t\t\tif (options.coordinatesType > 0 && wraparound > 1) {\n\t\t\t\tfor (var _i2 = 1; _i2 < 2 * wraparound + m - 1; _i2++) {\n\t\t\t\t\tvar coordIndex = $.modX(-options.projectionSettings.offset[0] - wraparound + _i2);\n\n\t\t\t\t\t//omit the I - historical coordinates for Go...\n\t\t\t\t\t//I: 9th letter\n\t\t\t\t\tif (coordIndex >= 8) {\n\t\t\t\t\t\tcoordIndex++;\n\t\t\t\t\t}\n\t\t\t\t\tvar _label2 = coordinateLabels(coordIndex).toUpperCase();\n\t\t\t\t\tboard.push(coordinateLabels(_i2) + coordinateLabels(0) + \":\" + _label2);\n\t\t\t\t\tboard.push(coordinateLabels(_i2) + coordinateLabels(2 * wraparound + n - 1) + \":\" + _label2);\n\t\t\t\t}\n\n\t\t\t\tfor (var _i3 = 1; _i3 < 2 * wraparound + n - 1; _i3++) {\n\t\t\t\t\tvar _coordIndex = $.modY(n + options.projectionSettings.offset[1] + wraparound - _i3 - 1);\n\t\t\t\t\tvar _label3 = '' + (_coordIndex + 1);\n\t\t\t\t\tboard.push(coordinateLabels(0) + coordinateLabels(_i3) + \":\" + _label3);\n\t\t\t\t\tboard.push(coordinateLabels(2 * wraparound + m - 1) + coordinateLabels(_i3) + \":\" + _label3);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$.wraparoundAndCoords = board;\n\t\t}\n\t};\n\tsetUpMarkers();\n\n\t$.coords2String =\n\t/**\r\n  * converts coordinates to a string\r\n  */\n\tfunction coords2String(coords) {\n\t\treturn coordinateLabels(coords[0]) + coordinateLabels(coords[1]);\n\t};\n\n\tfunction goThroughTree(state) {\n\t\tvar wrappedGame = state.wrappedGame,\n\t\t    node = state.node,\n\t\t    pending = state.pending,\n\t\t    currentPath = state.currentPath,\n\t\t    tGo = state.tGo,\n\t\t    nbVariations = wrappedGame.variations().length;\n\n\t\tif (currentPath.m > 1000) throw new Error('seem to be stuck!');\n\t\tstate.hasSiblings = nbVariations > 0;\n\t\tif (state.hasSiblings) {\n\t\t\t// if(currentPath[m] === undefined)\n\t\t\t// currentPath[m] = 0\n\t\t\t// else\n\t\t\t// currentPath[m] += 1\n\t\t\t// currentPath.m += 1\n\t\t\tfor (var i = nbVariations - 1; i > 0; i--)\n\t\t\t//pile up in this order, as it's FILO and we want the last variation, which may contain a mode added by CGoboard to go last\n\t\t\t{\n\t\t\t\tvar pathForLater = _extends({}, currentPath); //Object.assign({}, currentPath)\n\t\t\t\tpathForLater[currentPath.m + 1] = i;\n\t\t\t\tpathForLater.m += 1;\n\n\t\t\t\tif (tGo !== undefined) pending.push({ path: pathForLater, tGoData: tGo.exportData() });else pending.push({ path: pathForLater });\n\t\t\t}\n\t\t\tstate.node = wrappedGame.next().node();\n\t\t\tcurrentPath[currentPath.m + 1] = 0;\n\t\t\tcurrentPath.m += 1;\n\t\t\treturn state.node;\n\t\t}\n\n\t\tvar nextNode = wrappedGame.next().node();\n\t\tif (node === nextNode) {\n\t\t\t//at a leaf:\n\t\t\tif (pending.length === 0) {\n\t\t\t\tstate.node = null;\n\t\t\t\treturn state.node; //finished\n\t\t\t}\n\t\t\tvar fromStack = pending.pop();\n\t\t\tstate.hasSiblings = true;\n\t\t\t// if (fromStack === null) {\n\t\t\t// \tnode = null\n\t\t\t// \treturn//finished!\n\t\t\t// }\n\t\t\tif (tGo !== undefined) tGo.loadData(fromStack.tGoData);\n\t\t\tstate.node = wrappedGame.goTo(fromStack.path).node();\n\t\t\tstate.currentPath = fromStack.path;\n\t\t\treturn state.node;\n\t\t} else {\n\t\t\tcurrentPath.m += 1;\n\t\t\tstate.node = nextNode;\n\t\t\treturn state.node;\n\t\t}\n\t}\n\n\t/**\r\n  * Apart from a few details, this is an inverse of the transform function.\r\n  * @param {smartgame|string} wrappedGame\r\n  * @param {smartgame} smartgame\r\n  * @public\r\n  */\n\tfunction inverseTransform(wrappedGame, smartgame) {\n\n\t\tif (smartgame === undefined) {\n\t\t\tsmartgame = require('smartgame');\n\t\t}\n\n\t\tif (typeof wrappedGame === 'string') {\n\t\t\tvar smartgamer = require('smartgamer');\n\t\t\twrappedGame = smartgamer(smartgame.parse(wrappedGame));\n\t\t}\n\n\t\tvar node = wrappedGame.first().node(),\n\t\t    pending = [],\n\t\t    currentPath = { m: 0 },\n\t\t    cleanerRegEx = /^[a-zA-Z :0-9\\-(\\r\\n]+GoVariantsTransformer\\)--[\\r\\n]*/,\n\t\t    cleanComments = function cleanComments() {\n\t\t\tif (node.C !== undefined) {\n\t\t\t\tnode.C = node.C.replace(cleanerRegEx, '');\n\t\t\t}\n\t\t\tif (node.C === '') delete node.C;\n\t\t},\n\n\t\t/**\r\n   * Function to:\r\n   * \t- remove the “border” (unicode symbols added by the transform to indicate where the wraparound area meets the main grid).\r\n   * \t- remove CM (colour map) and CT (colour table) which are nonstandard SGF added by CGoboard for background colour (could be interesting to use this feature later on).\r\n   */\n\t\tcleanLabels = function cleanLabels() {\n\n\t\t\tvar labels = [];\n\t\t\tif (node.LB !== undefined) {\n\t\t\t\tlabels = node.LB;\n\t\t\t\tif (!Array.isArray(labels)) labels = [labels];\n\t\t\t\tlabels = labels.filter(function (i) {\n\t\t\t\t\treturn !$.wraparoundAndCoords.includes(i);\n\t\t\t\t});\n\t\t\t\t/* jshint loopfunc: true */\n\t\t\t\tlabels = _uniqBy(labels.map(function (x) {\n\t\t\t\t\treturn x.split(':', 2);\n\t\t\t\t}) //assume the label doesn’t contain “:”\n\t\t\t\t.map(function (x) {\n\t\t\t\t\treturn [$.coords2String($.inverseProjectOnFlat(translateCoordinates(x[0]))), x[1]];\n\t\t\t\t}), function (x) {\n\t\t\t\t\treturn x[0];\n\t\t\t\t}).map(function (x) {\n\t\t\t\t\treturn x[0] + ':' + x[1];\n\t\t\t\t});\n\n\t\t\t\t// labels = []\n\t\t\t\t// for (let i = 0; i < labels2.length; i++)\n\t\t\t\t// \tlabels = labels.concat(labels2)\n\t\t\t}\n\n\t\t\tnode.LB = labels;\n\t\t\tif (node.LB.length === 0) delete node.LB;\n\n\t\t\tif (node.CM) delete node.CM;\n\t\t\tif (node.CT) delete node.CT;\n\t\t};\n\n\t\tcleanLabels();\n\t\tnode.SZ = options.boardDimensions[0];\n\t\tnode.AP = \"go-variants-transformer\";\n\n\t\tif (node.SO !== undefined) {\n\t\t\tvar cleanSourceRegex = new RegExp(' \\\\(' + sourceSgfMessage + '\\\\)');\n\t\t\tnode.SO = node.SO.replace(cleanSourceRegex, '');\n\t\t\t// if (node.SO === '')\n\t\t\t// \tdelete node.SO\n\t\t}\n\n\t\tvar state = {\n\t\t\twrappedGame: wrappedGame, node: node, pending: pending, currentPath: currentPath, siblingMoves: {} //, parentsWithChildToDelete: [] \n\t\t};\n\n\t\tnode = goThroughTree(state);\n\t\twhile (node !== null) {\n\t\t\tcleanLabels();\n\t\t\tcleanComments();\n\n\t\t\tvar isBlack = node.AB !== undefined || node.B !== undefined,\n\t\t\t    addedStones = isBlack ? node.AB : node.AW,\n\t\t\t    playedStone = isBlack ? node.B : node.W,\n\t\t\t    move = addedStones ? addedStones : playedStone,\n\t\t\t    moveAsArray = Array.isArray(move) ? move : [move],\n\t\t\t    isAPass = isBlack ? node.B === '' : node.W === '',\n\t\t\t    moveHasCoords = move !== undefined && move !== '',\n\t\t\t    coords = !moveHasCoords ? undefined : $.coords2String($.inverseProjectOnFlat(moveAsArray.map(translateCoordinates)));\n\n\t\t\t//alter the node\n\n\t\t\t/*\r\n   logic removing a node added by CGoboard, if there already is the same move as AB or AW in a prior variation; assuming \r\n   the variation to be removed is the last of the siblings - which does seem to be the way CGoboard behaves when a click \r\n   is made on a point where the next node is AB or AW.  \r\n   */\n\t\t\tif (state.hasSiblings) {\n\t\t\t\tvar pathForParent = _extends({}, wrappedGame.path); //Object.assign({}, wrappedGame.path)\n\t\t\t\tpathForParent.m--;\n\t\t\t\tdelete pathForParent[pathForParent.m];\n\t\t\t\tpathForParent = wrappedGame.pathTransform(pathForParent);\n\t\t\t\t// wrappedGame.previous()\n\t\t\t\tif (state.siblingMoves[pathForParent] === undefined) {\n\t\t\t\t\tstate.siblingMoves[pathForParent] = [];\n\t\t\t\t}\n\t\t\t\tif (addedStones) {\n\t\t\t\t\tstate.siblingMoves[pathForParent].push(coords);\n\t\t\t\t} else if (playedStone && state.siblingMoves[pathForParent].indexOf(coords) > -1) {\n\n\t\t\t\t\t// state.parentsWithChildToDelete.push(pathForParent)\n\t\t\t\t\tnode.XX = \"inverseTransformToDelete\";\n\t\t\t\t}\n\t\t\t\t// wrappedGame.goTo(currentPath)\n\t\t\t}\n\n\t\t\tdelete node[isBlack ? 'AB' : 'AW'];\n\t\t\tdelete node[isBlack ? 'B' : 'W'];\n\t\t\tdelete node.CR;\n\t\t\tdelete node.AE;\n\n\t\t\tif (isAPass) {\n\t\t\t\tnode[isBlack ? 'B' : 'W'] = '';\n\t\t\t}\n\n\t\t\tif (moveHasCoords) {\n\t\t\t\tnode[isBlack ? 'B' : 'W'] = coords;\n\t\t\t}\n\n\t\t\t; /*note: this next semicolon is needed! */[// eslint-disable-line no-extra-semi\n\t\t\t//'CR',todo: add if not marking the move\n\t\t\t'DD', 'MA', 'SL', 'SQ', 'TR'].forEach(function (sgfProperty) {\n\t\t\t\t// _.map(['DD','MA','SL','SQ','TR'], function(sgfProperty){\n\t\t\t\tif (node[sgfProperty] === undefined) return;\n\t\t\t\tvar points = [];\n\t\t\t\tif (Array.isArray(node[sgfProperty])) {\n\t\t\t\t\tpoints = node[sgfProperty];\n\t\t\t\t} else {\n\t\t\t\t\tpoints = [node[sgfProperty]];\n\t\t\t\t}\n\t\t\t\tpoints = $.inverseProjectOnFlat(points.map(translateCoordinates), true).map($.coords2String);\n\t\t\t\tnode[sgfProperty] = points;\n\t\t\t});\n\t\t\t// move to next node\n\t\t\tnode = goThroughTree(state);\n\t\t}\n\n\t\t// state.parentsWithChildToDelete.forEach((path) => {\n\t\t// \t//remove the sgf node\n\t\t// \twrappedGame.goTo(path)\n\t\t// \tlet sequences = wrappedGame.game.sequences\n\t\t// \tlet index = _fi(sequences, (seq) => seq.nodes[0].inverseTransformToDelete)\n\t\t// \t\t, tmpI = 0\n\t\t// \twhile (index > -1) {\n\t\t// \t\tsequences.splice(index, 1)\n\t\t// \t\tindex = _fi(sequences, (seq) => seq.nodes[0].inverseTransformToDelete)\n\t\t// \t\ttmpI++\n\t\t// \t\tif (tmpI > 100) throw new Error('seem to be stuck!');\n\t\t// \t}\n\n\t\t// \t// console.log(path)\n\t\t// })\n\n\t\tvar deleteNodes = function deleteNodes(sequence) {\n\t\t\tif (sequence.sequences) {\n\n\t\t\t\tvar sequences = sequence.sequences,\n\t\t\t\t    index = _fi(sequences, function (seq) {\n\t\t\t\t\treturn seq.nodes[0].XX === 'inverseTransformToDelete';\n\t\t\t\t}),\n\t\t\t\t    tmpI = 0,\n\t\t\t\t    max = sequences.length;\n\t\t\t\twhile (index > -1) {\n\t\t\t\t\tsequences.splice(index, 1);\n\t\t\t\t\tindex = _fi(sequences, function (seq) {\n\t\t\t\t\t\treturn seq.nodes[0].XX === 'inverseTransformToDelete';\n\t\t\t\t\t});\n\t\t\t\t\ttmpI++;\n\t\t\t\t\tif (tmpI > max) throw new Error('seem to be stuck!');\n\t\t\t\t}\n\t\t\t\tfor (var index2 = 0; index2 < sequences.length; index2++) {\n\t\t\t\t\t// deleteNodes(sequences[index2].nodes[sequences[index2].nodes.length - 1]);\n\t\t\t\t\tdeleteNodes(sequences[index2]);\n\t\t\t\t}\n\t\t\t} else if (sequence.nodes) deleteNodes(sequence.nodes[sequence.nodes.length - 1]);\n\t\t};\n\t\tdeleteNodes(wrappedGame.game);\n\n\t\tif (options.transformToString) return smartgame.generate({ gameTrees: [wrappedGame.game] });else return wrappedGame;\n\t}\n\t$.inverseTransform = inverseTransform;\n\n\t/**\r\n  * Main function; converts SGF for a Go variant (so far, just toroidal Go or t-Go).\r\n  * @param {string} tSgf\r\n  * @param {object} tGo Engine for counting liberties in t-Go. An instance of go-variants-engine.\r\n  * @param {*} smartgame\r\n  * @param {*} smartgamer\r\n  * @returns {string|object} SGF that can be viewed in a standard SGF viewer. (See `options.transformToString` for the data type of the value returned.)\r\n  * @public\r\n  */\n\tfunction transform(tSgf //eg 11x11 sgf from LittleGolem\n\t, tGo //app implementing t-Go\n\t, smartgame, smartgamer) {\n\n\t\tif (tGo === undefined) {\n\t\t\ttGo = require('go-variants-engine')({\n\t\t\t\t// boardMode:'t',\n\t\t\t\tboardDimensions: options.boardDimensions\n\t\t\t});\n\t\t\t// tGo = require('../node_modules/go-variants-engine')({boardMode:'t', boardDimensions:options.boardDimensions})\n\t\t\t// tGo = require('../node_modules/go-variants-engine/src/engine')({boardMode:'t', boardDimensions:options.boardDimensions})\n\t\t}\n\t\t// else {\n\t\t// \ttGo.options.boardDimensions = options.boardDimensions\n\t\t// }\n\n\t\tif (smartgame === undefined) {\n\t\t\tsmartgame = require('smartgame');\n\t\t}\n\t\tif (smartgamer === undefined) {\n\t\t\tsmartgamer = require('smartgamer');\n\t\t}\n\t\t// console.log(tGo)\n\t\tvar parsed = smartgame.parse(tSgf),\n\t\t    wrappedGame = smartgamer(parsed),\n\t\t    node = wrappedGame.node(),\n\t\t    passes = 0,\n\t\t    pending = [],\n\t\t    currentPath = { m: 0 };\n\t\tif (node.SZ !== undefined) {\n\t\t\tvar sz = Number(node.SZ);\n\t\t\t// sz+= 2*options.projectionSettings.wraparound\n\t\t\toptions.boardDimensions = [sz, sz];\n\t\t\ttGo.options.boardDimensions = options.boardDimensions;\n\t\t\tsetUpMarkers();\n\t\t}\n\t\tnode.SZ = \"\" + (options.boardDimensions[0] + 2 * options.projectionSettings.wraparound); //not sure how to make a rectangular goban!\n\t\t//offset modulo\n\t\toptions.projectionSettings.offset[0] = modulo(options.projectionSettings.offset[0], options.boardDimensions[0]);\n\t\toptions.projectionSettings.offset[1] = modulo(options.projectionSettings.offset[1], options.boardDimensions[1]);\n\t\tvar setLabels = function setLabels() {\n\t\t\t//node.LB = $.wraparoundAndCoords\n\t\t\tvar labels = [];\n\t\t\tif (node.LB !== undefined) {\n\t\t\t\t(function () {\n\t\t\t\t\tlabels = node.LB;\n\t\t\t\t\tif (!Array.isArray(labels)) labels = [labels];\n\n\t\t\t\t\t/* jshint loopfunc: true */\n\t\t\t\t\tvar labels2 = labels //_.chain(labels)\n\t\t\t\t\t.map(function (x) {\n\t\t\t\t\t\treturn x.split(':', 2);\n\t\t\t\t\t}) //assume the label doesn’t contain “:”\n\t\t\t\t\t.map(function (x) {\n\t\t\t\t\t\treturn [translateCoordinates(x[0]), x[1]];\n\t\t\t\t\t}).map(function (x) {\n\t\t\t\t\t\treturn [$.projectOnFlat(x[0]), x[1]];\n\t\t\t\t\t});\n\t\t\t\t\t// .value()\n\t\t\t\t\tlabels = [];\n\n\t\t\t\t\tvar _loop = function _loop(i) {\n\t\t\t\t\t\tlabels = labels.concat(labels2[i][0].map(function (x) {\n\t\t\t\t\t\t\treturn $.coords2String(x) + \":\" + labels2[i][1];\n\t\t\t\t\t\t}));\n\t\t\t\t\t};\n\n\t\t\t\t\tfor (var i = 0; i < labels2.length; i++) {\n\t\t\t\t\t\t_loop(i);\n\t\t\t\t\t}\n\t\t\t\t})();\n\t\t\t}\n\n\t\t\tnode.LB = $.wraparoundAndCoords.concat(labels);\n\t\t\tif (node.LB.length === 0)\n\t\t\t\t// delete node['LB']\n\t\t\t\tdelete node.LB;\n\t\t};\n\n\t\tsetLabels();\n\n\t\tif (node.SO !== undefined) node.SO = wrappedGame.game.nodes[0].SO + (' (' + sourceSgfMessage + ')');\n\t\t//else node.SO = sourceSgfMessage//prefer not to add the message when original Sgf has no SO info.\n\n\t\tnode.AP = \"go-variants-transformer\";\n\n\t\tvar state = { wrappedGame: wrappedGame, node: node, pending: pending, currentPath: currentPath, tGo: tGo };\n\n\t\tfunction comment(isPass, isBlack) {\n\t\t\tif (!options.addComments) return;\n\n\t\t\tvar r = 'move ' + state.currentPath.m + '\\n' + 'White stones captured by Black: ' + tGo.board.captured[1] + '\\nBlack stones captured by White: ' + tGo.board.captured[0];\n\t\t\t//let r =  'Black captures: ' + tGo.board.captured[1] + '\\r\\nWhite captures: ' + tGo.board.captured[0]\n\t\t\tif (isPass) r += '\\n' + (isBlack ? 'Black passes' : 'White passes');\n\t\t\tr += '\\n--(the content above was generated automatically by GoVariantsTransformer)--';\n\t\t\tr += node.C === undefined ? '' : '\\n' + node.C;\n\t\t\tnode.C = r;\n\t\t\treturn;\n\t\t}\n\n\t\tnode = goThroughTree(state);\n\t\twhile (node !== null) {\n\n\t\t\tvar isBlack = node.B !== undefined,\n\t\t\t    move = isBlack ? node.B : node.W,\n\t\t\t    isPass = move === \"\" || options.boardDimensions[0] === options.boardDimensions[1] && options.boardDimensions[0] <= 19 && move === \"tt\" //weird SGF[3] way to show a pass move!\n\t\t\t;\n\t\t\tif (move === undefined && !isPass) {\n\t\t\t\tnode = goThroughTree(state);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tsetLabels();\n\n\t\t\tif (isPass) {\n\t\t\t\tdelete node[isBlack ? 'B' : 'W'];\n\t\t\t\tcomment(isPass, isBlack);\n\t\t\t\tnode[isBlack ? 'AB' : 'AW'] = [];\n\t\t\t\t// if (passes === 2) {\n\t\t\t\t// \t//wrappedGame.game.nodes.splice(i+1)//get rid of nodes afterwards -- may not work with variations! todo\n\t\t\t\t// \t//todo:score!\n\t\t\t\t// \tbreak;//stop after 3 successive passes for now\n\t\t\t\t// }\n\t\t\t\tpasses++;\n\t\t\t\tif (passes >= 1000) break; //just in case!\n\t\t\t\tnode = goThroughTree(state);\n\t\t\t} else {\n\t\t\t\tvar coords = translateCoordinates(move);\n\t\t\t\tvar playResult = null;\n\t\t\t\t// run move through tGo and update game accordingly\n\t\t\t\ttry {\n\t\t\t\t\tplayResult = tGo.play(isBlack ? 'b' : 'w', coords);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tif (error.message !== 'point is not empty' /*ignore this - it happens with some sgf from littleGolem. Todo: look into scoring the position here. */) throw error;\n\t\t\t\t}\n\t\t\t\tvar projectedCoords = $.projectOnFlat(coords);\n\t\t\t\tvar toAdd = playResult === null ? [] : projectedCoords.map($.coords2String),\n\t\t\t\t    toRemove = playResult === null ? [] :\n\t\t\t\t// _.chain(playResult.removed)\n\t\t\t\t// \t.flatten(true)\n\t\t\t\t// \t.map($.projectOnFlat)\n\t\t\t\t// \t.flatten(true)\n\t\t\t\t// \t.map($.coords2String)\n\t\t\t\t// \t.value()\n\t\t\t\t_flatten(_flatten(playResult.removed).map($.projectOnFlat)).map($.coords2String);\n\n\t\t\t\t//alter the node\n\t\t\t\tif (options.addPasses) node[isBlack ? 'B' : 'W'] = '';else delete node[isBlack ? 'B' : 'W'];\n\t\t\t\t// node[isBlack ? 'B' : 'W'] = ''\n\t\t\t\tnode[isBlack ? 'AB' : 'AW'] = toAdd;\n\t\t\t\tif (toAdd.length > 0) node.CR = toAdd;\n\t\t\t\tif (toRemove.length > 0) node.AE = toRemove;\n\t\t\t\tcomment(isPass, isBlack)\n\n\t\t\t\t/*\r\n    todo: other properties with board coordinates\r\n    Leave for now:\r\n    AR\r\n    LN\r\n    */\n\n\t\t\t\t; /*note this semicolon is needed! */\n\t\t\t\t[\n\t\t\t\t//'CR',todo: add if not marking the move\n\t\t\t\t'DD', 'MA', 'SL', 'SQ', 'TR'].forEach(function (sgfProperty) {\n\t\t\t\t\t// _.map(['DD','MA','SL','SQ','TR'], function(sgfProperty){\n\t\t\t\t\tif (node[sgfProperty] === undefined) return;\n\t\t\t\t\tvar points = [];\n\t\t\t\t\tif (Array.isArray(node[sgfProperty])) {\n\t\t\t\t\t\tpoints = node[sgfProperty];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpoints = [node[sgfProperty]];\n\t\t\t\t\t}\n\t\t\t\t\tpoints =\n\t\t\t\t\t// _.chain(points)\n\t\t\t\t\t// \t.map(translateCoordinates)\n\t\t\t\t\t// \t.map($.projectOnFlat)\n\t\t\t\t\t// \t.flatten(true)\n\t\t\t\t\t// \t.map($.coords2String)\n\t\t\t\t\t// \t.value()\n\t\t\t\t\t_flatten(points.map(translateCoordinates).map($.projectOnFlat)).map($.coords2String);\n\t\t\t\t\tnode[sgfProperty] = points;\n\t\t\t\t});\n\t\t\t\tnode.MN = currentPath.m;\n\t\t\t\t// move to next node\n\t\t\t\tnode = goThroughTree(state);\n\t\t\t}\n\t\t}\n\t\tif (options.transformToString) return smartgame.generate({ gameTrees: [wrappedGame.game] });else return wrappedGame;\n\t}\n\t$.transform = transform;\n\treturn $;\n}\nmodule.exports = transformer;\n\n},{\"go-variants-engine\":154,\"lodash/findIndex\":260,\"lodash/flatten\":261,\"lodash/uniqBy\":285,\"smartgame\":286,\"smartgamer\":287}]},{},[288])(288)\n});\n\n","var mapCacheClear = require('./_mapCacheClear'),\n    mapCacheDelete = require('./_mapCacheDelete'),\n    mapCacheGet = require('./_mapCacheGet'),\n    mapCacheHas = require('./_mapCacheHas'),\n    mapCacheSet = require('./_mapCacheSet');\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\nmodule.exports = MapCache;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Promise = getNative(root, 'Promise');\n\nmodule.exports = Promise;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Set = getNative(root, 'Set');\n\nmodule.exports = Set;\n","var MapCache = require('./_MapCache'),\n    setCacheAdd = require('./_setCacheAdd'),\n    setCacheHas = require('./_setCacheHas');\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\nmodule.exports = SetCache;\n","var ListCache = require('./_ListCache'),\n    stackClear = require('./_stackClear'),\n    stackDelete = require('./_stackDelete'),\n    stackGet = require('./_stackGet'),\n    stackHas = require('./_stackHas'),\n    stackSet = require('./_stackSet');\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\nmodule.exports = Stack;\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Uint8Array = root.Uint8Array;\n\nmodule.exports = Uint8Array;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar WeakMap = getNative(root, 'WeakMap');\n\nmodule.exports = WeakMap;\n","/**\n * Adds the key-value `pair` to `map`.\n *\n * @private\n * @param {Object} map The map to modify.\n * @param {Array} pair The key-value pair to add.\n * @returns {Object} Returns `map`.\n */\nfunction addMapEntry(map, pair) {\n  // Don't return `map.set` because it's not chainable in IE 11.\n  map.set(pair[0], pair[1]);\n  return map;\n}\n\nmodule.exports = addMapEntry;\n","/**\n * Adds `value` to `set`.\n *\n * @private\n * @param {Object} set The set to modify.\n * @param {*} value The value to add.\n * @returns {Object} Returns `set`.\n */\nfunction addSetEntry(set, value) {\n  // Don't return `set.add` because it's not chainable in IE 11.\n  set.add(value);\n  return set;\n}\n\nmodule.exports = addSetEntry;\n","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nmodule.exports = arrayEach;\n","/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayFilter;\n","var baseTimes = require('./_baseTimes'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isIndex = require('./_isIndex'),\n    isTypedArray = require('./isTypedArray');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayLikeKeys;\n","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\nmodule.exports = arrayPush;\n","/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\nmodule.exports = arrayReduce;\n","/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arraySome;\n","var baseAssignValue = require('./_baseAssignValue'),\n    eq = require('./eq');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nmodule.exports = assignValue;\n","var eq = require('./eq');\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = assocIndexOf;\n","var copyObject = require('./_copyObject'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\nmodule.exports = baseAssign;\n","var copyObject = require('./_copyObject'),\n    keysIn = require('./keysIn');\n\n/**\n * The base implementation of `_.assignIn` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssignIn(object, source) {\n  return object && copyObject(source, keysIn(source), object);\n}\n\nmodule.exports = baseAssignIn;\n","var defineProperty = require('./_defineProperty');\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nmodule.exports = baseAssignValue;\n","var Stack = require('./_Stack'),\n    arrayEach = require('./_arrayEach'),\n    assignValue = require('./_assignValue'),\n    baseAssign = require('./_baseAssign'),\n    baseAssignIn = require('./_baseAssignIn'),\n    cloneBuffer = require('./_cloneBuffer'),\n    copyArray = require('./_copyArray'),\n    copySymbols = require('./_copySymbols'),\n    copySymbolsIn = require('./_copySymbolsIn'),\n    getAllKeys = require('./_getAllKeys'),\n    getAllKeysIn = require('./_getAllKeysIn'),\n    getTag = require('./_getTag'),\n    initCloneArray = require('./_initCloneArray'),\n    initCloneByTag = require('./_initCloneByTag'),\n    initCloneObject = require('./_initCloneObject'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isObject = require('./isObject'),\n    keys = require('./keys');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Deep clone\n *  2 - Flatten inherited properties\n *  4 - Clone symbols\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\n  var result,\n      isDeep = bitmask & CLONE_DEEP_FLAG,\n      isFlat = bitmask & CLONE_FLAT_FLAG,\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = (isFlat || isFunc) ? {} : initCloneObject(value);\n      if (!isDeep) {\n        return isFlat\n          ? copySymbolsIn(value, baseAssignIn(result, value))\n          : copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, baseClone, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  var keysFunc = isFull\n    ? (isFlat ? getAllKeysIn : getAllKeys)\n    : (isFlat ? keysIn : keys);\n\n  var props = isArr ? undefined : keysFunc(value);\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n  });\n  return result;\n}\n\nmodule.exports = baseClone;\n","var isObject = require('./isObject');\n\n/** Built-in value references. */\nvar objectCreate = Object.create;\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(proto) {\n    if (!isObject(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\nmodule.exports = baseCreate;\n","/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = baseFindIndex;\n","var castPath = require('./_castPath'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\nmodule.exports = baseGet;\n","var arrayPush = require('./_arrayPush'),\n    isArray = require('./isArray');\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nmodule.exports = baseGetAllKeys;\n","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;\n","/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nmodule.exports = baseHasIn;\n","var baseIsEqualDeep = require('./_baseIsEqualDeep'),\n    isObjectLike = require('./isObjectLike');\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nmodule.exports = baseIsEqual;\n","var Stack = require('./_Stack'),\n    equalArrays = require('./_equalArrays'),\n    equalByTag = require('./_equalByTag'),\n    equalObjects = require('./_equalObjects'),\n    getTag = require('./_getTag'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isTypedArray = require('./isTypedArray');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nmodule.exports = baseIsEqualDeep;\n","var Stack = require('./_Stack'),\n    baseIsEqual = require('./_baseIsEqual');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n  object = Object(object);\n  while (index--) {\n    var data = matchData[index];\n    if ((noCustomizer && data[2])\n          ? data[1] !== object[data[0]]\n          : !(data[0] in object)\n        ) {\n      return false;\n    }\n  }\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack;\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n      if (!(result === undefined\n            ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n            : result\n          )) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nmodule.exports = baseIsMatch;\n","var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;\n","var baseGetTag = require('./_baseGetTag'),\n    isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;\n","var isPrototype = require('./_isPrototype'),\n    nativeKeys = require('./_nativeKeys');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeys;\n","var baseMatches = require('./_baseMatches'),\n    baseMatchesProperty = require('./_baseMatchesProperty'),\n    identity = require('./identity'),\n    isArray = require('./isArray'),\n    property = require('./property');\n\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n  if (value == null) {\n    return identity;\n  }\n  if (typeof value == 'object') {\n    return isArray(value)\n      ? baseMatchesProperty(value[0], value[1])\n      : baseMatches(value);\n  }\n  return property(value);\n}\n\nmodule.exports = baseIteratee;\n","var isObject = require('./isObject'),\n    isPrototype = require('./_isPrototype'),\n    nativeKeysIn = require('./_nativeKeysIn');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeysIn;\n","var baseIsMatch = require('./_baseIsMatch'),\n    getMatchData = require('./_getMatchData'),\n    matchesStrictComparable = require('./_matchesStrictComparable');\n\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n  return function(object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nmodule.exports = baseMatches;\n","var baseIsEqual = require('./_baseIsEqual'),\n    get = require('./get'),\n    hasIn = require('./hasIn'),\n    isKey = require('./_isKey'),\n    isStrictComparable = require('./_isStrictComparable'),\n    matchesStrictComparable = require('./_matchesStrictComparable'),\n    toKey = require('./_toKey');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n  return function(object) {\n    var objValue = get(object, path);\n    return (objValue === undefined && objValue === srcValue)\n      ? hasIn(object, path)\n      : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nmodule.exports = baseMatchesProperty;\n","/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = baseProperty;\n","var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = baseToString;\n","var baseGet = require('./_baseGet');\n\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyDeep(path) {\n  return function(object) {\n    return baseGet(object, path);\n  };\n}\n\nmodule.exports = basePropertyDeep;\n","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;\n","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nmodule.exports = baseTimes;\n","var Uint8Array = require('./_Uint8Array');\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\nmodule.exports = cloneArrayBuffer;\n","var root = require('./_root');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var length = buffer.length,\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n  buffer.copy(result);\n  return result;\n}\n\nmodule.exports = cloneBuffer;\n","/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nmodule.exports = cacheHas;\n","var isArray = require('./isArray'),\n    isKey = require('./_isKey'),\n    stringToPath = require('./_stringToPath'),\n    toString = require('./toString');\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;\n","var cloneArrayBuffer = require('./_cloneArrayBuffer');\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\nmodule.exports = cloneDataView;\n","var Symbol = require('./_Symbol');\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\nmodule.exports = cloneSymbol;\n","var addMapEntry = require('./_addMapEntry'),\n    arrayReduce = require('./_arrayReduce'),\n    mapToArray = require('./_mapToArray');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1;\n\n/**\n * Creates a clone of `map`.\n *\n * @private\n * @param {Object} map The map to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned map.\n */\nfunction cloneMap(map, isDeep, cloneFunc) {\n  var array = isDeep ? cloneFunc(mapToArray(map), CLONE_DEEP_FLAG) : mapToArray(map);\n  return arrayReduce(array, addMapEntry, new map.constructor);\n}\n\nmodule.exports = cloneMap;\n","/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\nmodule.exports = cloneRegExp;\n","/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\nmodule.exports = copyArray;\n","var addSetEntry = require('./_addSetEntry'),\n    arrayReduce = require('./_arrayReduce'),\n    setToArray = require('./_setToArray');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1;\n\n/**\n * Creates a clone of `set`.\n *\n * @private\n * @param {Object} set The set to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned set.\n */\nfunction cloneSet(set, isDeep, cloneFunc) {\n  var array = isDeep ? cloneFunc(setToArray(set), CLONE_DEEP_FLAG) : setToArray(set);\n  return arrayReduce(array, addSetEntry, new set.constructor);\n}\n\nmodule.exports = cloneSet;\n","var assignValue = require('./_assignValue'),\n    baseAssignValue = require('./_baseAssignValue');\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n    if (isNew) {\n      baseAssignValue(object, key, newValue);\n    } else {\n      assignValue(object, key, newValue);\n    }\n  }\n  return object;\n}\n\nmodule.exports = copyObject;\n","var cloneArrayBuffer = require('./_cloneArrayBuffer');\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\nmodule.exports = cloneTypedArray;\n","var copyObject = require('./_copyObject'),\n    getSymbols = require('./_getSymbols');\n\n/**\n * Copies own symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\nmodule.exports = copySymbols;\n","var root = require('./_root');\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nmodule.exports = coreJsData;\n","var SetCache = require('./_SetCache'),\n    arraySome = require('./_arraySome'),\n    cacheHas = require('./_cacheHas');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(array);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!cacheHas(seen, othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalArrays;\n","var copyObject = require('./_copyObject'),\n    getSymbolsIn = require('./_getSymbolsIn');\n\n/**\n * Copies own and inherited symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbolsIn(source, object) {\n  return copyObject(source, getSymbolsIn(source), object);\n}\n\nmodule.exports = copySymbolsIn;\n","var getNative = require('./_getNative');\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nmodule.exports = defineProperty;\n","var Symbol = require('./_Symbol'),\n    Uint8Array = require('./_Uint8Array'),\n    eq = require('./eq'),\n    equalArrays = require('./_equalArrays'),\n    mapToArray = require('./_mapToArray'),\n    setToArray = require('./_setToArray');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= COMPARE_UNORDERED_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\nmodule.exports = equalByTag;\n","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbols = require('./_getSymbols'),\n    keys = require('./keys');\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nmodule.exports = getAllKeys;\n","var getAllKeys = require('./_getAllKeys');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(object);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalObjects;\n","var baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbolsIn = require('./_getSymbolsIn'),\n    keysIn = require('./keysIn');\n\n/**\n * Creates an array of own and inherited enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeysIn(object) {\n  return baseGetAllKeys(object, keysIn, getSymbolsIn);\n}\n\nmodule.exports = getAllKeysIn;\n","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n","var isKeyable = require('./_isKeyable');\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\nmodule.exports = getMapData;\n","var arrayFilter = require('./_arrayFilter'),\n    stubArray = require('./stubArray');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\nmodule.exports = getSymbols;\n","var isStrictComparable = require('./_isStrictComparable'),\n    keys = require('./keys');\n\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n  return result;\n}\n\nmodule.exports = getMatchData;\n","var overArg = require('./_overArg');\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\nmodule.exports = getPrototype;\n","var DataView = require('./_DataView'),\n    Map = require('./_Map'),\n    Promise = require('./_Promise'),\n    Set = require('./_Set'),\n    WeakMap = require('./_WeakMap'),\n    baseGetTag = require('./_baseGetTag'),\n    toSource = require('./_toSource');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\n\nvar dataViewTag = '[object DataView]';\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\nmodule.exports = getTag;\n","var arrayPush = require('./_arrayPush'),\n    getPrototype = require('./_getPrototype'),\n    getSymbols = require('./_getSymbols'),\n    stubArray = require('./stubArray');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own and inherited enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n  var result = [];\n  while (object) {\n    arrayPush(result, getSymbols(object));\n    object = getPrototype(object);\n  }\n  return result;\n};\n\nmodule.exports = getSymbolsIn;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nmodule.exports = hashGet;\n","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;\n","var castPath = require('./_castPath'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isIndex = require('./_isIndex'),\n    isLength = require('./isLength'),\n    toKey = require('./_toKey');\n\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n    object = object[key];\n  }\n  if (result || ++index != length) {\n    return result;\n  }\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) &&\n    (isArray(object) || isArguments(object));\n}\n\nmodule.exports = hasPath;\n","var nativeCreate = require('./_nativeCreate');\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nmodule.exports = hashClear;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\nmodule.exports = initCloneArray;\n","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = hashDelete;\n","var cloneArrayBuffer = require('./_cloneArrayBuffer'),\n    cloneDataView = require('./_cloneDataView'),\n    cloneMap = require('./_cloneMap'),\n    cloneRegExp = require('./_cloneRegExp'),\n    cloneSet = require('./_cloneSet'),\n    cloneSymbol = require('./_cloneSymbol'),\n    cloneTypedArray = require('./_cloneTypedArray');\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, cloneFunc, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return cloneMap(object, isDeep, cloneFunc);\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return cloneSet(object, isDeep, cloneFunc);\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\nmodule.exports = initCloneByTag;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\nmodule.exports = hashHas;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\nmodule.exports = hashSet;\n","var baseCreate = require('./_baseCreate'),\n    getPrototype = require('./_getPrototype'),\n    isPrototype = require('./_isPrototype');\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\nmodule.exports = initCloneObject;\n","var isObject = require('./isObject');\n\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nmodule.exports = isStrictComparable;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\nmodule.exports = isIndex;\n","var isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\nmodule.exports = isKey;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\nmodule.exports = listCacheGet;\n","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\nmodule.exports = isKeyable;\n","var coreJsData = require('./_coreJsData');\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nmodule.exports = isMasked;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\nmodule.exports = listCacheSet;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\nmodule.exports = isPrototype;\n","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nmodule.exports = listCacheClear;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\nmodule.exports = listCacheDelete;\n","var getMapData = require('./_getMapData');\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nmodule.exports = mapCacheSet;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nmodule.exports = listCacheHas;\n","var memoize = require('./memoize');\n\n/** Used as the maximum memoize cache size. */\nvar MAX_MEMOIZE_SIZE = 500;\n\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\nfunction memoizeCapped(func) {\n  var result = memoize(func, function(key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n    return key;\n  });\n\n  var cache = result.cache;\n  return result;\n}\n\nmodule.exports = memoizeCapped;\n","var Hash = require('./_Hash'),\n    ListCache = require('./_ListCache'),\n    Map = require('./_Map');\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\nmodule.exports = mapCacheClear;\n","var getMapData = require('./_getMapData');\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = mapCacheDelete;\n","var getMapData = require('./_getMapData');\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nmodule.exports = mapCacheGet;\n","var getMapData = require('./_getMapData');\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nmodule.exports = mapCacheHas;\n","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;\n","/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nmodule.exports = mapToArray;\n","/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function(object) {\n    if (object == null) {\n      return false;\n    }\n    return object[key] === srcValue &&\n      (srcValue !== undefined || (key in Object(object)));\n  };\n}\n\nmodule.exports = matchesStrictComparable;\n","/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\nmodule.exports = setCacheAdd;\n","/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nmodule.exports = setToArray;\n","var getNative = require('./_getNative');\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = getNative(Object, 'create');\n\nmodule.exports = nativeCreate;\n","var overArg = require('./_overArg');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\nmodule.exports = nativeKeys;\n","/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = nativeKeysIn;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nmodule.exports = nodeUtil;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","var ListCache = require('./_ListCache'),\n    Map = require('./_Map'),\n    MapCache = require('./_MapCache');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nmodule.exports = stackSet;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n","var memoizeCapped = require('./_memoizeCapped');\n\n/** Used to match property names within property paths. */\nvar reLeadingDot = /^\\./,\n    rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoizeCapped(function(string) {\n  var result = [];\n  if (reLeadingDot.test(string)) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, string) {\n    result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\nmodule.exports = stringToPath;\n","/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nmodule.exports = setCacheHas;\n","var isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = toKey;\n","var ListCache = require('./_ListCache');\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\nmodule.exports = stackClear;\n","var baseClone = require('./_baseClone');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * Creates a shallow clone of `value`.\n *\n * **Note:** This method is loosely based on the\n * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n * and supports cloning arrays, array buffers, booleans, date objects, maps,\n * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n * arrays. The own enumerable properties of `arguments` objects are cloned\n * as plain objects. An empty object is returned for uncloneable values such\n * as error objects, functions, DOM nodes, and WeakMaps.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to clone.\n * @returns {*} Returns the cloned value.\n * @see _.cloneDeep\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var shallow = _.clone(objects);\n * console.log(shallow[0] === objects[0]);\n * // => true\n */\nfunction clone(value) {\n  return baseClone(value, CLONE_SYMBOLS_FLAG);\n}\n\nmodule.exports = clone;\n","/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\nmodule.exports = stackDelete;\n","/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nmodule.exports = stackGet;\n","/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nmodule.exports = stackHas;\n","var baseFindIndex = require('./_baseFindIndex'),\n    baseIteratee = require('./_baseIteratee'),\n    toInteger = require('./toInteger');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * This method is like `_.find` except that it returns the index of the first\n * element `predicate` returns truthy for instead of the element itself.\n *\n * @static\n * @memberOf _\n * @since 1.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': false },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': true }\n * ];\n *\n * _.findIndex(users, function(o) { return o.user == 'barney'; });\n * // => 0\n *\n * // The `_.matches` iteratee shorthand.\n * _.findIndex(users, { 'user': 'fred', 'active': false });\n * // => 1\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findIndex(users, ['active', false]);\n * // => 0\n *\n * // The `_.property` iteratee shorthand.\n * _.findIndex(users, 'active');\n * // => 2\n */\nfunction findIndex(array, predicate, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n  return baseFindIndex(array, baseIteratee(predicate, 3), index);\n}\n\nmodule.exports = findIndex;\n","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nmodule.exports = toSource;\n","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nmodule.exports = eq;\n","var baseGet = require('./_baseGet');\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;\n","var baseHasIn = require('./_baseHasIn'),\n    hasPath = require('./_hasPath');\n\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nmodule.exports = hasIn;\n","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n","var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;\n","var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nmodule.exports = isArguments;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n","var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;\n","var root = require('./_root'),\n    stubFalse = require('./stubFalse');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\nmodule.exports = isBuffer;\n","var baseIsEqual = require('./_baseIsEqual');\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","var MapCache = require('./_MapCache');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Expose `MapCache`.\nmemoize.Cache = MapCache;\n\nmodule.exports = memoize;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n","var baseIsTypedArray = require('./_baseIsTypedArray'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\nmodule.exports = isTypedArray;\n","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeys = require('./_baseKeys'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = keys;\n","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeysIn = require('./_baseKeysIn'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\nmodule.exports = keysIn;\n","var toNumber = require('./toNumber');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nmodule.exports = toFinite;\n","var baseProperty = require('./_baseProperty'),\n    basePropertyDeep = require('./_basePropertyDeep'),\n    isKey = require('./_isKey'),\n    toKey = require('./_toKey');\n\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nmodule.exports = property;\n","/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nmodule.exports = stubArray;\n","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;\n","/* globals module: false, require: false */\r\nmodule.exports = function (options) {\r\n\t'use strict';\r\n\t// let _ = require('lodash/core')\r\n\tlet _fi = require('lodash/findIndex')\r\n\t\t, _iseq = require('lodash/isEqual')\r\n\t\t, _clone = require('lodash/clone')\r\n\t//utilities\r\n\tfunction myIndexOf(a, b) {\r\n\t\treturn _fi(a, function (x) { return _iseq(x, b) });\r\n\t}\r\n\r\n\toptions = options || {}\r\n\t// boardMode = options.boardMode || 't'/*t:toroid; c:classic ...*/\r\n\t// , boardDimensions = options.boardDimensions || [11, 11]/*move later*/\r\n\t// , rules = options.rules || {\r\n\t// suicide: true,\r\n\t// superko: false\r\n\t// }\r\n\tlet $ = {}\r\n\t\t, rules = options.rules || {\r\n\t\t\tsuicide: true,\r\n\t\t\tsuperko: false /*⇒todo: enforce when true?*/,\r\n\t\t\tkomi: 7.5\r\n\t\t}\r\n\r\n\t// $.moves = options.moves || []\r\n\t$.options = options\r\n\toptions.boardDimensions = options.boardDimensions || [11, 11]\r\n\toptions.boardMode = options.boardMode || 't'/*t:toroid; c:classic ...*/\r\n\t$.board = {}\r\n\t$.board.blackStones = options.blackStones || []\r\n\t$.board.whiteStones = options.whiteStones || []\r\n\r\n\t$.board.nextPlayer = options.nextPlayer || \"b\"\r\n\t$.board.captured = options.captured || [0, 0]\r\n\r\n\t$.exportData = function () {\r\n\t\treturn {\r\n\t\t\tblackStones: $.board.blackStones.map(_clone),\r\n\r\n\t\t\twhiteStones: $.board.whiteStones.map(_clone),\r\n\t\t\tcaptured: _clone($.board.captured),\r\n\t\t\tnextPlayer: $.board.nextPlayer\r\n\t\t}\r\n\t}\r\n\r\n\t$.loadData = function (data) {\r\n\t\t$.board.blackStones = data.blackStones\r\n\t\t$.board.whiteStones = data.whiteStones\r\n\t\t$.board.captured = data.captured\r\n\t\t$.board.nextPlayer = data.nextPlayer\r\n\t}\r\n\r\n\t//toroid\r\n\tif (options.boardMode === 't') $.board.getNeighbours =\r\n\t\tfunction (point) {\r\n\t\t\tlet result = []\r\n\t\t\tfor (let i = 0; i < 4; i++) {\r\n\t\t\t\tlet newPoint\r\n\t\t\t\tswitch (i) {\r\n\t\t\t\t\tcase 0:\r\n\t\t\t\t\t\tnewPoint = [point[0] + 1, point[1]]\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 1:\r\n\t\t\t\t\t\tnewPoint = [point[0] - 1, point[1]]\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\tnewPoint = [point[0], point[1] + 1]\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 3:\r\n\t\t\t\t\t\tnewPoint = [point[0], point[1] - 1]\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tresult.push([(newPoint[0] + options.boardDimensions[0]) % options.boardDimensions[0], (newPoint[1] + options.boardDimensions[1]) % options.boardDimensions[1]])\r\n\t\t\t}\r\n\t\t\treturn result\r\n\t\t}\r\n\tif (options.boardMode === 'c') $.board.getNeighbours =\r\n\t\tfunction (point) {\r\n\t\t\tlet result = []\r\n\t\t\tfor (let i = 0; i < 4; i++) {\r\n\t\t\t\tlet newPoint\r\n\t\t\t\tswitch (i) {\r\n\t\t\t\t\tcase 0:\r\n\t\t\t\t\t\tnewPoint = [point[0] + 1, point[1]]\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 1:\r\n\t\t\t\t\t\tnewPoint = [point[0] - 1, point[1]]\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\tnewPoint = [point[0], point[1] + 1]\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 3:\r\n\t\t\t\t\t\tnewPoint = [point[0], point[1] - 1]\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tif (newPoint[0] >= 0 && newPoint[0] < options.boardDimensions[0]\r\n\t\t\t\t\t&& newPoint[1] >= 0 && newPoint[1] < options.boardDimensions[1]\r\n\t\t\t\t)\r\n\t\t\t\t\tresult.push(newPoint)\r\n\t\t\t}\r\n\t\t\treturn result\r\n\t\t}\r\n\t//todo: klein, projective plane, ...\r\n\r\n\t$.board.isEmpty = function (point) {\r\n\t\treturn myIndexOf($.board.blackStones, point) < 0\r\n\t\t\t&& myIndexOf($.board.whiteStones, point) < 0;\r\n\t}\r\n\t$.board.getColour = function (point) {\r\n\t\tif (myIndexOf($.board.blackStones, point) >= 0) return 'b'\r\n\t\tif (myIndexOf($.board.whiteStones, point) >= 0) return 'w'\r\n\t\treturn 'e'\r\n\t}\r\n\t$.board.chainHasLiberty = function (startPoint, chainColour, stopColour) {\r\n\t\tif (stopColour === undefined)\r\n\t\t\tstopColour = 'e'//by default, stop getting the chain when there is a liberty.\r\n\t\tif (chainColour === null)\r\n\t\t\tchainColour = $.board.getColour(startPoint)\r\n\t\tlet\r\n\t\t\tchain = [startPoint]\r\n\t\t\t, toExplore = []\r\n\t\t\t, point = startPoint //assumed to be of colour chainColour\r\n\r\n\t\twhile (point !== undefined) {\r\n\r\n\t\t\tlet neighbours = $.board.getNeighbours(point)\r\n\t\t\tfor (let i = 0; i < neighbours.length; i++) {\r\n\t\t\t\tlet newPoint = neighbours[i],\r\n\t\t\t\t\tnewColour = $.board.getColour(newPoint)\r\n\t\t\t\tif (newColour === stopColour) return true;\r\n\t\t\t\tif (newColour === chainColour) {\r\n\t\t\t\t\tif (myIndexOf(chain, newPoint) < 0) {\r\n\t\t\t\t\t\tchain.push(newPoint)\r\n\t\t\t\t\t\t// if (myIndexOf(toExplore, newPoint) < 0)\r\n\t\t\t\t\t\ttoExplore.push(newPoint)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tpoint = toExplore.pop()\r\n\t\t}\r\n\r\n\t\treturn chain;\r\n\t}\r\n\r\n\t$.board.getComponent = function (startPoint, deadStones) {\r\n\t\t//Use for scoring.\r\n\t\t//It returns all points of the same colour (B, W or E) that are linked to the startPoint.\r\n\t\t//deadStones: array of B or W points that defines (via this function) B or W components that are treated as E when getting an E component.\r\n\t\t//todo\r\n\t\treturn {\r\n\t\t\tpoints: []\r\n\t\t\t, colour: []\r\n\t\t\t, isDead: false//for B or W chains\r\n\t\t\t, isBlackTerritory: false//for empty components\r\n\t\t}\r\n\t}\r\n\r\n\t$.board.score = function (deadStones) {\r\n\t\t/*\r\n\t\tgo through the whole board \r\n\t\tuse getComponent to split up into B, W and E\r\n\t\t*/\r\n\r\n\t\tlet result = {\r\n\t\t\twhiteComponents: {}\r\n\t\t\t, blackComponents: {}\r\n\t\t\t, emptyComponents: {}\r\n\t\t\t, totalBlackDead: 0\r\n\t\t\t, totalWhiteDead: 0\r\n\t\t\t, totalBlackPrisoners: 0\r\n\t\t\t, totalWhitePrisoners: 0\r\n\t\t\t, totalBlackTerritory: 0\r\n\t\t\t, totalWhiteTerritory: 0\r\n\r\n\t\t}\r\n\t\t//todo: implement other rulesets. For now, just do territory + prisoners (Japanese style counting)\r\n\t\tresult.blackScore =\r\n\t\t\tresult.totalWhiteDead\r\n\t\t\t+ result.totalBlackPrisoners\r\n\t\t\t+ result.totalBlackTerritory\r\n\t\tresult.whiteScore =\r\n\t\t\tresult.totalBlackDead\r\n\t\t\t+ result.totalWhitePrisoners\r\n\t\t\t+ result.totalWhiteTerritory\r\n\t\t\t+ komi //todo\r\n\t\tlet r = result.blackScore - result.whiteScore\r\n\t\tif (r === 0) result.RE = '0'\r\n\t\telse if (r > 0) result.RE = 'B+' + r\r\n\t\telse result.RE = 'W+' + (-r)\r\n\t\treturn result\r\n\t}\r\n\r\n\t$.board.empty = function () {\r\n\t\t$.board.whiteStones = []\r\n\t\t$.board.blackStones = []\r\n\t\t$.board.captured = [0, 0]\r\n\r\n\t}\r\n\r\n\t$.removeChain = function (chain, colour) {\r\n\t\tlet toRemoveFrom = colour === 'w' ? $.board.whiteStones : $.board.blackStones\r\n\t\tfor (let j = 0; j < chain.length; j++) {\r\n\t\t\tlet index = myIndexOf(toRemoveFrom, chain[j])\r\n\t\t\ttoRemoveFrom.splice(index, 1)\r\n\t\t\tif (colour === 'w') $.board.captured[1] = $.board.captured[1] + 1\r\n\t\t\telse $.board.captured[0] = $.board.captured[0] + 1\r\n\t\t}\r\n\t}\r\n\t$.play = function (playerColour, point) {\r\n\r\n\r\n\r\n\t\t// let result = \"ok\"\r\n\t\tif (!$.board.isEmpty(point))\r\n\t\t\tthrow new Error('point is not empty');\r\n\t\t// console.log('point is not empty' + point)\r\n\r\n\t\tif (playerColour === 'b') $.board.blackStones.push(point)\r\n\t\telse $.board.whiteStones.push(point)\r\n\r\n\t\tlet neighbours = $.board.getNeighbours(point)\r\n\t\t\t, removed = []//chains removed\r\n\r\n\t\tfor (let i = 0; i < neighbours.length; i++) {\r\n\t\t\tlet neighbour = neighbours[i], colour = $.board.getColour(neighbour)\r\n\t\t\tif (colour === playerColour || colour === 'e') continue\r\n\t\t\tlet oppColour = $.getOppositeColour(playerColour),\r\n\t\t\t\tr = $.board.chainHasLiberty(neighbour, oppColour)\r\n\t\t\tif (r === true) continue\r\n\t\t\t////remove - no liberties\r\n\t\t\tremoved[removed.length] = r\r\n\r\n\t\t\t$.removeChain(r, oppColour)\r\n\r\n\t\t\t// let chainToRemove = r[1],\r\n\t\t\t// toRemoveFrom = playerColour === 'b' ? $.board.whiteStones : $.board.blackStones\r\n\t\t\t// for (let j = 0; j<chainToRemove.length; j++)\r\n\t\t\t// {\r\n\t\t\t// let index = myIndexOf(toRemoveFrom,chainToRemove[j])\r\n\t\t\t// toRemoveFrom.splice(index, 1)\r\n\t\t\t// if (playerColour === 'b') $.board.captured[1] = $.board.captured[1] + 1\r\n\t\t\t// else $.board.captured[0] = $.board.captured[0] + 1\r\n\t\t\t// }\r\n\t\t\t// removed = true\r\n\t\t}\r\n\t\tlet suicide = false\r\n\t\tif (removed.length === 0) {\r\n\t\t\tlet s = $.board.chainHasLiberty(point, playerColour)\r\n\t\t\tif (s !== true) {\r\n\t\t\t\tif (rules.suicide) {\r\n\t\t\t\t\t$.removeChain(s, playerColour)\r\n\t\t\t\t\tsuicide = s\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthrow new Error('suicide');//isn’t allowed\r\n\t\t\t\t\t//todo: remove point from whiteStones or blackStones\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/*\r\n\t\t\tstoring the situation in memory - would be useful when implementing going back a move, superko, ...\r\n\t\t\tnot needed for now\r\n\t\t*/\r\n\t\t//$.moves.push([playerColour,point,_.clone($.board.whiteStones),_.clone($.board.blackStones)])\r\n\t\t// $.moves.push([playerColour,point])\r\n\r\n\t\t// getNeighbours[i] = [getNeighbours[i], $.board.getColour[getNeighbours[i]]\r\n\t\t// //...\r\n\r\n\r\n\t\treturn { removed, suicide }\r\n\t}\r\n\t$.getOppositeColour = function (colour) {\r\n\t\tswitch (colour) {\r\n\t\t\tcase 'b':\r\n\t\t\t\treturn 'w'\r\n\t\t\tcase 'w':\r\n\t\t\t\treturn 'b'\r\n\t\t}\r\n\t\treturn null\r\n\t}\r\n\treturn $\r\n\r\n}","var toFinite = require('./toFinite');\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\nmodule.exports = toInteger;\n","var isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n","var baseToString = require('./_baseToString');\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;\n","var SetCache = require('./_SetCache'),\n    arrayIncludes = require('./_arrayIncludes'),\n    arrayIncludesWith = require('./_arrayIncludesWith'),\n    cacheHas = require('./_cacheHas'),\n    createSet = require('./_createSet'),\n    setToArray = require('./_setToArray');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n */\nfunction baseUniq(array, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      length = array.length,\n      isCommon = true,\n      result = [],\n      seen = result;\n\n  if (comparator) {\n    isCommon = false;\n    includes = arrayIncludesWith;\n  }\n  else if (length >= LARGE_ARRAY_SIZE) {\n    var set = iteratee ? null : createSet(array);\n    if (set) {\n      return setToArray(set);\n    }\n    isCommon = false;\n    includes = cacheHas;\n    seen = new SetCache;\n  }\n  else {\n    seen = iteratee ? [] : result;\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var seenIndex = seen.length;\n      while (seenIndex--) {\n        if (seen[seenIndex] === computed) {\n          continue outer;\n        }\n      }\n      if (iteratee) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n    else if (!includes(seen, computed, comparator)) {\n      if (seen !== result) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseUniq;\n","var baseIndexOf = require('./_baseIndexOf');\n\n/**\n * A specialized version of `_.includes` for arrays without support for\n * specifying an index to search from.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludes(array, value) {\n  var length = array == null ? 0 : array.length;\n  return !!length && baseIndexOf(array, value, 0) > -1;\n}\n\nmodule.exports = arrayIncludes;\n","/**\n * This function is like `arrayIncludes` except that it accepts a comparator.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @param {Function} comparator The comparator invoked per element.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludesWith(array, value, comparator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (comparator(value, array[index])) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arrayIncludesWith;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","var arrayPush = require('./_arrayPush'),\n    isFlattenable = require('./_isFlattenable');\n\n/**\n * The base implementation of `_.flatten` with support for restricting flattening.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {number} depth The maximum recursion depth.\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\nfunction baseFlatten(array, depth, predicate, isStrict, result) {\n  var index = -1,\n      length = array.length;\n\n  predicate || (predicate = isFlattenable);\n  result || (result = []);\n\n  while (++index < length) {\n    var value = array[index];\n    if (depth > 0 && predicate(value)) {\n      if (depth > 1) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten(value, depth - 1, predicate, isStrict, result);\n      } else {\n        arrayPush(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseFlatten;\n","var baseFindIndex = require('./_baseFindIndex'),\n    baseIsNaN = require('./_baseIsNaN'),\n    strictIndexOf = require('./_strictIndexOf');\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  return value === value\n    ? strictIndexOf(array, value, fromIndex)\n    : baseFindIndex(array, baseIsNaN, fromIndex);\n}\n\nmodule.exports = baseIndexOf;\n","/**\n * The base implementation of `_.isNaN` without support for number objects.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */\nfunction baseIsNaN(value) {\n  return value !== value;\n}\n\nmodule.exports = baseIsNaN;\n","/**\n * A specialized version of `_.indexOf` which performs strict equality\n * comparisons of values, i.e. `===`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction strictIndexOf(array, value, fromIndex) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = strictIndexOf;\n","/**\n * This method returns `undefined`.\n *\n * @static\n * @memberOf _\n * @since 2.3.0\n * @category Util\n * @example\n *\n * _.times(2, _.noop);\n * // => [undefined, undefined]\n */\nfunction noop() {\n  // No operation performed.\n}\n\nmodule.exports = noop;\n","var Set = require('./_Set'),\n    noop = require('./noop'),\n    setToArray = require('./_setToArray');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Creates a set object of `values`.\n *\n * @private\n * @param {Array} values The values to add to the set.\n * @returns {Object} Returns the new set.\n */\nvar createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n  return new Set(values);\n};\n\nmodule.exports = createSet;\n","var baseIteratee = require('./_baseIteratee'),\n    baseUniq = require('./_baseUniq');\n\n/**\n * This method is like `_.uniq` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * uniqueness is computed. The order of result values is determined by the\n * order they occur in the array. The iteratee is invoked with one argument:\n * (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n * // => [2.1, 1.2]\n *\n * // The `_.property` iteratee shorthand.\n * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n * // => [{ 'x': 1 }, { 'x': 2 }]\n */\nfunction uniqBy(array, iteratee) {\n  return (array && array.length) ? baseUniq(array, baseIteratee(iteratee, 2)) : [];\n}\n\nmodule.exports = uniqBy;\n","/**\n * Convert SGF files to a JS object\n * @param {string} sgf A valid SGF file.\n * @see http://www.red-bean.com/sgf/sgf4.html\n * @return {object} The SGF file represented as a JS object\n */\nexports.parse = function (sgf) {\n\t'use strict';\n\n\tvar parse;\n\tvar parser;\n\tvar collection = {};\n\n\t// tracks the current sequence\n\tvar sequence;\n\n\t// tracks the current node\n\tvar node;\n\n\t// tracks the last PropIdent\n\tvar lastPropIdent;\n\n\t// A map of functions to parse the different components of an SGF file\n\tparser = {\n\n\t\tbeginSequence: function (sgf) {\n\t\t\tvar key = 'sequences';\n\n\t\t\t// Top-level sequences are gameTrees\n\t\t\tif (!sequence) {\n\t\t\t\tsequence = collection;\n\t\t\t\tkey = 'gameTrees';\n\t\t\t}\n\n\t\t\tif (sequence.gameTrees) {\n\t\t\t\tkey = 'gameTrees';\n\t\t\t}\n\n\t\t\tvar newSequence = {\n\t\t\t\tparent: sequence\n\t\t\t};\n\n\t\t\tsequence[key] = sequence[key] || [];\n\t\t\tsequence[key].push(newSequence);\n\t\t\tsequence = newSequence;\n\n\t\t\treturn sgf.substring(1);\n\t\t},\n\n\t\tendSequence: function (sgf) {\n\t\t\tif (sequence.parent) {\n\t\t\t\tsequence = sequence.parent;\n\t\t\t} else {\n\t\t\t\tsequence = null;\n\t\t\t}\n\t\t\treturn sgf.substring(1);\n\t\t},\n\n\t\tnode: function (sgf) {\n\t\t\tnode = {};\n\t\t\tsequence.nodes = sequence.nodes || [];\n\t\t\tsequence.nodes.push(node);\n\t\t\treturn sgf.substring(1);\n\t\t},\n\n\t\tproperty: function (sgf) {\n\t\t\tvar propValue;\n\n\t\t\t// Search for the first unescaped ]\n\t\t\tvar firstPropEnd = sgf.match(/([^\\\\\\]]|\\\\(.|\\n|\\r))*\\]/);\n\n\t\t\tif (!firstPropEnd.length) {\n\t\t\t\tthrow new Error('malformed sgf');\n\t\t\t}\n\n\t\t\tfirstPropEnd = firstPropEnd[0].length;\n\n\t\t\tvar property = sgf.substring(0, firstPropEnd);\n\t\t\tvar propValueBegin = property.indexOf('[');\n\t\t\tvar propIdent = property.substring(0, propValueBegin);\n\n\t\t\t// Point lists don't declare a PropIdent for each PropValue\n\t\t\t// Instead, they should use the last declared property\n\t\t\t// See: http://www.red-bean.com/sgf/sgf4.html#move/pos\n\t\t\tif (!propIdent) {\n\t\t\t\tpropIdent = lastPropIdent;\n\n\t\t\t\t// If this is the first property in a list of multiple\n\t\t\t\t// properties, we need to wrap the PropValue in an array\n\t\t\t\tif (!Array.isArray(node[propIdent])) {\n\t\t\t\t\tnode[propIdent] = [node[propIdent]];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlastPropIdent = propIdent;\n\n\t\t\tpropValue = property.substring(propValueBegin + 1, property.length - 1);\n\n\t\t\t// We have no problem parsing PropIdents of any length, but the spec\n\t\t\t// says they should be no longer than two characters.\n\t\t\t//\n\t\t\t// http://www.red-bean.com/sgf/sgf4.html#2.2\n\t\t\tif (propIdent.length > 2) {\n\t\t\t\t// TODO: What's the best way to issue a warning?\n\t\t\t\tconsole.warn(\n\t\t\t\t\t'SGF PropIdents should be no longer than two characters:', propIdent\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (Array.isArray(node[propIdent])) {\n\t\t\t\tnode[propIdent].push(propValue);\n\t\t\t} else {\n\t\t\t\tnode[propIdent] = propValue;\n\t\t\t}\n\n\t\t\treturn sgf.substring(firstPropEnd);\n\t\t},\n\n\t\t// Whitespace, tabs, or anything else we don't recognize\n\t\tunrecognized: function (sgf) {\n\n\t\t\t// March ahead to the next character\n\t\t\treturn sgf.substring(1);\n\t\t}\n\t};\n\n\t// Processes an SGF file character by character\n\tparse = function (sgf) {\n\t\twhile (sgf) {\n\t\t\tvar initial = sgf.substring(0, 1);\n\t\t\tvar type;\n\n\t\t\t// Use the initial (the first character in the remaining sgf file) to\n\t\t\t// decide which parser function to use\n\t\t\tif (initial === '(') {\n\t\t\t\ttype = 'beginSequence';\n\t\t\t} else if (initial === ')') {\n\t\t\t\ttype = 'endSequence';\n\t\t\t} else if (initial === ';') {\n\t\t\t\ttype = 'node';\n\t\t\t} else if (initial.search(/[A-Z\\[]/) !== -1) {\n\t\t\t\ttype = 'property';\n\t\t\t} else {\n\t\t\t\ttype = 'unrecognized';\n\t\t\t}\n\n\t\t\tsgf = parser[type](sgf);\n\t\t}\n\n\t\treturn collection;\n\t};\n\n\t// Begin parsing the SGF file\n\treturn parse(sgf);\n};\n\n/**\n * Generate an SGF file from a SmartGame Record JavaScript Object\n * @param {object} record A record object.\n * @return {string} The record as a string suitable for saving as an SGF file\n */\nexports.generate = function (record) {\n\t'use strict';\n\n\tfunction stringifySequences(sequences) {\n\t\tvar contents = '';\n\n\t\tsequences.forEach(function (sequence) {\n\t\t\tcontents += '(';\n\n\t\t\t// Parse all nodes in this sequence\n\t\t\tif (sequence.nodes) {\n\t\t\t\tsequence.nodes.forEach(function (node) {\n\t\t\t\t\tvar nodeString = ';';\n\t\t\t\t\tfor (var property in node) {\n\t\t\t\t\t\tif (node.hasOwnProperty(property)) {\n\t\t\t\t\t\t\tvar prop = node[property];\n\t\t\t\t\t\t\tif (Array.isArray(prop)) {\n\t\t\t\t\t\t\t\tprop = prop.join('][');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tnodeString += property + '[' + prop + ']';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcontents += nodeString;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Call the function we're in recursively for any child sequences\n\t\t\tif (sequence.sequences) {\n\t\t\t\tcontents += stringifySequences(sequence.sequences);\n\t\t\t}\n\n\t\t\tcontents += ')';\n\t\t});\n\n\t\treturn contents;\n\t}\n\n\treturn stringifySequences(record.gameTrees);\n};\n\n","var Symbol = require('./_Symbol'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray');\n\n/** Built-in value references. */\nvar spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\n/**\n * Checks if `value` is a flattenable `arguments` object or array.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n */\nfunction isFlattenable(value) {\n  return isArray(value) || isArguments(value) ||\n    !!(spreadableSymbol && value && value[spreadableSymbol]);\n}\n\nmodule.exports = isFlattenable;\n","var baseFlatten = require('./_baseFlatten');\n\n/**\n * Flattens `array` a single level deep.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * _.flatten([1, [2, [3, [4]], 5]]);\n * // => [1, 2, [3, [4]], 5]\n */\nfunction flatten(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? baseFlatten(array, 1) : [];\n}\n\nmodule.exports = flatten;\n","/**\n * Interact with smartgame objects.\n * @param {object} smartgame A JS Object representing a smartgame\n * @see http://www.red-bean.com/sgf/sgf4.html\n * @return {object} An object with methods for navigating and manipulating a\n * smartgame\n */\nmodule.exports = function (smartgame) {\n\t'use strict';\n\n\tvar sequence;\n\tvar node;\n\n\tvar Smartgamer = function () {\n\t\tthis.init();\n\t};\n\n\tSmartgamer.prototype = {\n\t\tinit: function () {\n\t\t\tif (smartgame) {\n\t\t\t\tthis.game = smartgame.gameTrees[0];\n\t\t\t\tthis.reset();\n\t\t\t}\n\t\t},\n\n\t\t// Load a smartgame to make it possible to load new games or add one after\n\t\t// initialization, if desired\n\t\tload: function (newSmartgame) {\n\t\t\tsmartgame = newSmartgame;\n\t\t\tthis.init();\n\t\t},\n\n\t\t// Having multiple games in a collection is not common, but it's part of\n\t\t// the spec\n\t\tgames: function () {\n\t\t\treturn smartgame.gameTrees;\n\t\t},\n\n\t\tselectGame: function (i) {\n\t\t\tif (i < smartgame.gameTrees.length) {\n\t\t\t\tthis.game = smartgame.gameTrees[i];\n\t\t\t\tthis.reset();\n\t\t\t} else {\n\t\t\t\tthrow new Error('the collection doesn\\'t contain that many games');\n\t\t\t}\n\n\t\t\treturn this;\n\t\t},\n\n\t\treset: function () {\n\t\t\tsequence = this.game;\n\t\t\tnode = sequence.nodes[0];\n\t\t\tthis.path = { m: 0 };\n\n\t\t\treturn this;\n\t\t},\n\n\t\tgetSmartgame: function () {\n\t\t\treturn smartgame;\n\t\t},\n\n\t\t/**\n\t\t * Return any variations available at the current move\n\t\t **/\n\t\tvariations: function () {\n\t\t\tif (sequence) {\n\t\t\t\tvar localNodes = sequence.nodes;\n\t\t\t\tvar localIndex = (localNodes) ? localNodes.indexOf(node) : null;\n\n\t\t\t\tif (localNodes) {\n\t\t\t\t\tif (localIndex === (localNodes.length - 1)) {\n\t\t\t\t\t\treturn sequence.sequences || [];\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn [];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Go to the next move\n\t\t **/\n\t\tnext: function (variation) {\n\t\t\tvariation = variation || 0;\n\n\t\t\tvar localNodes = sequence.nodes;\n\t\t\tvar localIndex = (localNodes) ? localNodes.indexOf(node) : null;\n\n\t\t\t// If there are no additional nodes in this sequence,\n\t\t\t// advance to the next one\n\t\t\tif (localIndex === null || localIndex >= (localNodes.length - 1)) {\n\t\t\t\tif (sequence.sequences) {\n\t\t\t\t\tif (sequence.sequences[variation]) {\n\t\t\t\t\t\tsequence = sequence.sequences[variation];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsequence = sequence.sequences[0];\n\t\t\t\t\t}\n\n\t\t\t\t\tnode = sequence.nodes[0];\n\n\t\t\t\t\t// Note the fork chosen for this variation in the path\n\t\t\t\t\tthis.path[this.path.m] = variation;\n\t\t\t\t\tthis.path.m += 1;\n\t\t\t\t} else {\n\t\t\t\t\t// End of sequence / game\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnode = localNodes[localIndex + 1];\n\t\t\t\tthis.path.m += 1;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t},\n\n\t\t/**\n\t\t * Go to the previous move\n\t\t **/\n\t\tprevious: function () {\n\t\t\tvar localNodes = sequence.nodes;\n\t\t\tvar localIndex = (localNodes) ? localNodes.indexOf(node) : null;\n\n\t\t\t// Delete any variation forks at this point\n\t\t\t// TODO: Make this configurable... we should keep this if we're\n\t\t\t// remembering chosen paths\n\t\t\tdelete this.path[this.path.m];\n\n\t\t\tif (!localIndex || localIndex === 0) {\n\t\t\t\tif (sequence.parent && !sequence.parent.gameTrees) {\n\t\t\t\t\tsequence = sequence.parent;\n\t\t\t\t\tif (sequence.nodes) {\n\t\t\t\t\t\tnode = sequence.nodes[sequence.nodes.length - 1];\n\t\t\t\t\t\tthis.path.m -= 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnode = null;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// Already at the beginning\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnode = localNodes[localIndex - 1];\n\t\t\t\tthis.path.m -= 1;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t},\n\n\t\t// Go to the last move of the game\n\t\tlast: function () {\n\t\t\tvar totalMoves = this.totalMoves();\n\n\t\t\twhile(this.path.m < totalMoves) {\n\t\t\t\tthis.next();\n\t\t\t}\n\n\t\t\treturn this;\n\t\t},\n\n\t\t// Go to the first move of the game\n\t\tfirst: function () {\n\t\t\tthis.reset();\n\t\t\treturn this;\n\t\t},\n\n\t\t/**\n\t\t * Go to a particular move, specified as a\n\t\t * a) number\n\t\t * b) path string\n\t\t * c) path object\n\t\t **/\n\t\tgoTo: function (path) {\n\t\t\tif (typeof path === 'string') {\n\t\t\t\tpath = this.pathTransform(path, 'object');\n\t\t\t} else if (typeof path === 'number') {\n\t\t\t\tpath = { m: path };\n\t\t\t}\n\n\t\t\tthis.reset();\n\n\t\t\tvar n = node;\n\n\t\t\tfor (var i = 0; i < path.m && n; i += 1) {\n\t\t\t\t// Check for a variation in the path for the upcoming move\n\t\t\t\tvar variation = path[i + 1] || 0;\n\t\t\t\tn = this.next(variation);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t},\n\n\t\tgetGameInfo: function () {\n\t\t\treturn this.game.nodes[0];\n\t\t},\n\n\t\t// Provide the current node\n\t\tnode: function () {\n\t\t\treturn node;\n\t\t},\n\n\t\t// Get the total number of moves in a game\n\t\ttotalMoves: function () {\n\t\t\tvar localSequence = this.game;\n\t\t\tvar moves = 0;\n\t\t\twhile(localSequence) {\n\t\t\t\tmoves += localSequence.nodes.length;\n\n\t\t\t\tif (localSequence.sequences) {\n\t\t\t\t\tlocalSequence = localSequence.sequences[0];\n\t\t\t\t} else {\n\t\t\t\t\tlocalSequence = null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// TODO: Right now we're *assuming* that the root node doesn't have a\n\t\t\t// move in it, which is *recommended* but not required practice.\n\t\t\t// @see http://www.red-bean.com/sgf/sgf4.html\n\t\t\t// \"Note: it's bad style to have move properties in root nodes.\n\t\t\t// (it isn't forbidden though)\"\n\t\t\treturn moves - 1;\n\t\t},\n\n\t\t// Get or set a comment on the current node\n\t\t// @see http://www.red-bean.com/sgf/sgf4.html#text\n\t\tcomment: function (text) {\n\t\t\tif (typeof text === 'undefined') {\n\t\t\t\t// Unescape characters\n\t\t\t\tif (node.C) {\n\t\t\t\t\treturn node.C.replace(/\\\\([\\\\:\\]])/g, '$1');\n\t\t\t\t} else {\n\t\t\t\t\treturn '';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Escape characters\n\t\t\t\tnode.C = text.replace(/[\\\\:\\]]/g, '\\\\$&');\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Translate alpha coordinates into an array\n\t\t * @param string alphaCoordinates\n\t\t * @return array [x, y]\n\t\t **/\n\t\ttranslateCoordinates: function (alphaCoordinates) {\n\t\t\tvar coordinateLabels = 'abcdefghijklmnopqrst';\n\t\t\tvar intersection = [];\n\n\t\t\tintersection[0] = coordinateLabels.indexOf(alphaCoordinates.substring(0, 1));\n\t\t\tintersection[1] = coordinateLabels.indexOf(alphaCoordinates.substring(1, 2));\n\n\t\t\treturn intersection;\n\t\t},\n\n\t\t/**\n\t\t * Convert path objects to strings and path strings to objects\n\t\t **/\n\t\tpathTransform: function (input, outputType, verbose) {\n\t\t\tvar output;\n\n\t\t\t// If no output type has been specified, try to set it to the\n\t\t\t// opposite of the input\n\t\t\tif (typeof outputType === 'undefined') {\n\t\t\t\toutputType = (typeof input === 'string') ? 'object' : 'string';\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Turn a path object into a string.\n\t\t\t */\n\t\t\tfunction stringify(input) {\n\t\t\t\tif (typeof input === 'string') {\n\t\t\t\t\treturn input;\n\t\t\t\t}\n\n\t\t\t\tif (!input) {\n\t\t\t\t\treturn '';\n\t\t\t\t}\n\n\t\t\t\toutput = input.m;\n\n\t\t\t\tvar variations = [];\n\t\t\t\tfor (var key in input) {\n\t\t\t\t\tif (input.hasOwnProperty(key) && key !== 'm') {\n\t\t\t\t\t\t// Only show variations that are not the primary one, since\n\t\t\t\t\t\t// primary variations are chosen by default\n\t\t\t\t\t\tif (input[key] > 0) {\n\t\t\t\t\t\t\tif (verbose) {\n\t\t\t\t\t\t\t\tvariations.push(', variation ' + input[key] + ' at move ' + key);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tvariations.push('-' + key + ':' + input[key]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\toutput += variations.join('');\n\t\t\t\treturn output;\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Turn a path string into an object.\n\t\t\t */\n\t\t\tfunction parse(input) {\n\t\t\t\tif (typeof input === 'object') {\n\t\t\t\t\tinput = stringify(input);\n\t\t\t\t}\n\n\t\t\t\tif (!input) {\n\t\t\t\t\treturn { m: 0 };\n\t\t\t\t}\n\n\t\t\t\tvar path = input.split('-');\n\t\t\t\toutput = {\n\t\t\t\t\tm: Number(path.shift())\n\t\t\t\t};\n\n\t\t\t\tif (path.length) {\n\t\t\t\t\tpath.forEach(function (variation, i) {\n\t\t\t\t\t\tvariation = variation.split(':');\n\t\t\t\t\t\toutput[Number(variation[0])] = parseInt(variation[1], 10);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn output;\n\t\t\t}\n\n\t\t\tif (outputType === 'string') {\n\t\t\t\toutput = stringify(input);\n\t\t\t} else if (outputType === 'object') {\n\t\t\t\toutput = parse(input);\n\t\t\t} else {\n\t\t\t\toutput = undefined;\n\t\t\t}\n\n\t\t\treturn output;\n\t\t}\n\t};\n\n\treturn new Smartgamer();\n};\n","﻿/* globals module: false, require: false\r\n\r\n*/\r\n\r\n/**\r\n * \r\n * @param {object} [options=] Defines various options for the output SGF. May be omitted, in which case the default options (see below) are used.\r\n * @param {boolean} [options.addComments = true] When flagged, comments are added to each node giving the move number and the number of stones captured by Black and White.\r\n * @param {boolean} [options.addPasses = true] When flagged, a pass is added to each node corresponding to a move by a player. This can make the output more easy to navigate in some viewers.\r\n * @param {array} [options.boardDimensions = [11, 11]] May be used for rectangular t-Go. Should be ommitted for [n, n] t-Go, where n is specified in the input SGF (@param variantSgf).\r\n * @param {number} [options.coordinatesType = 1] 0: none;\r\n * 1: Bottom to top & left to right; western numbers;\r\n * 2: Top to  & left to right; western numbers (not yet implemented);\r\n * 3: Top to bottom & left to right; first coordinate is in Japanese characters (not yet implemented);\r\n * 4: Top to bottom & left to right; first coordinate is in Chinese characters (not yet implemented);\r\n * @param {number} [options.wraparoundMarkersType = 1] 0: none;\r\n * 1: Full outline, using unicode Box Drawing symbols;\r\n * 2: corners and middles, using unicode Box Drawing symbols;\r\n * 3: just corners, using unicode Box Drawing symbols;\r\n * 4: just middles, using unicode Box Drawing symbols;\r\n * @param {object} [options.projectionSettings=] Further optional settings for how the (toroidal, or other sort of) board is projected to a flat grid.\r\n * @param {number} [options.projectionSettings.wraparound = 4]  Number of lines to add for the “wraparound”.\r\n * @param {array} [options.projectionSettings.offset = [0,0]]  Translation to apply to all moves.\r\n * @param {boolean} [options.transformToString=true] When set to false, the output is an object (an instance of a Smartgame).\r\n * @public\r\n * @return {object} An object exposing functions for going back and forth between SGF for a standard viewer, and SGF for a game of toroidal Go\r\n *//*todos:\r\noptions.markLastMove Default value: 'CR'\r\nopions.placesToCount Default: undefined. May be: 'last'|[countInfo1, .. countInfo1]. countInfo is a path plus an array with a point for each chain to be considered as dead. {path, deadChains: [...]}\r\noptions.projectionSettings.rotation {integer} Default value: 0. Allowed values: 0 .. 3\r\noptions.projectionSettings.normalize1stMove array, or one of: C, TL TR BL BR \r\noptions.projectionSettings.normalize2ndMove \r\n\r\n*/\r\nfunction transformer(options\r\n) {\r\n\t'use strict';\r\n\tconst\r\n\t\t_flatten = require('lodash/flatten')\r\n\t\t, _uniqBy = require('lodash/uniqBy')\r\n\t\t, _fi = require('lodash/findIndex')\r\n\t\t, modulo = (x, y) => (x % y + y) % y\r\n\t\t, sourceSgfMessage = 'source sgf for toroidal Go has been adapted by go-variants-transformer so as to be rendered by any standard Go application'\r\n\toptions = {\r\n\t\taddPasses: true\r\n\t\t, boardDimensions: [11, 11]\r\n\t\t, transformToString: true\r\n\t\t, addComments: true\r\n\t\t, coordinatesType: 1\r\n\t\t, wraparoundMarkersType: 1\r\n\t\t//above are the defaults\r\n\t\t, ...options\r\n\t}\r\n\toptions.projectionSettings =\r\n\t\t{\r\n\t\t\twraparound: 4,\r\n\t\t\toffset: [0, 0],\r\n\t\t\t...options.projectionSettings\r\n\t\t}\r\n\r\n\tif (options.addPasses === undefined)\r\n\t\toptions.addPasses = true;\r\n\r\n\toptions.boardDimensions = options.boardDimensions || [11, 11]\r\n\r\n\tif (options.transformToString === undefined)\r\n\t\toptions.transformToString = true;\r\n\r\n\tif (options.addComments === undefined)\r\n\t\toptions.addComments = true;\r\n\t// options.projectionSettings = \r\n\r\n\tlet wraparound = options.projectionSettings.wraparound\r\n\r\n\tlet $ = {}\r\n\t\t// , _markersForWraparound = null\r\n\t\t, coordinateLabels = function (i) {\r\n\t\t\t// 97..122 and 65..90\r\n\t\t\treturn String.fromCharCode(i < 26 ? i + 97 : i + 39)\r\n\t\t\t//65 - 26 =\r\n\t\t}\r\n\t\t,\r\n\t\ttranslateCoordinate = (c) => {\r\n\t\t\tlet r = c.charCodeAt(0)\r\n\t\t\treturn r >= 97 ? r - 97 : r - 26\r\n\t\t},\r\n\t\t/**\r\n\t\t * Translate alpha coordinates into an array\r\n\t\t * @param string alphaCoordinates\r\n\t\t * @return array [x, y]\r\n\t\t **/\r\n\t\ttranslateCoordinates = (alphaCoordinates) => {\r\n\t\t\treturn [translateCoordinate(alphaCoordinates.substring(0, 1))\r\n\t\t\t\t, translateCoordinate(alphaCoordinates.substring(1, 2))]\r\n\r\n\t\t}\r\n\r\n\r\n\t$.coordinateLabels = coordinateLabels\r\n\t$.translateCoordinates = translateCoordinates\r\n\t/**\r\n\t * @public\r\n\t */\r\n\t$.options = options\r\n\r\n\t$.projectOnLine = function (a, isVertical) {\r\n\t\t/*\r\n\t\tm: boardDimensions[0] : 11\r\n\t\tn: wraparound : 4\r\n\t\tline: 0,...,(m-1)\r\n\t\t=>\r\n\t\t0,...,(n-1), (start line) n, ... , (n + m - 1) end line,  (n+m), ... , (2n + m - 1)\r\n\r\n\t\tcoordinate a ∈ {0 .. m-1} projects to n + a in main area\r\n\t\tall projections are of the form n + a + xm, x ∈ ℤ s.t. 0 ≤ n + a + xm ≤ 2n + m -1\r\n\t\t-xm ≤ n + a\r\n\t\t\tsmallest such x < 0 is ceil(-(n+a)/m)\r\n\t\t xm ≤ n + m - 1 -a\r\n\t\t\tlargest such x is floor((n + m - 1 -a) / m)\r\n\r\n\r\n\t\t*/\r\n\r\n\t\tconst m //= options.boardDimensions[0]\r\n\t\t\t= options.boardDimensions[isVertical ? 1 : 0]\r\n\r\n\t\t\t, r = []\r\n\r\n\t\tfor (let i = Math.ceil(-(wraparound + a) / m); i <= (wraparound + m - 1 - a) / m; i++)\r\n\t\t\tr.push(wraparound + a + i * m)\r\n\t\treturn r\r\n\t}\r\n\r\n\t/**\r\n\t * This is the inverse function to the function “projectOnFlat” – at least it is when “multiple” is false.\r\n\t * @param {Array} points The point or array of points projected onto the grid.\r\n\t * @param {Boolean=false} multiple Whether the argument “points” is the image of a single point (“multiple=false”) or of multiple points.\r\n\t * @returns {Array} When the flag “multiple” is flagged, returns an array of points; otherwise returns a single point (i.e. an array of two integers).\r\n\t */\r\n\tfunction inverseProjectOnFlat(points, multiple) {\r\n\t\tif (!Array.isArray(points[0])) points = [points]\r\n\t\tif (!multiple)\r\n\t\t\treturn [modulo(points[0][0] - options.projectionSettings.offset[0] - wraparound, options.boardDimensions[0])\r\n\t\t\t\t, modulo(points[0][1] - options.projectionSettings.offset[1] - wraparound, options.boardDimensions[1])]\r\n\t\treturn _uniqBy(points.map(x => inverseProjectOnFlat([x])), (x) => `${x[0]}_${x[1]}`)\r\n\t}\r\n\t$.inverseProjectOnFlat = inverseProjectOnFlat\r\n\r\n\t/**\r\n\t * Projects a point on the t-Go board to the array of points on the standard grid/board.\r\n\t * @param {Array} p The point in the t-Go board to be projected on to the grid.\r\n\t * @returns {Array}\r\n\t */\r\n\tfunction projectOnFlat(p) {\r\n\t\tconst a = $.projectOnLine(p[0] + options.projectionSettings.offset[0])\r\n\t\t\t, b = $.projectOnLine(p[1] + options.projectionSettings.offset[1])\r\n\t\t\t, r = []\r\n\t\tfor (let i = 0; i < a.length; i++)\r\n\t\t\tfor (let j = 0; j < b.length; j++)\r\n\t\t\t\tr.push([a[i], b[j]])\r\n\t\treturn r\r\n\t}\r\n\t$.projectOnFlat = projectOnFlat\r\n\r\n\t$.modX = (x) => modulo(x, options.boardDimensions[0])\r\n\t$.modY = (y) => modulo(y, options.boardDimensions[1])\r\n\r\n\tlet setUpMarkers = () => {\r\n\t\t$.wraparoundAndCoords = []\r\n\r\n\t\t// $.getMarkersForWraparound = function (){\r\n\t\tif (options.projectionSettings.wraparound > 0) {\r\n\t\t\tconst m = options.boardDimensions[0],\r\n\t\t\t\tn = options.boardDimensions[1]\r\n\r\n\t\t\t/*\r\n\t\t\tm: boardDimensions[0] : 11\r\n\t\t\tw: wraparound : 4\r\n\t\t\tline: 0,...,(m-1)\r\n\t\t\t=>\r\n\t\t\t0,...,(w-1), (start line) w, ... , (w + m - 1) end line, (w+m), ... , (2w + m - 1)\r\n\t\t\t*/\r\n\r\n\t\t\tlet board = []\r\n\t\t\tif ([1, 2, 4].indexOf(options.wraparoundMarkersType) > -1) {\r\n\t\t\t\tlet middles = options.wraparoundMarkersType > 1 ?\r\n\t\t\t\t\t[Math.floor((m - 1) / 2) + 1, Math.ceil((m - 1) / 2) + 1,\r\n\t\t\t\t\tMath.floor((n - 1) / 2) + 1, Math.ceil((n - 1) / 2) + 1]\r\n\t\t\t\t\t: [-1, 99, -1, 99]\r\n\t\t\t\tfor (let i = 1; i <= m; i++) {\r\n\t\t\t\t\tif (i < middles[0] || i > middles[1]) {\r\n\t\t\t\t\t\tcontinue\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlet label = '─'//U+2500 Box Drawings Light Horizontal\r\n\r\n\t\t\t\t\tboard.push(coordinateLabels(wraparound - 1 + i) + coordinateLabels(wraparound - 1) + \":\" + label)\r\n\t\t\t\t\tboard.push(coordinateLabels(wraparound - 1 + i) + coordinateLabels(wraparound + m) + \":\" + label)\r\n\t\t\t\t}\r\n\t\t\t\tfor (let i = 1; i <= n; i++) {\r\n\t\t\t\t\tif (i < middles[2] || i > middles[3]) {\r\n\t\t\t\t\t\tcontinue\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlet label = '│'//unicode too\r\n\t\t\t\t\tboard.push(coordinateLabels(wraparound - 1) + coordinateLabels(wraparound - 1 + i) + \":\" + label)\r\n\t\t\t\t\tboard.push(coordinateLabels(wraparound + n) + coordinateLabels(wraparound - 1 + i) + \":\" + label)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif ([1, 2, 3].indexOf(options.wraparoundMarkersType) > -1) {\r\n\t\t\t\t//┘  ┌  └ ┐\r\n\t\t\t\tboard.push(coordinateLabels(wraparound - 1) + coordinateLabels(wraparound + n) + \":└\")\r\n\t\t\t\tboard.push(coordinateLabels(wraparound + m) + coordinateLabels(wraparound + n) + \":┘\")\r\n\t\t\t\tboard.push(coordinateLabels(wraparound - 1) + coordinateLabels(wraparound - 1) + \":┌\")\r\n\t\t\t\tboard.push(coordinateLabels(wraparound + m) + coordinateLabels(wraparound - 1) + \":┐\")\r\n\t\t\t}\r\n\r\n\t\t\tif (options.coordinatesType > 0 && wraparound > 1) {\r\n\t\t\t\tfor (let i = 1; i < 2 * wraparound + m - 1; i++) {\r\n\t\t\t\t\tlet coordIndex = $.modX(-options.projectionSettings.offset[0] - wraparound + i)\r\n\r\n\t\t\t\t\t//omit the I - historical coordinates for Go...\r\n\t\t\t\t\t//I: 9th letter\r\n\t\t\t\t\tif (coordIndex >= 8) {\r\n\t\t\t\t\t\tcoordIndex++\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlet label = coordinateLabels(coordIndex).toUpperCase()\r\n\t\t\t\t\tboard.push(coordinateLabels(i) + coordinateLabels(0) + \":\" + label)\r\n\t\t\t\t\tboard.push(coordinateLabels(i) + coordinateLabels(2 * wraparound + n - 1) + \":\" + label)\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (let i = 1; i < 2 * wraparound + n - 1; i++) {\r\n\t\t\t\t\tlet coordIndex = $.modY(n + options.projectionSettings.offset[1] + wraparound - i - 1)\r\n\t\t\t\t\tlet label = '' + (coordIndex + 1)\r\n\t\t\t\t\tboard.push(coordinateLabels(0) + coordinateLabels(i) + \":\" + label)\r\n\t\t\t\t\tboard.push(coordinateLabels(2 * wraparound + m - 1) + coordinateLabels(i) + \":\" + label)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t$.wraparoundAndCoords = board\r\n\t\t}\r\n\t}\r\n\tsetUpMarkers()\r\n\r\n\r\n\t$.coords2String =\r\n\t\t/**\r\n\t\t * converts coordinates to a string\r\n\t\t */\r\n\t\tfunction coords2String(coords) {\r\n\t\t\treturn coordinateLabels(coords[0]) + coordinateLabels(coords[1])\r\n\t\t}\r\n\r\n\tfunction goThroughTree(state) {\r\n\t\tlet { wrappedGame, node, pending, currentPath, tGo } = state\r\n\t\t\t, nbVariations = wrappedGame.variations().length\r\n\t\tif (currentPath.m > 1000) throw new Error('seem to be stuck!');\r\n\t\tstate.hasSiblings = nbVariations > 0\r\n\t\tif (state.hasSiblings) {\r\n\t\t\t// if(currentPath[m] === undefined)\r\n\t\t\t// currentPath[m] = 0\r\n\t\t\t// else\r\n\t\t\t// currentPath[m] += 1\r\n\t\t\t// currentPath.m += 1\r\n\t\t\tfor (let i = nbVariations - 1; i > 0; i--)\r\n\t\t\t//pile up in this order, as it's FILO and we want the last variation, which may contain a mode added by CGoboard to go last\r\n\t\t\t{\r\n\t\t\t\tlet pathForLater = { ...currentPath }//Object.assign({}, currentPath)\r\n\t\t\t\tpathForLater[currentPath.m + 1] = i\r\n\t\t\t\tpathForLater.m += 1\r\n\r\n\t\t\t\tif (tGo !== undefined)\r\n\t\t\t\t\tpending.push({ path: pathForLater, tGoData: tGo.exportData() })\r\n\t\t\t\telse\r\n\t\t\t\t\tpending.push({ path: pathForLater })\r\n\r\n\t\t\t}\r\n\t\t\tstate.node = wrappedGame.next().node()\r\n\t\t\tcurrentPath[currentPath.m + 1] = 0\r\n\t\t\tcurrentPath.m += 1\r\n\t\t\treturn state.node\r\n\t\t}\r\n\r\n\t\tlet nextNode = wrappedGame.next().node()\r\n\t\tif (node === nextNode) {//at a leaf:\r\n\t\t\tif (pending.length === 0) {\r\n\t\t\t\tstate.node = null\r\n\t\t\t\treturn state.node//finished\r\n\t\t\t}\r\n\t\t\tlet fromStack = pending.pop()\r\n\t\t\tstate.hasSiblings = true\r\n\t\t\t// if (fromStack === null) {\r\n\t\t\t// \tnode = null\r\n\t\t\t// \treturn//finished!\r\n\t\t\t// }\r\n\t\t\tif (tGo !== undefined) tGo.loadData(fromStack.tGoData)\r\n\t\t\tstate.node = wrappedGame.goTo(fromStack.path).node()\r\n\t\t\tstate.currentPath = fromStack.path\r\n\t\t\treturn state.node\r\n\t\t}\r\n\t\telse {\r\n\t\t\tcurrentPath.m += 1\r\n\t\t\tstate.node = nextNode\r\n\t\t\treturn state.node\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Apart from a few details, this is an inverse of the transform function.\r\n\t * @param {smartgame|string} wrappedGame\r\n\t * @param {smartgame} smartgame\r\n\t * @public\r\n\t */\r\n\tfunction inverseTransform(\r\n\t\twrappedGame, smartgame) {\r\n\r\n\t\tif (smartgame === undefined) {\r\n\t\t\tsmartgame = require('smartgame')\r\n\t\t}\r\n\r\n\t\tif (typeof wrappedGame === 'string') {\r\n\t\t\tvar smartgamer = require('smartgamer')\r\n\t\t\twrappedGame = smartgamer(smartgame.parse(wrappedGame))\r\n\t\t}\r\n\r\n\t\tlet node = wrappedGame.first().node()\r\n\t\t\t, pending = []\r\n\t\t\t, currentPath = { m: 0 }\r\n\t\t\t, cleanerRegEx = /^[a-zA-Z :0-9\\-(\\r\\n]+GoVariantsTransformer\\)--[\\r\\n]*/\r\n\t\t\t, cleanComments = () => {\r\n\t\t\t\tif (node.C !== undefined) {\r\n\t\t\t\t\tnode.C = node.C.replace(cleanerRegEx, '')\r\n\t\t\t\t}\r\n\t\t\t\tif (node.C === '')\r\n\t\t\t\t\tdelete node.C\r\n\t\t\t}\r\n\t\t\t,\r\n\t\t\t/**\r\n\t\t\t * Function to:\r\n\t\t\t * \t- remove the “border” (unicode symbols added by the transform to indicate where the wraparound area meets the main grid).\r\n\t\t\t * \t- remove CM (colour map) and CT (colour table) which are nonstandard SGF added by CGoboard for background colour (could be interesting to use this feature later on).\r\n\t\t\t */\r\n\t\t\tcleanLabels = () => {\r\n\r\n\t\t\t\tlet labels = []\r\n\t\t\t\tif (node.LB !== undefined) {\r\n\t\t\t\t\tlabels = node.LB\r\n\t\t\t\t\tif (!Array.isArray(labels))\r\n\t\t\t\t\t\tlabels = [labels]\r\n\t\t\t\t\tlabels = labels.filter(i => !$.wraparoundAndCoords.includes(i))\r\n\t\t\t\t\t/* jshint loopfunc: true */\r\n\t\t\t\t\tlabels =\r\n\t\t\t\t\t\t_uniqBy(\r\n\t\t\t\t\t\t\tlabels\r\n\t\t\t\t\t\t\t\t.map(function (x) { return x.split(':', 2) })//assume the label doesn’t contain “:”\r\n\t\t\t\t\t\t\t\t.map((x) => [$.coords2String($.inverseProjectOnFlat(translateCoordinates(x[0]))), x[1]])\r\n\t\t\t\t\t\t\t, (x) => x[0])\r\n\t\t\t\t\t\t\t.map((x) => `${x[0]}:${x[1]}`)\r\n\r\n\r\n\t\t\t\t\t// labels = []\r\n\t\t\t\t\t// for (let i = 0; i < labels2.length; i++)\r\n\t\t\t\t\t// \tlabels = labels.concat(labels2)\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnode.LB = labels\r\n\t\t\t\tif (node.LB.length === 0)\r\n\t\t\t\t\tdelete node.LB\r\n\r\n\t\t\t\tif (node.CM)\r\n\t\t\t\t\tdelete node.CM\r\n\t\t\t\tif (node.CT)\r\n\t\t\t\t\tdelete node.CT\r\n\t\t\t}\r\n\r\n\t\tcleanLabels()\r\n\t\tnode.SZ = options.boardDimensions[0]\r\n\t\tnode.AP = \"go-variants-transformer\"\r\n\r\n\t\tif (node.SO !== undefined) {\r\n\t\t\tlet cleanSourceRegex = new RegExp(` \\\\(${sourceSgfMessage}\\\\)`)\r\n\t\t\tnode.SO = node.SO.replace(cleanSourceRegex, '')\r\n\t\t\t// if (node.SO === '')\r\n\t\t\t// \tdelete node.SO\r\n\t\t}\r\n\r\n\t\tlet state = {\r\n\t\t\twrappedGame, node, pending, currentPath, siblingMoves: {}//, parentsWithChildToDelete: [] \r\n\t\t}\r\n\r\n\t\tnode = goThroughTree(state)\r\n\t\twhile (node !== null) {\r\n\t\t\tcleanLabels()\r\n\t\t\tcleanComments()\r\n\r\n\t\t\tconst\r\n\t\t\t\tisBlack = node.AB !== undefined || node.B !== undefined\r\n\t\t\t\t, addedStones = isBlack ? node.AB : node.AW\r\n\t\t\t\t, playedStone = isBlack ? node.B : node.W\r\n\t\t\t\t, move = addedStones ? addedStones : playedStone\r\n\t\t\t\t, moveAsArray = Array.isArray(move) ? move : [move]\r\n\t\t\t\t, isAPass = isBlack ? node.B === '' : node.W === ''\r\n\t\t\t\t, moveHasCoords = move !== undefined && move !== ''\r\n\t\t\t\t, coords = !moveHasCoords ? undefined : $.coords2String($.inverseProjectOnFlat(moveAsArray.map(translateCoordinates)))\r\n\r\n\t\t\t//alter the node\r\n\r\n\t\t\t/*\r\n\t\t\tlogic removing a node added by CGoboard, if there already is the same move as AB or AW in a prior variation; assuming \r\n\t\t\tthe variation to be removed is the last of the siblings - which does seem to be the way CGoboard behaves when a click \r\n\t\t\tis made on a point where the next node is AB or AW.  \r\n\t\t\t*/\r\n\t\t\tif (state.hasSiblings) {\r\n\t\t\t\tlet pathForParent = { ...wrappedGame.path } //Object.assign({}, wrappedGame.path)\r\n\t\t\t\tpathForParent.m--\r\n\t\t\t\tdelete pathForParent[pathForParent.m]\r\n\t\t\t\tpathForParent = wrappedGame.pathTransform(pathForParent)\r\n\t\t\t\t// wrappedGame.previous()\r\n\t\t\t\tif (state.siblingMoves[pathForParent] === undefined) {\r\n\t\t\t\t\tstate.siblingMoves[pathForParent] = []\r\n\t\t\t\t}\r\n\t\t\t\tif (addedStones) {\r\n\t\t\t\t\tstate.siblingMoves[pathForParent].push(coords)\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t\tif (playedStone && state.siblingMoves[pathForParent].indexOf(coords) > -1) {\r\n\r\n\t\t\t\t\t\t// state.parentsWithChildToDelete.push(pathForParent)\r\n\t\t\t\t\t\tnode.XX = \"inverseTransformToDelete\"\r\n\t\t\t\t\t}\r\n\t\t\t\t// wrappedGame.goTo(currentPath)\r\n\t\t\t}\r\n\r\n\t\t\tdelete node[isBlack ? 'AB' : 'AW']\r\n\t\t\tdelete node[isBlack ? 'B' : 'W']\r\n\t\t\tdelete node.CR\r\n\t\t\tdelete node.AE\r\n\r\n\t\t\tif (isAPass) {\r\n\t\t\t\tnode[isBlack ? 'B' : 'W'] = ''\r\n\t\t\t}\r\n\r\n\t\t\tif (moveHasCoords) {\r\n\t\t\t\tnode[isBlack ? 'B' : 'W'] = coords\r\n\t\t\t}\r\n\r\n\t\t\t;/*note: this next semicolon is needed! */[// eslint-disable-line no-extra-semi\r\n\t\t\t\t//'CR',todo: add if not marking the move\r\n\t\t\t\t'DD', 'MA', 'SL', 'SQ', 'TR'].forEach(function (sgfProperty) {\r\n\t\t\t\t\t// _.map(['DD','MA','SL','SQ','TR'], function(sgfProperty){\r\n\t\t\t\t\tif (node[sgfProperty] === undefined) return\r\n\t\t\t\t\tlet points = []\r\n\t\t\t\t\tif (Array.isArray(node[sgfProperty])) {\r\n\t\t\t\t\t\tpoints = node[sgfProperty]\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tpoints = [node[sgfProperty]]\r\n\t\t\t\t\t}\r\n\t\t\t\t\tpoints =\r\n\t\t\t\t\t\t$.inverseProjectOnFlat(\r\n\t\t\t\t\t\t\tpoints.map(translateCoordinates), true\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t.map($.coords2String)\r\n\t\t\t\t\tnode[sgfProperty] = points\r\n\t\t\t\t})\r\n\t\t\t// move to next node\r\n\t\t\tnode = goThroughTree(state)\r\n\t\t}\r\n\r\n\t\t// state.parentsWithChildToDelete.forEach((path) => {\r\n\t\t// \t//remove the sgf node\r\n\t\t// \twrappedGame.goTo(path)\r\n\t\t// \tlet sequences = wrappedGame.game.sequences\r\n\t\t// \tlet index = _fi(sequences, (seq) => seq.nodes[0].inverseTransformToDelete)\r\n\t\t// \t\t, tmpI = 0\r\n\t\t// \twhile (index > -1) {\r\n\t\t// \t\tsequences.splice(index, 1)\r\n\t\t// \t\tindex = _fi(sequences, (seq) => seq.nodes[0].inverseTransformToDelete)\r\n\t\t// \t\ttmpI++\r\n\t\t// \t\tif (tmpI > 100) throw new Error('seem to be stuck!');\r\n\t\t// \t}\r\n\r\n\t\t// \t// console.log(path)\r\n\t\t// })\r\n\r\n\t\tlet deleteNodes = (sequence) => {\r\n\t\t\tif (sequence.sequences) {\r\n\r\n\t\t\t\tlet\r\n\t\t\t\t\tsequences = sequence.sequences\r\n\t\t\t\t\t, index = _fi(sequences, (seq) => seq.nodes[0].XX === 'inverseTransformToDelete')\r\n\t\t\t\t\t, tmpI = 0, max = sequences.length\r\n\t\t\t\twhile (index > -1) {\r\n\t\t\t\t\tsequences.splice(index, 1)\r\n\t\t\t\t\tindex = _fi(sequences, (seq) => seq.nodes[0].XX === 'inverseTransformToDelete')\r\n\t\t\t\t\ttmpI++\r\n\t\t\t\t\tif (tmpI > max) throw new Error('seem to be stuck!');\r\n\t\t\t\t}\r\n\t\t\t\tfor (let index2 = 0; index2 < sequences.length; index2++) {\r\n\t\t\t\t\t// deleteNodes(sequences[index2].nodes[sequences[index2].nodes.length - 1]);\r\n\t\t\t\t\tdeleteNodes(sequences[index2]);\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (sequence.nodes)\r\n\t\t\t\tdeleteNodes(sequence.nodes[sequence.nodes.length - 1])\r\n\r\n\t\t}\r\n\t\tdeleteNodes(wrappedGame.game)\r\n\r\n\t\tif (options.transformToString)\r\n\t\t\treturn smartgame.generate({ gameTrees: [wrappedGame.game] });\r\n\t\telse return wrappedGame\r\n\r\n\t}\r\n\t$.inverseTransform = inverseTransform\r\n\r\n\t/**\r\n\t * Main function; converts SGF for a Go variant (so far, just toroidal Go or t-Go).\r\n\t * @param {string} tSgf\r\n\t * @param {object} tGo Engine for counting liberties in t-Go. An instance of go-variants-engine.\r\n\t * @param {*} smartgame\r\n\t * @param {*} smartgamer\r\n\t * @returns {string|object} SGF that can be viewed in a standard SGF viewer. (See `options.transformToString` for the data type of the value returned.)\r\n\t * @public\r\n\t */\r\n\tfunction transform(\r\n\t\ttSgf //eg 11x11 sgf from LittleGolem\r\n\t\t, tGo //app implementing t-Go\r\n\t\t, smartgame\r\n\t\t, smartgamer) {\r\n\r\n\t\tif (tGo === undefined) {\r\n\t\t\ttGo = require('go-variants-engine')({\r\n\t\t\t\t// boardMode:'t',\r\n\t\t\t\tboardDimensions: options.boardDimensions\r\n\t\t\t})\r\n\t\t\t// tGo = require('../node_modules/go-variants-engine')({boardMode:'t', boardDimensions:options.boardDimensions})\r\n\t\t\t// tGo = require('../node_modules/go-variants-engine/src/engine')({boardMode:'t', boardDimensions:options.boardDimensions})\r\n\t\t}\r\n\t\t// else {\r\n\t\t// \ttGo.options.boardDimensions = options.boardDimensions\r\n\t\t// }\r\n\r\n\t\tif (smartgame === undefined) {\r\n\t\t\tsmartgame = require('smartgame')\r\n\t\t}\r\n\t\tif (smartgamer === undefined) {\r\n\t\t\tsmartgamer = require('smartgamer')\r\n\t\t}\r\n\t\t// console.log(tGo)\r\n\t\tlet parsed = smartgame.parse(tSgf)\r\n\t\t\t, wrappedGame = smartgamer(parsed)\r\n\t\t\t, node = wrappedGame.node()\r\n\t\t\t, passes = 0\r\n\t\t\t, pending = []\r\n\t\t\t, currentPath = { m: 0 }\r\n\t\tif (node.SZ !== undefined) {\r\n\t\t\tlet sz = Number(node.SZ)\r\n\t\t\t// sz+= 2*options.projectionSettings.wraparound\r\n\t\t\toptions.boardDimensions = [sz, sz]\r\n\t\t\ttGo.options.boardDimensions = options.boardDimensions\r\n\t\t\tsetUpMarkers()\r\n\t\t}\r\n\t\tnode.SZ = \"\" + (options.boardDimensions[0] + 2 * options.projectionSettings.wraparound)//not sure how to make a rectangular goban!\r\n\t\t//offset modulo\r\n\t\toptions.projectionSettings.offset[0] = modulo(options.projectionSettings.offset[0], options.boardDimensions[0])\r\n\t\toptions.projectionSettings.offset[1] = modulo(options.projectionSettings.offset[1], options.boardDimensions[1])\r\n\t\tlet setLabels = () => {\r\n\t\t\t//node.LB = $.wraparoundAndCoords\r\n\t\t\tlet labels = []\r\n\t\t\tif (node.LB !== undefined) {\r\n\t\t\t\tlabels = node.LB\r\n\t\t\t\tif (!Array.isArray(labels))\r\n\t\t\t\t\tlabels = [labels]\r\n\r\n\t\t\t\t/* jshint loopfunc: true */\r\n\t\t\t\tlet labels2 = labels//_.chain(labels)\r\n\t\t\t\t\t.map(function (x) { return x.split(':', 2) })//assume the label doesn’t contain “:”\r\n\t\t\t\t\t.map(function (x) { return [translateCoordinates(x[0]), x[1]] })\r\n\t\t\t\t\t.map(function (x) { return [$.projectOnFlat(x[0]), x[1]] })\r\n\t\t\t\t// .value()\r\n\t\t\t\tlabels = []\r\n\t\t\t\tfor (let i = 0; i < labels2.length; i++)\r\n\t\t\t\t\tlabels = labels.concat(\r\n\t\t\t\t\t\tlabels2[i][0].map(function (x) {\r\n\t\t\t\t\t\t\treturn $.coords2String(x) + \":\" + labels2[i][1]\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t)\r\n\t\t\t}\r\n\r\n\t\t\tnode.LB = $.wraparoundAndCoords.concat(labels)\r\n\t\t\tif (node.LB.length === 0)\r\n\t\t\t\t// delete node['LB']\r\n\t\t\t\tdelete node.LB\r\n\t\t}\r\n\r\n\t\tsetLabels()\r\n\r\n\t\tif (node.SO !== undefined)\r\n\t\t\tnode.SO = wrappedGame.game.nodes[0].SO + ` (${sourceSgfMessage})`\r\n\t\t//else node.SO = sourceSgfMessage//prefer not to add the message when original Sgf has no SO info.\r\n\r\n\t\tnode.AP = \"go-variants-transformer\"\r\n\r\n\r\n\t\tlet state = { wrappedGame, node, pending, currentPath, tGo }\r\n\r\n\t\tfunction comment(isPass, isBlack) {\r\n\t\t\tif (!options.addComments)\r\n\t\t\t\treturn\r\n\r\n\t\t\tlet r = 'move ' + state.currentPath.m + '\\n' + 'White stones captured by Black: ' + tGo.board.captured[1] + '\\nBlack stones captured by White: ' + tGo.board.captured[0]\r\n\t\t\t//let r =  'Black captures: ' + tGo.board.captured[1] + '\\r\\nWhite captures: ' + tGo.board.captured[0]\r\n\t\t\tif (isPass)\r\n\t\t\t\tr += '\\n' + (isBlack ? 'Black passes' : 'White passes')\r\n\t\t\tr += '\\n--(the content above was generated automatically by GoVariantsTransformer)--'\r\n\t\t\tr += (node.C === undefined ? '' : '\\n' + node.C)\r\n\t\t\tnode.C = r\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tnode = goThroughTree(state)\r\n\t\twhile (node !== null) {\r\n\r\n\r\n\t\t\tlet\r\n\t\t\t\tisBlack = node.B !== undefined\r\n\t\t\t\t, move = isBlack ? node.B : node.W\r\n\t\t\t\t, isPass = move === \"\" || (options.boardDimensions[0] === options.boardDimensions[1]\r\n\t\t\t\t\t&& options.boardDimensions[0] <= 19\r\n\t\t\t\t\t&& move === \"tt\" //weird SGF[3] way to show a pass move!\r\n\t\t\t\t)\r\n\t\t\tif (move === undefined && !isPass) {\r\n\t\t\t\tnode = goThroughTree(state)\r\n\t\t\t\tcontinue\r\n\t\t\t}\r\n\t\t\tsetLabels()\r\n\r\n\t\t\tif (isPass) {\r\n\t\t\t\tdelete node[isBlack ? 'B' : 'W']\r\n\t\t\t\tcomment(isPass, isBlack)\r\n\t\t\t\tnode[isBlack ? 'AB' : 'AW'] = []\r\n\t\t\t\t// if (passes === 2) {\r\n\t\t\t\t// \t//wrappedGame.game.nodes.splice(i+1)//get rid of nodes afterwards -- may not work with variations! todo\r\n\t\t\t\t// \t//todo:score!\r\n\t\t\t\t// \tbreak;//stop after 3 successive passes for now\r\n\t\t\t\t// }\r\n\t\t\t\tpasses++\r\n\t\t\t\tif (passes >= 1000)\r\n\t\t\t\t\tbreak//just in case!\r\n\t\t\t\tnode = goThroughTree(state)\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tconst coords = translateCoordinates(move)\r\n\t\t\t\tlet playResult = null\r\n\t\t\t\t// run move through tGo and update game accordingly\r\n\t\t\t\ttry {\r\n\t\t\t\t\tplayResult = tGo.play(isBlack ? 'b' : 'w', coords)\r\n\r\n\t\t\t\t} catch (error) {\r\n\t\t\t\t\tif (error.message !== 'point is not empty' /*ignore this - it happens with some sgf from littleGolem. Todo: look into scoring the position here. */)\r\n\t\t\t\t\t\tthrow (error)\r\n\t\t\t\t}\r\n\t\t\t\tconst projectedCoords = $.projectOnFlat(coords)\r\n\t\t\t\tlet toAdd = playResult === null ? [] : projectedCoords.map($.coords2String)\r\n\t\t\t\t\t, toRemove = playResult === null ? [] :\r\n\t\t\t\t\t\t// _.chain(playResult.removed)\r\n\t\t\t\t\t\t// \t.flatten(true)\r\n\t\t\t\t\t\t// \t.map($.projectOnFlat)\r\n\t\t\t\t\t\t// \t.flatten(true)\r\n\t\t\t\t\t\t// \t.map($.coords2String)\r\n\t\t\t\t\t\t// \t.value()\r\n\t\t\t\t\t\t_flatten(\r\n\t\t\t\t\t\t\t_flatten(playResult.removed)\r\n\t\t\t\t\t\t\t\t.map($.projectOnFlat))\r\n\t\t\t\t\t\t\t.map($.coords2String)\r\n\r\n\t\t\t\t//alter the node\r\n\t\t\t\tif (options.addPasses)\r\n\t\t\t\t\tnode[isBlack ? 'B' : 'W'] = ''\r\n\t\t\t\telse delete node[isBlack ? 'B' : 'W']\r\n\t\t\t\t// node[isBlack ? 'B' : 'W'] = ''\r\n\t\t\t\tnode[isBlack ? 'AB' : 'AW'] = toAdd\r\n\t\t\t\tif (toAdd.length > 0)\r\n\t\t\t\t\tnode.CR = toAdd\r\n\t\t\t\tif (toRemove.length > 0)\r\n\t\t\t\t\tnode.AE = toRemove\r\n\t\t\t\tcomment(isPass, isBlack)\r\n\r\n\r\n\t\t\t\t\t/*\r\n\t\t\t\t\ttodo: other properties with board coordinates\r\n\t\t\t\t\tLeave for now:\r\n\t\t\t\t\tAR\r\n\t\t\t\t\tLN\r\n\t\t\t\t\t*/\r\n\r\n\t\t\t\t\t;/*note this semicolon is needed! */\r\n\t\t\t\t[\r\n\t\t\t\t\t//'CR',todo: add if not marking the move\r\n\t\t\t\t\t'DD', 'MA', 'SL', 'SQ', 'TR'].forEach(function (sgfProperty) {\r\n\t\t\t\t\t\t// _.map(['DD','MA','SL','SQ','TR'], function(sgfProperty){\r\n\t\t\t\t\t\tif (node[sgfProperty] === undefined) return\r\n\t\t\t\t\t\tlet points = []\r\n\t\t\t\t\t\tif (Array.isArray(node[sgfProperty])) {\r\n\t\t\t\t\t\t\tpoints = node[sgfProperty]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tpoints = [node[sgfProperty]]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tpoints =\r\n\t\t\t\t\t\t\t// _.chain(points)\r\n\t\t\t\t\t\t\t// \t.map(translateCoordinates)\r\n\t\t\t\t\t\t\t// \t.map($.projectOnFlat)\r\n\t\t\t\t\t\t\t// \t.flatten(true)\r\n\t\t\t\t\t\t\t// \t.map($.coords2String)\r\n\t\t\t\t\t\t\t// \t.value()\r\n\t\t\t\t\t\t\t_flatten(\r\n\t\t\t\t\t\t\t\tpoints\r\n\t\t\t\t\t\t\t\t\t.map(translateCoordinates)\r\n\t\t\t\t\t\t\t\t\t.map($.projectOnFlat)\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t.map($.coords2String)\r\n\t\t\t\t\t\tnode[sgfProperty] = points\r\n\t\t\t\t\t})\r\n\t\t\t\tnode.MN = currentPath.m\r\n\t\t\t\t// move to next node\r\n\t\t\t\tnode = goThroughTree(state)\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (options.transformToString)\r\n\t\t\treturn smartgame.generate({ gameTrees: [wrappedGame.game] });\r\n\t\telse return wrappedGame\r\n\t}\r\n\t$.transform = transform\r\n\treturn $\r\n\r\n}\r\nmodule.exports = transformer"]}